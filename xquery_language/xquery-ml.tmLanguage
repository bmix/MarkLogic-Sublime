<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>xq</string>
		<string>xql</string>
		<string>xqm</string>
		<string>xqy</string>
		<string>xquery</string>
	</array>
	<key>name</key>
	<string>XQuery</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>include</key>
			<string>#Xml</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#entity</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#bare-ampersand</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>(&lt;\?)\s*([-_a-zA-Z0-9]+)</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.tag.begin.xml</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.tag.xml</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(\?&gt;)</string>
			<key>name</key>
			<string>meta.tag.preprocessor.xml</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string> ([a-zA-Z-]+)</string>
					<key>name</key>
					<string>entity.other.attribute-name.xml</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#doublequotedString</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#singlequotedString</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>match</key>
			<string>^xquery version .*;$</string>
			<key>name</key>
			<string>keyword.control.import.xquery</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(?i:(\d+\.\d*(e[\-\+]?\d+)?))(?=[^a-zA-Z_])</string>
			<key>name</key>
			<string>constant.numeric.float.xquery</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(?&lt;=[^0-9a-zA-Z_])(?i:(\.\d+(e[\-\+]?\d+)?))</string>
			<key>name</key>
			<string>constant.numeric.float.xquery</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(?i:(\d+e[\-\+]?\d+))</string>
			<key>name</key>
			<string>constant.numeric.float.xquery</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b([1-9]+[0-9]*|0)</string>
			<key>name</key>
			<string>constant.numeric.integer.decimal.xquery</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(import|module|schema)\b</string>
			<key>name</key>
			<string>keyword.control.import.xquery</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>\(:</string>
			<key>captures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.xquery</string>
				</dict>
			</dict>
			<key>end</key>
			<string>:\)</string>
			<key>name</key>
			<string>comment.block.xquery</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#block_comment</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>comment</key>
			<string>http://www.w3.org/TR/xpath-datamodel/#types</string>
			<key>match</key>
			<string>(?&lt;![:\-_a-zA-Z0-9])((xs:)(string|boolean|decimal|float|double|duration|dateTime|time|date|gYearMonth|gYear|gMonthDay|gDay|gMonth|hexBinary|base64Binary|anyURI|QName|NOTATION|anyAtomicType|anyType|anySimpleType|untypedAtomic|dayTimeDuration|yearMonthDuration|integer|nonPositiveInteger|negativeInteger|long|int|short|byte|nonNegativeInteger|unsignedLong|unsignedInt|unsignedShort|unsignedByte|positiveInteger|ENTITY|ID|NMTOKEN|language|NCName|Name|token|normalizedString))(?![:\-_a-zA-Z0-9])</string>
			<key>name</key>
			<string>support.type.xquery</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.variable.xquery</string>
				</dict>
			</dict>
			<key>match</key>
			<string>((\$)(?:([\-_a-zA-Z0-9]+)((:)))?([\-_a-zA-Z0-9]+))</string>
			<key>name</key>
			<string>variable.other.xquery</string>
		</dict>
		<dict>
			<key>match</key>
			<string>/(child|descendant|attribute|self|descendant-or-self|following-sibling|following|parent|ancestor|preceding-sibling|preceding|ancestor-or-self)::</string>
			<key>name</key>
			<string>support.constant.xquery</string>
		</dict>
		<dict>
			<key>name</key>
			<string>meta.function.xquery</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.function.xquery</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.function.xquery</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(function)\s+((?:([\-_a-zA-Z0-9]+):)?([\-_a-zA-Z0-9]+))\s*\(</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#function_parameters</string>
						</dict>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>\s*(function)\s+(?!namespace)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.function.xquery</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\(</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>entity.name.function.xquery</string>
								</dict>
							</dict>
							<key>match</key>
							<string>((?:([\-_a-zA-Z0-9]+):)?([\-_a-zA-Z0-9]+))</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#function_parameters</string>
						</dict>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.xquery</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>storage.type.variable.xquery</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.variable.xquery</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(declare)\s+(variable)\s+(\$(?:[\-_a-zA-Z0-9]+:)?[\-_a-zA-Z0-9]+)</string>
			<key>name</key>
			<string>meta.variable.xquery</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>(declare)\s+(variable)\s*</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.xquery</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>storage.type.variable.xquery</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(\$(?:[\-_a-zA-Z0-9]+:)?[\-_a-zA-Z0-9]+)</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.variable.xquery</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.variable.xquery</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(base-uri|boundary-space|collation|construction|copy-namespaces|declare|default|element|empty(?![-])|function|greatest|import|inherit|instance|least|module|namespace|no-inherit|no-preserve|option|order|ordered|ordering|preserve|strip|unordered|variable|xdmp:mapping|xdmp:transaction-mode|public|private)\b</string>
			<key>name</key>
			<string>keyword.other.prolog.xquery</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(?&lt;![:\-_a-zA-Z0-9])(of|as|by|in|at|or|and)(?![:\-_a-zA-Z0-9])</string>
			<key>name</key>
			<string>keyword.operator.logical.xquery</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.control.flow.xquery</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(?&lt;![:\-_a-zA-Z0-9])(for|let|return|where|if|then|else|order by|satisfies|every|typeswitch|switch|case)(?![:\-_a-zA-Z0-9])</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.type.xquery</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(?&lt;![:\-_a-zA-Z0-9])(element|attribute|document|document-node\(\)|empty-sequence\(\)|schema-element|schema-attribute|processing-instruction|comment|text|node)(?![:\-_a-zA-Z0-9])</string>
		</dict>
		<dict>
			<key>match</key>
			<string>:=</string>
			<key>name</key>
			<string>keyword.operator.assignment.xquery</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(?&lt;![:\-_a-zA-Z0-9])(\+|-|&lt;=?|&gt;=?|eq|ne|lt|le|ge|gt|\*|div|idiv|mod)(?![:\-_a-zA-Z0-9])</string>
			<key>name</key>
			<string>keyword.operator.arithmetic.xquery</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(?&lt;![:\-_a-zA-Z0-9])((fn:)?(unparsed-text|tokenize|seconds-from-dateTime|concat|upper-case|string-length|node-name|format-time|minutes-from-duration|lower-case|id|index-of|month-from-dateTime|generate-id|exists|default-collation|namespace-uri|document|timezone-from-date|position|matches|adjust-dateTime-to-timezone|resolve-uri|format-date|nilled|unparsed-text-available|in-scope-prefixes|filter|local-name-from-QName|prefix-from-QName|codepoints-to-string|namespace-uri-from-QName|string-to-codepoints|format-number|seconds-from-time|name|doc-available|one-or-more|floor|day-from-dateTime|avg|current-dateTime|replace|current-time|collection|namespace-uri-for-prefix|ceiling|type-available|year-from-dateTime|analyze-string|resolve-QName|remove|string-join|dateTime|adjust-time-to-timezone|document-uri|tail|true|escape-html-uri|number|QName|lang|abs|data|compare|base-uri|deep-equal|function-available|day-from-date|last|years-from-duration|insert-before|local-name|adjust-date-to-timezone|map-pairs|not|encode-for-uri|distinct-values|minutes-from-dateTime|string|substring|fold-left|function-arity|round|codepoint-equal|normalize-space|error|timezone-from-time|starts-with|trace|month-from-date|hours-from-duration|normalize-unicode|implicit-timezone|minutes-from-time|map|ends-with|zero-or-one|round-half-to-even|substring-after|iri-to-uri|hours-from-time|head|unordered|escape-uri|days-from-duration|format-dateTime|contains|function-name|boolean|sum|doc|year-from-date|count|months-from-duration|translate|timezone-from-dateTime|reverse|min|substring-before|max|root|static-base-uri|hours-from-dateTime|subsequence|function-lookup|exactly-one|false|fold-right|current-date|seconds-from-duration|empty|idref))(?=\s*\()</string>
			<key>name</key>
			<string>support.function.builtin.xquery</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(?&lt;![:\-_a-zA-Z0-9])(xdmp:(forest-restart|binary-decode|forest-databases|can-grant-roles|zip-create|get-request-user|get-session-field|database-incremental-backup-validate|license-key|type|x509-request-extract|x509-request-generate|request-moment|binary-size|duplicates|castable-as|unquote|redirect-response|get-request-part-headers|document-set-property|invoke-in|http-head|quality|server-port|cluster-config-encryption-key-id|node-delete|cluster-config-encryption-at-rest|parse-dateTime|triple-cache-clear|compressed-tree-cache-size|database-backup-status|ec2-host|key-from-QName|list-cache-partitions|sleep|get-transaction-mode|get-hot-updates|eval-in|cluster-effective-version|get-request-body|to-json|commit|set-response-content-type|yearday-from-date|multipart-decode|get-transaction-by-xid|data-directory|document-set-collections|remove-orphaned-binary|xa-complete1|exists|set-request-time-limit|license-key-decode|javascript-eval|cluster-data-encryption-at-rest|function-parameter-type|node-database|test-future|database-global-nonblocking-timestamp|QName-from-key|default-in-memory-triple-index-size|install-directory|binary-offset|dayname-from-date|default-collections|integer-to-octal|hash64|sql|node-kind|or64|pretty-print|x509-crl-extract|position|xa-complete|forest-compare|directory|gss-server-negotiate|database-restore-cancel|get-request-field-filename|host-cpus|hosts|validate|document-add-permissions|random|to-json-string|forest-rename|is-javascript-path|get-request-method|audit|forests|request|x509-crl-der2pem|resolve-uri|dsa-generate|lock-acquire|email-address|role-roles|binary-is-large|excel-convert|restart|default-in-memory-range-index-size|cluster-version-at-least|node-collections|turtle|transaction-create|write-host-config-file|merging|from-json-string|dump-paths|server-root|annotation|gunzip|request-key|md5|forest-backup-status|url-decode|bootstrap-hosts|word-convert|get-request-protocol|server-group|crypt|apply|test-lazy|add64|keystore-status|http-options|get-request-field|forest-restore|powerpoint-convert|format-number|get-current-roles|host-name|set-session-field|access|delete-host-config-file|and64|group-hosts|enable-event|default-permissions|sha512|server-modules-database|quote|save|forest-counts|license-key-cores|directory-delete|add-response-header|document-properties|user-last-login|credentials|version|server-collation|hash32|get-current-userid|product-name|license-key-options|server-backup|privilege|log-level|weekday-from-date|ec2-product-code|query-meters|host-lock-samples|cluster-logs-encryption-at-rest|document-set-quality|has-privilege|tidy|triple-value-cache-size|groups|set-server-field|language-stemmer-normalization|license-key-cpus|eval|database-assignment-policy|xa-prepare|content-type|group-servers|compressed-tree-cache-clear|forest-status|license-key-version|document-partition-assign|license-key-encode|week-from-date|document-get-properties|default-license-key|filesystem-directory|default-in-memory-limit|nquad|pre-release-expires|query-forests|database-restore|set-response-output-method|triggers-database|function-return-type|set-response-encoding|turtle-get|license-key-agreement|permission|database-path-namespaces|forest-host|function-signature|get-request-error-format|forest-rollback|spawn-function|log|forest-open-replica|forest-bump-master-timestamp|credential|nquad-get|cluster-name|n3-get|expanded-tree-cache-partitions|eager|user-external-security|host-status|xa-forget|collection-locks|month-name-from-date|address-bindable|database-encryption-key-id|gen-key-id|default-preallocate-journals|hex-to-integer|database-backup-cancel|get-request-username|server-database|get-data-key-id|set-transaction-mode|binary-original-length|servers|modules-database|document-add-collections|amp|cache-status|xor64|compressed-tree-cache-partitions|default-in-memory-tree-size|binary-is-small|invoke-function|foreign-cluster-status|default-in-memory-reverse-index-size|forest-docinfos|ldap-search|filesystem-file-rename|merge|plannable|list-cache-clear|database-is-rebalancer-enable|filesystem-file-length|base64-decode|host|get-request-url|database-is-replica|database-partition-forests|database-backup|get-external-variable|forest-online|hostname|uri-format|function-module|request-status|host-size|disable-event|document-remove-permissions|default-licensee|decode-from-NCName|describe|getenv|forest-set-readonly|http-post|server-name|set-hot-updates|license-key-size|host-get-ssl-fips-enabled|product-edition|lazy|collection-delete|database-name|uri-content-type|host-group|host-mode-description|binary-join|triple-cache-partitions|licensee|transaction-commit|query-trace|get-request-field-content-type|customized-binary|encode-for-NCName|forest-combine|collection-properties|function|pdf-convert|get|estimate|smtp-relay|external-security|zip-get|document-get|aws-url-encode|forest-name|subbinary|get-request-port|atomizable|database-backup-validate|lock-for-update|database-is-forest-retired|user-roles|userid-roles|hmac-sha256|database-encryption-at-rest|request-session|xa-complete-xid|lock-release|schema-database|set|match-priority|credential-id|default-journal-size|get-request-client-certificate|forest-updates-allowed|forest-get-readonly|debug-print|get-response-code|value|x509-certificate-extract|group|from-json|secure-credential|integer-to-hex|filesystem-file-delete|spawn-in|delete-cluster-config-file|database-forests|original-binary|request-cancel|hmac-sha1|plan|sha1|path|node-uri|module-cache-clear|product-initials|x509-certificate-generate|trace|node-replace|spawn|get-session-field-names|not64|document-forest|transaction-rollback|stop-journal-archiving|xa-forget-xid|directory-create|get-orphaned-binaries|get-server-field|hmac-sha512|get-request-header-names|external-binary|node-insert-child|server-default-xquery-version|score|http-put|request-timestamp|http-get|username|caller-dialect|cluster-data-encryption-key-id|set-current-transaction|telemetry-status|document-get-events|get-current-user|language-tokenizer-normalization|missing-directories|configuration-timestamp|databases|effective-version|get-request-field-names|foreign-clusters|document-load|expanded-tree-cache-clear|collation-canonical-uri|x509-crl-generate|server-ssl-certificate-template|group-name|document-filter|default-in-memory-list-size|uri-is-file|rsa-generate|shutdown|node-insert-after|set-transaction-time-limit|elapsed-time|external-binary-path|function-parameter-name|read-cluster-config-file|triple-cache-size|forest-backup|mul64|default-s3-domain|set-server-field-privilege|architecture|errorlog-parse|url-encode|rethrow|forest-copy|set-transaction-name|get-ip|filesystem-file-exists|cluster|parse-yymmdd|document-get-permissions|rollback|database-directory-creation|license-key-valid|default-zone|scramble|role|binary-key|expanded-tree-cache-size|resecure-credential|binary-is-external|document-add-properties|mimetypes|database-journal-archive-purge|base64-encode|transaction|function-name|forest-delete|n3|cluster-logs-encryption-key-id|forest-directory-delete|triple-value-cache-clear|initcap|get-response-encoding|quarter-from-date|encoding-language-detect|oldsql|list-cache-size|user|email|get-invoked-path|database-incremental-backup|server|dump-xsd|ldap-lookup|document-timestamp|get-url-rewriter-path|database|diacritic-less|document-get-collections|zip-manifest|http-delete|security-assert|forest-directory-exists|directory-properties|document-remove-collections|privilege-roles|get-request-header|database-maintain-last-modified|document-get-quality|xslt-eval|node-permissions|step64|element-content-type|server-status|invoke|database-restore-validate|strftime|security-version|get-original-url|document-set-properties|group-get-audit-event-type-enabled|functions|node-output-definition|document-insert|start-journal-archiving|read-host-config-file|forest-journal-statistics|logout|product-environment|filesystem-directory-delete|database-nonblocking-timestamp|wallclock-to-timestamp|database-fragment-counts|server-restore|write-cluster-config-file|document-remove-properties|hmac-md5|node-insert-before|document-set-permissions|platform|database-restore-status|set-response-code|octal-to-integer|get-request-path|forest-clear|rshift64|software-version|sha256|default-journal-count|multipart-encode|license-key-expires|triple-value-cache-partitions|xslt-invoke|forest|sha384|get-server-field-names|host-cores|host-mode|get-request-client-address|gzip|timestamp-to-wallclock|test-skiplist|filesystem-file|crypt2|trace-enabled|filesystem-directory-create|unpath|lshift64|filesystem-filepath|get-request-part-body|load|database-backup-purge|security-database|login|document-locks|directory-locks|document-assign|merge-cancel|amp-roles|modules-root|document-delete|xquery-version|host-forests|jobject))(?=\s*\()</string>
			<key>name</key>
			<string>support.function.marklogic.xquery</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(?&lt;![:\-_a-zA-Z0-9])(cts:(element-range-query-options|directory-query-depth|value-ranges|search|field-range-query-operator|element-pair-geospatial-values|element-word-query-element-name|element-attribute-pair-geospatial-boxes|not-in-query|codepoint-tokenizer-class|element-query|path-geospatial-query-weight|field-range-query-options|box-east|element-pair-geospatial-query-latitude-name|geospatial-element-pair-reference|path-geospatial-query-options|element-child-geospatial-query-weight|field-range-query|properties-fragment-query|json-property-child-geospatial-query-child-name|json-property-geospatial-query-property-name|json-property-words|element-attribute-value-query-element-name|parse|json-property-geospatial-query-options|element-child-geospatial-value-match|element-pair-geospatial-value-match|percentile|max|and-query|field-value-query-options|element-pair-geospatial-query|collection-query|point-longitude|true-query|boost-query|registered-query-weight|path-range-query-weight|json-property-pair-geospatial-query-longitude-name|arc-intersection|not-query-weight|element-pair-geospatial-boxes|words|json-property-value-query-value|reference-scalar-type|field-range-query-value|shortest-distance|and-not-query-positive-query|element-range-query-operator|dump-ipd|point|lsqt-query-options|or-query-queries|near-query-options|relevance-info|distinctive-terms|registered-query-options|period-compare-query-operator|min|linear-model|uris|json-property-value-query-text|element-attribute-pair-geospatial-query-longitude-name|element-range-query-value|period-range-query-options|geospatial-boxes|term-query|element-word-query-text|value-tuples|json-property-pair-geospatial-query-weight|element-child-geospatial-values|box-intersects|unordered|json-property-range-query-operator|cluster|covariance|field-word-query|field-value-query|count|locks-query|covariance-p|json-property-geospatial-query|box-south|sum|document-order|period-range-query-period|contains|geospatial-region-query-options|aggregate|element-child-geospatial-query|properties-fragment-query-query|element-geospatial-query|geospatial-region-query|json-property-reference|linestring-vertices|element-pair-geospatial-query-options|element-value-query-element-name|json-property-range-query-weight|destination|lsqt-query-weight|parse-wkt|field-range-query-field-name|permission-query|near-query-queries|registered-query-ids|geospatial-path-reference|element-value-query|geospatial-json-property-reference|json-property-child-geospatial-query-region|element-values|avg-aggregate|element-attribute-reference|circle-center|word-query-weight|lsqt-query-temporal-collection|collection-query-uris|show-get-query|score-order|and-query-queries|box-north|complex-polygon-contains|uri-match|registered-query|test-dictionary|locks-fragment-query|distance|to-wkt|not-in-query-negative-query|json-property-pair-geospatial-query-options|json-property-word-query-weight|json-property-scope-query-query|score|element-value-ranges|complex-polygon|similar-query-nodes|path-range-query|reference-parse|period-compare-query-axis-1|rank|field-word-query-field-name|json-property-geospatial-query-weight|element-range-query-element-name|json-property-pair-geospatial-query|field-words|word-query-options|collections|element-word-query|element-value-match|document-query-uris|json-property-range-query-options|region-contains|stddev-p|polygon-vertices|element-value-query-text|json-property-word-query-property-name|element-attribute-word-query-text|element-query-query|term-query-weight|and-not-query|index-order|element-attribute-value-query-attribute-name|json-property-value-query-options|thresholds|element-attribute-range-query-weight|element-attribute-range-query-attribute-name|path-range-query-path-name|register|circle|element-attribute-value-query-text|reverse-query-nodes|field-value-co-occurrences|circle-radius|json-property-pair-geospatial-query-property-name|element-pair-geospatial-query-element-name|directory-query|element-pair-geospatial-query-longitude-name|triple-range-query-subject|boost-query-matching-query|stddev|json-property-word-match|reverse-query-weight|element-attribute-value-query|period|element-attribute-word-query-attribute-name|confidence|fitness|path-reference|directory-query-uris|element-attribute-values|json-property-word-query-options|field-value-query-field-name|field-word-query-weight|geospatial-attribute-pair-reference|query|period-compare|triple-range-query-operator|element-child-geospatial-boxes|geospatial-region-query-weight|point-latitude|variance-p|element-attribute-pair-geospatial-query-region|element-attribute-word-query-options|element-attribute-pair-geospatial-query-weight|element-geospatial-query-region|false-query|region-intersects|json-property-word-query|json-property-child-geospatial-query|triple-range-query-weight|document-query|json-property-child-geospatial-query-property-name|polygon|properties-query|element-geospatial-query-weight|path-geospatial-query|json-property-pair-geospatial-query-latitude-name|element-attribute-range-query-value|element-attribute-pair-geospatial-query-options|period-range-query|element-child-geospatial-query-child-name|geospatial-co-occurrences|boost-query-boosting-query|path-geospatial-query-path-expression|element-attribute-range-query-options|valid-protected-path|and-query-options|json-property-range-query-property-name|match-regions|element-range-query|locks-fragment-query-query|linestring|reverse-query|stem|field-word-match|path-geospatial-query-region|field-value-query-text|not-query-query|element-word-query-options|path-range-query-operator|element-words|or-query-options|element-range-query-weight|triple-range-query-options|sum-aggregate|value-match|valid-index-path|similar-query|element-geospatial-value-match|field-word-query-options|element-value-query-weight|triple-range-query-object|geospatial-region-query-region|element-attribute-range-query-operator|element-attribute-pair-geospatial-values|document-fragment-query-query|remainder|approx-center|percent-rank|path-range-query-options|avg|values|field-value-ranges|word-query|element-attribute-word-match|element-attribute-pair-geospatial-query-element-name|fitness-order|classify|document-fragment-query|period-compare-query|field-value-query-weight|field-reference|field-values|similar-query-weight|confidence-order|element-attribute-value-ranges|element-child-geospatial-query-element-name|geospatial-element-reference|geospatial-region-path-reference|reference|element-attribute-pair-geospatial-value-match|json-property-geospatial-query-region|element-attribute-word-query|json-property-range-query-value|uri-reference|value-co-occurrences|json-property-pair-geospatial-query-region|element-attribute-value-query-options|train|element-attribute-value-geospatial-co-occurrences|complex-polygon-normalize|element-geospatial-values|write-dictionary|deregister|word-query-text|json-property-value-query-weight|frequency|period-compare-query-options|collection-reference|element-attribute-value-query-weight|element-pair-geospatial-query-weight|geospatial-json-property-pair-reference|or-query|element-geospatial-boxes|triple-range-query-predicate|bearing|polygon-contains|matches|element-geospatial-query-element-name|complex-polygon-inner|element-attribute-word-query-element-name|correlation|circle-intersects|field-value-match|element-geospatial-query-options|period-range-query-operator|element-attribute-value-match|element-attribute-range-query|triple-range-query|near-query-weight|and-not-query-negative-query|collection-match|lsqt-query-timestamp|complex-polygon-intersects|box|element-attribute-words|lsqt-query|triples|element-attribute-pair-geospatial-query-latitude-name|element-attribute-range-query-element-name|complex-polygon-outer|json-property-scope-query|element-attribute-value-co-occurrences|field-range-query-weight|count-aggregate|geospatial-element-child-reference|element-word-query-weight|element-child-geospatial-query-region|element-word-match|field-word-query-text|bounding-boxes|not-query|json-property-scope-query-property-name|near-query-distance|element-query-element-name|variance|word-match|median|index-path-ns-prefixes|geospatial-region-query-operation|near-query|time-series|element-reference|index-path-key|hash-terms|json-property-child-geospatial-query-weight|term-query-term|box-west|element-pair-geospatial-query-region|not-in-query-positive-query|element-attribute-word-query-weight|tokenize|triple-value-statistics|geospatial-region-query-reference|quality-order|element-child-geospatial-query-options|json-property-word-query-text|json-property-range-query|element-value-geospatial-co-occurrences|index-path-keys|element-value-co-occurrences|element-attribute-pair-geospatial-query|quality|geospatial-json-property-child-reference|json-property-value-query|path-range-query-value|json-property-child-geospatial-query-options|polygon-intersects|element-value-query-options|period-compare-query-axis-2|json-property-value-query-property-name|period-range-query-axis|token|space|punctuation|word|special|region|long-lat-point|geospatial-element-attribute-pair-reference|order|search-option))(?=\s*\()</string>
			<key>name</key>
			<string>support.function.cts.xquery</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(?&lt;![:\-_a-zA-Z0-9])(xdmp:([\-_a-zA-Z0-9][\-\._a-zA-Z0-9]*:)?([\-_a-zA-Z0-9][\-\._a-zA-Z0-9]*))\s*\(</string>
			<key>name</key>
			<string>invalid.illegal.function.xdmp</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(?&lt;![:\-_a-zA-Z0-9])(cts:([\-_a-zA-Z0-9][\-\._a-zA-Z0-9]*:)?([\-_a-zA-Z0-9][\-\._a-zA-Z0-9]*))\s*\(</string>
			<key>name</key>
			<string>invalid.illegal.function.cts</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#string</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>(\()</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.begin.xquery</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(\))</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.end.xquery</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>include</key>
			<string>#function_call</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>EntityDecl</key>
		<dict>
			<key>begin</key>
			<string>(&lt;!)(ENTITY)\s+(%\s+)?([:a-zA-Z_][:a-zA-Z0-9_.-]*)(\s+(?:SYSTEM|PUBLIC)\s+)?</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.tag.begin.xml</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.entity.xml</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.entity.xml</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>variable.entity.xml</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>keyword.entitytype.xml</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(&gt;)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#doublequotedStringXml</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#singlequotedStringXml</string>
				</dict>
			</array>
		</dict>
		<key>Xml</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(&lt;\?)\s*([-_a-zA-Z0-9]+)</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.tag.begin.xml</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.tag.xml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(\?&gt;)</string>
					<key>name</key>
					<string>meta.tag.preprocessor.xml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string> ([a-zA-Z-]+)</string>
							<key>name</key>
							<string>entity.other.attribute-name.xml</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#doublequotedString</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#singlequotedString</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(&lt;!)(DOCTYPE)\s+([:a-zA-Z_][:a-zA-Z0-9_.-]*)</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.tag.begin.xml</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.doctype.xml</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>variable.documentroot.xml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\s*(&gt;)</string>
					<key>name</key>
					<string>meta.tag.sgml.doctype.xml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#internalSubset</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>&lt;[!%]--</string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.xml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>--%?&gt;</string>
					<key>name</key>
					<string>comment.block.xml</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>&lt;\?</string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.processing-instruction.xml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\?&gt;</string>
					<key>name</key>
					<string>comment.processing-instruction.xml</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(&lt;)((?:([-_a-zA-Z0-9]+)((:)))?([-_a-zA-Z0-9:]+))(?=(\s[^&gt;]*)?&gt;&lt;/\2&gt;)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.tag.begin.xml</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>entity.name.tag.namespace.xml</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>entity.name.tag.xml</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.namespace.xml</string>
						</dict>
						<key>6</key>
						<dict>
							<key>name</key>
							<string>entity.name.tag.localname.xml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(&gt;)(&lt;)(/)(?:([-_a-zA-Z0-9]+)((:)))?([-_a-zA-Z0-9:]+)(&gt;)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.tag.end.xml</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.tag.begin.xml meta.scope.between-tag-pair.xml</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.tag.begin.xml</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>entity.name.tag.namespace.xml</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>entity.name.tag.xml</string>
						</dict>
						<key>6</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.namespace.xml</string>
						</dict>
						<key>7</key>
						<dict>
							<key>name</key>
							<string>entity.name.tag.localname.xml</string>
						</dict>
						<key>8</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.tag.end.xml</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.tag.no-content.xml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#tagStuff</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(&lt;/?)(?:([-_a-zA-Z0-9]+)((:)))?([-_a-zA-Z0-9:]+)</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.tag.begin.xml</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.tag.namespace.xml</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>entity.name.tag.xml</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.namespace.xml</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>entity.name.tag.localname.xml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(/?&gt;)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.tag.end.xml</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.tag.xml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#tagStuff</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>include</key>
					<string>#entity</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#bare-ampersand</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>&lt;!\[CDATA\[</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.xml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>]]&gt;</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.xml</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.unquoted.cdata.xml</string>
				</dict>
			</array>
		</dict>
		<key>bare-ampersand</key>
		<dict>
			<key>match</key>
			<string>&amp;</string>
			<key>name</key>
			<string>invalid.illegal.bad-ampersand.xml</string>
		</dict>
		<key>block_comment</key>
		<dict>
			<key>begin</key>
			<string>\(:</string>
			<key>end</key>
			<string>:\)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#block_comment</string>
				</dict>
			</array>
		</dict>
		<key>code_block</key>
		<dict>
			<key>begin</key>
			<string>\{</string>
			<key>end</key>
			<string>\}</string>
			<key>name</key>
			<string>meta.code-block.xquery</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
			</array>
		</dict>
		<key>doublequotedString</key>
		<dict>
			<key>begin</key>
			<string>(?&lt;![-_a-zA-Z0-9:]&gt;)\s*"(?!\s*&lt;/[-_a-zA-Z0-9:])</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.xquery</string>
				</dict>
			</dict>
			<key>end</key>
			<string>"</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.xquery</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.double.xquery</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#entity</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#bare-ampersand</string>
				</dict>
			</array>
		</dict>
		<key>doublequotedStringXml</key>
		<dict>
			<key>begin</key>
			<string>"</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.xml</string>
				</dict>
			</dict>
			<key>end</key>
			<string>"</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.xml</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.double.xml</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#entity</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#bare-ampersand</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#code_block</string>
				</dict>
			</array>
		</dict>
		<key>entity</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.constant.xml</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(&amp;)([:a-zA-Z_][:a-zA-Z0-9_.-]*|#[0-9]+|#x[0-9a-fA-F]+)(;)</string>
			<key>name</key>
			<string>constant.character.entity.xml</string>
		</dict>
		<key>function_call</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.parameters.begin.xquery</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(?:[\-_a-zA-Z0-9]+:)?[\-_a-zA-Z0-9]+(?=\()</string>
			<key>name</key>
			<string>support.function.xquery</string>
		</dict>
		<key>function_parameters</key>
		<dict>
			<key>match</key>
			<string>\$([\-_a-zA-Z0-9][\-\._a-zA-Z0-9]*:)?([\-_a-zA-Z0-9][\-\._a-zA-Z0-9]*)</string>
			<key>name</key>
			<string>variable.parameter.xquery</string>
		</dict>
		<key>internalSubset</key>
		<dict>
			<key>begin</key>
			<string>(\[)</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.constant.xml</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(\])</string>
			<key>name</key>
			<string>meta.internalsubset.xml</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#EntityDecl</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#parameterEntity</string>
				</dict>
			</array>
		</dict>
		<key>parameterEntity</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.constant.xml</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.constant.xml</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(%)([:a-zA-Z_][:a-zA-Z0-9_.-]*)(;)</string>
			<key>name</key>
			<string>constant.character.parameter-entity.xml</string>
		</dict>
		<key>singlequotedString</key>
		<dict>
			<key>begin</key>
			<string>(?&lt;![-_a-zA-Z0-9:]&gt;)\s*'(?!\s*&lt;/[-_a-zA-Z0-9:])</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.xquery</string>
				</dict>
			</dict>
			<key>end</key>
			<string>'</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.xquery</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.single.xquery</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#entity</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#bare-ampersand</string>
				</dict>
			</array>
		</dict>
		<key>singlequotedStringXml</key>
		<dict>
			<key>begin</key>
			<string>'</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.xml</string>
				</dict>
			</dict>
			<key>end</key>
			<string>'</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.xml</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.single.xml</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#entity</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#bare-ampersand</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#code_block</string>
				</dict>
			</array>
		</dict>
		<key>string</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#singlequotedString</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#doublequotedString</string>
				</dict>
			</array>
		</dict>
		<key>tagStuff</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.other.attribute-name.namespace.xml</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.other.attribute-name.xml</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.namespace.xml</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>entity.other.attribute-name.localname.xml</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?:([-_a-zA-Z0-9]+)((:)))?([-_a-zA-Z0-9]+)=</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#doublequotedStringXml</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#singlequotedStringXml</string>
				</dict>
			</array>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>source.xquery-ml</string>
	<key>uuid</key>
	<string>cddd8a73-ed1e-4303-a649-a23e816fafa1</string>
</dict>
</plist>
