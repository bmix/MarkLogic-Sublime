[{"content":"admin:appserver-add-module-location(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong}, ${3:\\$module-locations as element(gr:module-location)*})","trigger":"admin:appserver-add-module-location","description":"($config,$appserver-id,$module-locations)"},{"content":"admin:appserver-add-namespace(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong}, ${3:\\$namespaces as element(gr:namespace)*})","trigger":"admin:appserver-add-namespace","description":"($config,$appserver-id,$namespaces)"},{"content":"admin:appserver-add-request-blackout(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong}, ${3:\\$request-blackouts as element(gr:request-blackout)*})","trigger":"admin:appserver-add-request-blackout","description":"($config,$appserver-id,$request-blackouts)"},{"content":"admin:appserver-add-schema(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong}, ${3:\\$schemas as element(gr:schema)*})","trigger":"admin:appserver-add-schema","description":"($config,$appserver-id,$schemas)"},{"content":"admin:appserver-add-using-namespace(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong}, ${3:\\$namespaces as element(gr:using-namespace)*})","trigger":"admin:appserver-add-using-namespace","description":"($config,$appserver-id,$namespaces)"},{"content":"admin:appserver-copy(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong}, ${3:\\$target-group-id as xs:unsignedLong?}, ${4:\\$appserver-name as xs:string}, ${5:\\$port as xs:unsignedLong})","trigger":"admin:appserver-copy","description":"($config,$appserver-id,$target-group-id,$appserver-name,$port)"},{"content":"admin:appserver-delete(${1:\\$config as element(configuration)}, ${2:\\$appserver-ids as xs:unsignedLong*})","trigger":"admin:appserver-delete","description":"($config,$appserver-ids)"},{"content":"admin:appserver-delete-module-location(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong}, ${3:\\$module-locations as element(gr:module-location)*})","trigger":"admin:appserver-delete-module-location","description":"($config,$appserver-id,$module-locations)"},{"content":"admin:appserver-delete-namespace(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong}, ${3:\\$namespaces as element(gr:namespace)*})","trigger":"admin:appserver-delete-namespace","description":"($config,$appserver-id,$namespaces)"},{"content":"admin:appserver-delete-request-blackout(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong}, ${3:\\$blackouts as element(gr:request-blackout)*})","trigger":"admin:appserver-delete-request-blackout","description":"($config,$appserver-id,$blackouts)"},{"content":"admin:appserver-delete-schema(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong}, ${3:\\$schemas as element(gr:schema)*})","trigger":"admin:appserver-delete-schema","description":"($config,$appserver-id,$schemas)"},{"content":"admin:appserver-delete-using-namespace(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong}, ${3:\\$namespaces as element(gr:using-namespace)*})","trigger":"admin:appserver-delete-using-namespace","description":"($config,$appserver-id,$namespaces)"},{"content":"admin:appserver-exists(${1:\\$config as element(configuration)}, ${2:\\$group-ids as xs:unsignedLong*}, ${3:\\$appserver-name as xs:string})","trigger":"admin:appserver-exists","description":"($config,$group-ids,$appserver-name)"},{"content":"admin:appserver-get-address(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong})","trigger":"admin:appserver-get-address","description":"($config,$appserver-id)"},{"content":"admin:appserver-get-authentication(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong})","trigger":"admin:appserver-get-authentication","description":"($config,$appserver-id)"},{"content":"admin:appserver-get-backlog(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong})","trigger":"admin:appserver-get-backlog","description":"($config,$appserver-id)"},{"content":"admin:appserver-get-collation(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong})","trigger":"admin:appserver-get-collation","description":"($config,$appserver-id)"},{"content":"admin:appserver-get-compute-content-length(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong})","trigger":"admin:appserver-get-compute-content-length","description":"($config,$appserver-id)"},{"content":"admin:appserver-get-concurrent-request-limit(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong})","trigger":"admin:appserver-get-concurrent-request-limit","description":"($config,$appserver-id)"},{"content":"admin:appserver-get-connection-timeout(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong})","trigger":"admin:appserver-get-connection-timeout","description":"($config,$appserver-id)"},{"content":"admin:appserver-get-database(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong})","trigger":"admin:appserver-get-database","description":"($config,$appserver-id)"},{"content":"admin:appserver-get-debug-allow(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong})","trigger":"admin:appserver-get-debug-allow","description":"($config,$appserver-id)"},{"content":"admin:appserver-get-default-inference-size(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong})","trigger":"admin:appserver-get-default-inference-size","description":"($config,$appserver-id)"},{"content":"admin:appserver-get-default-query-time-limit(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong})","trigger":"admin:appserver-get-default-query-time-limit","description":"($config,$appserver-id)"},{"content":"admin:appserver-get-default-time-limit(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong})","trigger":"admin:appserver-get-default-time-limit","description":"($config,$appserver-id)"},{"content":"admin:appserver-get-default-user(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong})","trigger":"admin:appserver-get-default-user","description":"($config,$appserver-id)"},{"content":"admin:appserver-get-default-xquery-version(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong})","trigger":"admin:appserver-get-default-xquery-version","description":"($config,$appserver-id)"},{"content":"admin:appserver-get-display-last-login(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong})","trigger":"admin:appserver-get-display-last-login","description":"($config,$appserver-id)"},{"content":"admin:appserver-get-distribute-timestamps(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong})","trigger":"admin:appserver-get-distribute-timestamps","description":"($config,$appserver-id)"},{"content":"admin:appserver-get-enabled(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong})","trigger":"admin:appserver-get-enabled","description":"($config,$appserver-id)"},{"content":"admin:appserver-get-error-handler(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong})","trigger":"admin:appserver-get-error-handler","description":"($config,$appserver-id)"},{"content":"admin:appserver-get-external-security(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong})","trigger":"admin:appserver-get-external-security","description":"($config,$appserver-id)"},{"content":"admin:appserver-get-group-id(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong})","trigger":"admin:appserver-get-group-id","description":"($config,$appserver-id)"},{"content":"admin:appserver-get-host-ids(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong})","trigger":"admin:appserver-get-host-ids","description":"($config,$appserver-id)"},{"content":"admin:appserver-get-id(${1:\\$config as element(configuration)}, ${2:\\$group-ids as xs:unsignedLong*}, ${3:\\$appserver-name as xs:string})","trigger":"admin:appserver-get-id","description":"($config,$group-ids,$appserver-name)"},{"content":"admin:appserver-get-internal-security(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong})","trigger":"admin:appserver-get-internal-security","description":"($config,$appserver-id)"},{"content":"admin:appserver-get-keep-alive-timeout(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong})","trigger":"admin:appserver-get-keep-alive-timeout","description":"($config,$appserver-id)"},{"content":"admin:appserver-get-last-login(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong})","trigger":"admin:appserver-get-last-login","description":"($config,$appserver-id)"},{"content":"admin:appserver-get-log-errors(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong})","trigger":"admin:appserver-get-log-errors","description":"($config,$appserver-id)"},{"content":"admin:appserver-get-max-inference-size(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong})","trigger":"admin:appserver-get-max-inference-size","description":"($config,$appserver-id)"},{"content":"admin:appserver-get-max-query-time-limit(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong})","trigger":"admin:appserver-get-max-query-time-limit","description":"($config,$appserver-id)"},{"content":"admin:appserver-get-max-time-limit(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong})","trigger":"admin:appserver-get-max-time-limit","description":"($config,$appserver-id)"},{"content":"admin:appserver-get-module-locations(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong})","trigger":"admin:appserver-get-module-locations","description":"($config,$appserver-id)"},{"content":"admin:appserver-get-modules-database(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong})","trigger":"admin:appserver-get-modules-database","description":"($config,$appserver-id)"},{"content":"admin:appserver-get-multi-version-concurrency-control(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong})","trigger":"admin:appserver-get-multi-version-concurrency-control","description":"($config,$appserver-id)"},{"content":"admin:appserver-get-name(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong})","trigger":"admin:appserver-get-name","description":"($config,$appserver-id)"},{"content":"admin:appserver-get-namespaces(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong})","trigger":"admin:appserver-get-namespaces","description":"($config,$appserver-id)"},{"content":"admin:appserver-get-output-byte-order-mark(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong})","trigger":"admin:appserver-get-output-byte-order-mark","description":"($config,$appserver-id)"},{"content":"admin:appserver-get-output-cdata-section-localname(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong})","trigger":"admin:appserver-get-output-cdata-section-localname","description":"($config,$appserver-id)"},{"content":"admin:appserver-get-output-cdata-section-namespace-uri(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong})","trigger":"admin:appserver-get-output-cdata-section-namespace-uri","description":"($config,$appserver-id)"},{"content":"admin:appserver-get-output-doctype-public(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong})","trigger":"admin:appserver-get-output-doctype-public","description":"($config,$appserver-id)"},{"content":"admin:appserver-get-output-doctype-system(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong})","trigger":"admin:appserver-get-output-doctype-system","description":"($config,$appserver-id)"},{"content":"admin:appserver-get-output-encoding(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong})","trigger":"admin:appserver-get-output-encoding","description":"($config,$appserver-id)"},{"content":"admin:appserver-get-output-escape-uri-attributes(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong})","trigger":"admin:appserver-get-output-escape-uri-attributes","description":"($config,$appserver-id)"},{"content":"admin:appserver-get-output-include-content-type(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong})","trigger":"admin:appserver-get-output-include-content-type","description":"($config,$appserver-id)"},{"content":"admin:appserver-get-output-include-default-attributes(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong})","trigger":"admin:appserver-get-output-include-default-attributes","description":"($config,$appserver-id)"},{"content":"admin:appserver-get-output-indent(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong})","trigger":"admin:appserver-get-output-indent","description":"($config,$appserver-id)"},{"content":"admin:appserver-get-output-indent-untyped(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong})","trigger":"admin:appserver-get-output-indent-untyped","description":"($config,$appserver-id)"},{"content":"admin:appserver-get-output-media-type(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong})","trigger":"admin:appserver-get-output-media-type","description":"($config,$appserver-id)"},{"content":"admin:appserver-get-output-method(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong})","trigger":"admin:appserver-get-output-method","description":"($config,$appserver-id)"},{"content":"admin:appserver-get-output-normalization-form(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong})","trigger":"admin:appserver-get-output-normalization-form","description":"($config,$appserver-id)"},{"content":"admin:appserver-get-output-omit-xml-declaration(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong})","trigger":"admin:appserver-get-output-omit-xml-declaration","description":"($config,$appserver-id)"},{"content":"admin:appserver-get-output-sgml-character-entities(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong})","trigger":"admin:appserver-get-output-sgml-character-entities","description":"($config,$appserver-id)"},{"content":"admin:appserver-get-output-standalone(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong})","trigger":"admin:appserver-get-output-standalone","description":"($config,$appserver-id)"},{"content":"admin:appserver-get-output-undeclare-prefixes(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong})","trigger":"admin:appserver-get-output-undeclare-prefixes","description":"($config,$appserver-id)"},{"content":"admin:appserver-get-output-version(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong})","trigger":"admin:appserver-get-output-version","description":"($config,$appserver-id)"},{"content":"admin:appserver-get-port(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong})","trigger":"admin:appserver-get-port","description":"($config,$appserver-id)"},{"content":"admin:appserver-get-pre-commit-trigger-depth(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong})","trigger":"admin:appserver-get-pre-commit-trigger-depth","description":"($config,$appserver-id)"},{"content":"admin:appserver-get-pre-commit-trigger-limit(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong})","trigger":"admin:appserver-get-pre-commit-trigger-limit","description":"($config,$appserver-id)"},{"content":"admin:appserver-get-privilege(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong})","trigger":"admin:appserver-get-privilege","description":"($config,$appserver-id)"},{"content":"admin:appserver-get-profile-allow(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong})","trigger":"admin:appserver-get-profile-allow","description":"($config,$appserver-id)"},{"content":"admin:appserver-get-request-blackouts(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong})","trigger":"admin:appserver-get-request-blackouts","description":"($config,$appserver-id)"},{"content":"admin:appserver-get-request-timeout(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong})","trigger":"admin:appserver-get-request-timeout","description":"($config,$appserver-id)"},{"content":"admin:appserver-get-rewrite-resolves-globally(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong})","trigger":"admin:appserver-get-rewrite-resolves-globally","description":"($config,$appserver-id)"},{"content":"admin:appserver-get-root(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong})","trigger":"admin:appserver-get-root","description":"($config,$appserver-id)"},{"content":"admin:appserver-get-schemas(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong})","trigger":"admin:appserver-get-schemas","description":"($config,$appserver-id)"},{"content":"admin:appserver-get-session-timeout(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong})","trigger":"admin:appserver-get-session-timeout","description":"($config,$appserver-id)"},{"content":"admin:appserver-get-ssl-allow-sslv3(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong})","trigger":"admin:appserver-get-ssl-allow-sslv3","description":"($config,$appserver-id)"},{"content":"admin:appserver-get-ssl-allow-tls(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong})","trigger":"admin:appserver-get-ssl-allow-tls","description":"($config,$appserver-id)"},{"content":"admin:appserver-get-ssl-certificate-template(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong})","trigger":"admin:appserver-get-ssl-certificate-template","description":"($config,$appserver-id)"},{"content":"admin:appserver-get-ssl-ciphers(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong})","trigger":"admin:appserver-get-ssl-ciphers","description":"($config,$appserver-id)"},{"content":"admin:appserver-get-ssl-client-certificate-authorities(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong})","trigger":"admin:appserver-get-ssl-client-certificate-authorities","description":"($config,$appserver-id)"},{"content":"admin:appserver-get-ssl-hostname(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong})","trigger":"admin:appserver-get-ssl-hostname","description":"($config,$appserver-id)"},{"content":"admin:appserver-get-ssl-require-client-certificate(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong})","trigger":"admin:appserver-get-ssl-require-client-certificate","description":"($config,$appserver-id)"},{"content":"admin:appserver-get-static-expires(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong})","trigger":"admin:appserver-get-static-expires","description":"($config,$appserver-id)"},{"content":"admin:appserver-get-threads(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong})","trigger":"admin:appserver-get-threads","description":"($config,$appserver-id)"},{"content":"admin:appserver-get-type(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong})","trigger":"admin:appserver-get-type","description":"($config,$appserver-id)"},{"content":"admin:appserver-get-url-rewriter(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong})","trigger":"admin:appserver-get-url-rewriter","description":"($config,$appserver-id)"},{"content":"admin:appserver-get-using-namespaces(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong})","trigger":"admin:appserver-get-using-namespaces","description":"($config,$appserver-id)"},{"content":"admin:appserver-one-time-request-blackout(${1:\\$users as xs:unsignedLong*}, ${2:\\$roles as xs:unsignedLong*}, ${3:\\$start as xs:dateTime}, ${4:\\$end as xs:dateTime?}, ${5:\\$duration as xs:duration?})","trigger":"admin:appserver-one-time-request-blackout","description":"($users,$roles,$start,$end,$duration)"},{"content":"admin:appserver-recurring-request-blackout(${1:\\$users as xs:unsignedLong*}, ${2:\\$roles as xs:unsignedLong*}, ${3:\\$days as xs:string*}, ${4:\\$start-time as xs:time?}, ${5:\\$end-time as xs:time?}, ${6:\\$duration as xs:duration?})","trigger":"admin:appserver-recurring-request-blackout","description":"($users,$roles,$days,$start-time,$end-time,$duration)"},{"content":"admin:appserver-set-address(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong}, ${3:\\$value as xs:string})","trigger":"admin:appserver-set-address","description":"($config,$appserver-id,$value)"},{"content":"admin:appserver-set-authentication(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong}, ${3:\\$value as xs:string})","trigger":"admin:appserver-set-authentication","description":"($config,$appserver-id,$value)"},{"content":"admin:appserver-set-backlog(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong}, ${3:\\$value as xs:unsignedInt})","trigger":"admin:appserver-set-backlog","description":"($config,$appserver-id,$value)"},{"content":"admin:appserver-set-collation(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong}, ${3:\\$value as xs:string})","trigger":"admin:appserver-set-collation","description":"($config,$appserver-id,$value)"},{"content":"admin:appserver-set-compute-content-length(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong}, ${3:\\$value as xs:boolean})","trigger":"admin:appserver-set-compute-content-length","description":"($config,$appserver-id,$value)"},{"content":"admin:appserver-set-concurrent-request-limit(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong}, ${3:\\$value as xs:unsignedInt})","trigger":"admin:appserver-set-concurrent-request-limit","description":"($config,$appserver-id,$value)"},{"content":"admin:appserver-set-connection-timeout(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong}, ${3:\\$value as xs:unsignedInt})","trigger":"admin:appserver-set-connection-timeout","description":"($config,$appserver-id,$value)"},{"content":"admin:appserver-set-database(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong}, ${3:\\$value as xs:unsignedLong})","trigger":"admin:appserver-set-database","description":"($config,$appserver-id,$value)"},{"content":"admin:appserver-set-debug-allow(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong}, ${3:\\$value as xs:boolean})","trigger":"admin:appserver-set-debug-allow","description":"($config,$appserver-id,$value)"},{"content":"admin:appserver-set-default-inference-size(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong}, ${3:\\$value as xs:unsignedInt})","trigger":"admin:appserver-set-default-inference-size","description":"($config,$appserver-id,$value)"},{"content":"admin:appserver-set-default-query-time-limit(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong}, ${3:\\$value as xs:unsignedInt})","trigger":"admin:appserver-set-default-query-time-limit","description":"($config,$appserver-id,$value)"},{"content":"admin:appserver-set-default-time-limit(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong}, ${3:\\$value as xs:unsignedInt})","trigger":"admin:appserver-set-default-time-limit","description":"($config,$appserver-id,$value)"},{"content":"admin:appserver-set-default-user(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong}, ${3:\\$value as xs:unsignedLong})","trigger":"admin:appserver-set-default-user","description":"($config,$appserver-id,$value)"},{"content":"admin:appserver-set-default-xquery-version(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong}, ${3:\\$value as xs:string})","trigger":"admin:appserver-set-default-xquery-version","description":"($config,$appserver-id,$value)"},{"content":"admin:appserver-set-display-last-login(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong}, ${3:\\$value as xs:boolean})","trigger":"admin:appserver-set-display-last-login","description":"($config,$appserver-id,$value)"},{"content":"admin:appserver-set-distribute-timestamps(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong}, ${3:\\$value as xs:string})","trigger":"admin:appserver-set-distribute-timestamps","description":"($config,$appserver-id,$value)"},{"content":"admin:appserver-set-enabled(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong}, ${3:\\$value as xs:boolean})","trigger":"admin:appserver-set-enabled","description":"($config,$appserver-id,$value)"},{"content":"admin:appserver-set-error-handler(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong}, ${3:\\$value as xs:string})","trigger":"admin:appserver-set-error-handler","description":"($config,$appserver-id,$value)"},{"content":"admin:appserver-set-external-security(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong}, ${3:\\$value as xs:string}, ${4:\\$value2 as xs:boolean}, ${5:\\$value3 as xs:string})","trigger":"admin:appserver-set-external-security","description":"($config,$appserver-id,$value,$value2,$value3)"},{"content":"admin:appserver-set-internal-security(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong}, ${3:\\$value as xs:boolean})","trigger":"admin:appserver-set-internal-security","description":"($config,$appserver-id,$value)"},{"content":"admin:appserver-set-keep-alive-timeout(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong}, ${3:\\$value as xs:unsignedInt})","trigger":"admin:appserver-set-keep-alive-timeout","description":"($config,$appserver-id,$value)"},{"content":"admin:appserver-set-last-login(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong}, ${3:\\$value as xs:unsignedLong?})","trigger":"admin:appserver-set-last-login","description":"($config,$appserver-id,$value)"},{"content":"admin:appserver-set-log-errors(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong}, ${3:\\$value as xs:boolean})","trigger":"admin:appserver-set-log-errors","description":"($config,$appserver-id,$value)"},{"content":"admin:appserver-set-max-inference-size(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong}, ${3:\\$value as xs:unsignedInt})","trigger":"admin:appserver-set-max-inference-size","description":"($config,$appserver-id,$value)"},{"content":"admin:appserver-set-max-query-time-limit(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong}, ${3:\\$value as xs:unsignedInt})","trigger":"admin:appserver-set-max-query-time-limit","description":"($config,$appserver-id,$value)"},{"content":"admin:appserver-set-max-time-limit(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong}, ${3:\\$value as xs:unsignedInt})","trigger":"admin:appserver-set-max-time-limit","description":"($config,$appserver-id,$value)"},{"content":"admin:appserver-set-modules-database(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong}, ${3:\\$value as item()})","trigger":"admin:appserver-set-modules-database","description":"($config,$appserver-id,$value)"},{"content":"admin:appserver-set-multi-version-concurrency-control(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong}, ${3:\\$value as xs:string})","trigger":"admin:appserver-set-multi-version-concurrency-control","description":"($config,$appserver-id,$value)"},{"content":"admin:appserver-set-name(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong}, ${3:\\$value as xs:string})","trigger":"admin:appserver-set-name","description":"($config,$appserver-id,$value)"},{"content":"admin:appserver-set-output-byte-order-mark(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong}, ${3:\\$value as xs:string})","trigger":"admin:appserver-set-output-byte-order-mark","description":"($config,$appserver-id,$value)"},{"content":"admin:appserver-set-output-cdata-section-localname(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong}, ${3:\\$value as xs:string})","trigger":"admin:appserver-set-output-cdata-section-localname","description":"($config,$appserver-id,$value)"},{"content":"admin:appserver-set-output-cdata-section-namespace-uri(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong}, ${3:\\$value as xs:string})","trigger":"admin:appserver-set-output-cdata-section-namespace-uri","description":"($config,$appserver-id,$value)"},{"content":"admin:appserver-set-output-doctype-public(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong}, ${3:\\$value as xs:string})","trigger":"admin:appserver-set-output-doctype-public","description":"($config,$appserver-id,$value)"},{"content":"admin:appserver-set-output-doctype-system(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong}, ${3:\\$value as xs:string})","trigger":"admin:appserver-set-output-doctype-system","description":"($config,$appserver-id,$value)"},{"content":"admin:appserver-set-output-encoding(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong}, ${3:\\$value as xs:string})","trigger":"admin:appserver-set-output-encoding","description":"($config,$appserver-id,$value)"},{"content":"admin:appserver-set-output-escape-uri-attributes(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong}, ${3:\\$value as xs:string})","trigger":"admin:appserver-set-output-escape-uri-attributes","description":"($config,$appserver-id,$value)"},{"content":"admin:appserver-set-output-include-content-type(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong}, ${3:\\$value as xs:string})","trigger":"admin:appserver-set-output-include-content-type","description":"($config,$appserver-id,$value)"},{"content":"admin:appserver-set-output-include-default-attributes(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong}, ${3:\\$value as xs:string})","trigger":"admin:appserver-set-output-include-default-attributes","description":"($config,$appserver-id,$value)"},{"content":"admin:appserver-set-output-indent(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong}, ${3:\\$value as xs:string})","trigger":"admin:appserver-set-output-indent","description":"($config,$appserver-id,$value)"},{"content":"admin:appserver-set-output-indent-untyped(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong}, ${3:\\$value as xs:string})","trigger":"admin:appserver-set-output-indent-untyped","description":"($config,$appserver-id,$value)"},{"content":"admin:appserver-set-output-media-type(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong}, ${3:\\$value as xs:string})","trigger":"admin:appserver-set-output-media-type","description":"($config,$appserver-id,$value)"},{"content":"admin:appserver-set-output-method(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong}, ${3:\\$value as xs:string})","trigger":"admin:appserver-set-output-method","description":"($config,$appserver-id,$value)"},{"content":"admin:appserver-set-output-normalization-form(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong}, ${3:\\$value as xs:string})","trigger":"admin:appserver-set-output-normalization-form","description":"($config,$appserver-id,$value)"},{"content":"admin:appserver-set-output-omit-xml-declaration(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong}, ${3:\\$value as xs:string})","trigger":"admin:appserver-set-output-omit-xml-declaration","description":"($config,$appserver-id,$value)"},{"content":"admin:appserver-set-output-sgml-character-entities(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong}, ${3:\\$value as xs:string})","trigger":"admin:appserver-set-output-sgml-character-entities","description":"($config,$appserver-id,$value)"},{"content":"admin:appserver-set-output-standalone(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong}, ${3:\\$value as xs:string})","trigger":"admin:appserver-set-output-standalone","description":"($config,$appserver-id,$value)"},{"content":"admin:appserver-set-output-undeclare-prefixes(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong}, ${3:\\$value as xs:string})","trigger":"admin:appserver-set-output-undeclare-prefixes","description":"($config,$appserver-id,$value)"},{"content":"admin:appserver-set-output-version(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong}, ${3:\\$value as xs:string})","trigger":"admin:appserver-set-output-version","description":"($config,$appserver-id,$value)"},{"content":"admin:appserver-set-port(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong}, ${3:\\$value as xs:unsignedInt})","trigger":"admin:appserver-set-port","description":"($config,$appserver-id,$value)"},{"content":"admin:appserver-set-pre-commit-trigger-depth(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong}, ${3:\\$value as xs:unsignedInt})","trigger":"admin:appserver-set-pre-commit-trigger-depth","description":"($config,$appserver-id,$value)"},{"content":"admin:appserver-set-pre-commit-trigger-limit(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong}, ${3:\\$value as xs:unsignedInt})","trigger":"admin:appserver-set-pre-commit-trigger-limit","description":"($config,$appserver-id,$value)"},{"content":"admin:appserver-set-privilege(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong}, ${3:\\$value as xs:unsignedLong})","trigger":"admin:appserver-set-privilege","description":"($config,$appserver-id,$value)"},{"content":"admin:appserver-set-profile-allow(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong}, ${3:\\$value as xs:boolean})","trigger":"admin:appserver-set-profile-allow","description":"($config,$appserver-id,$value)"},{"content":"admin:appserver-set-request-timeout(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong}, ${3:\\$value as xs:unsignedInt})","trigger":"admin:appserver-set-request-timeout","description":"($config,$appserver-id,$value)"},{"content":"admin:appserver-set-rewrite-resolves-globally(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong}, ${3:\\$value as xs:boolean})","trigger":"admin:appserver-set-rewrite-resolves-globally","description":"($config,$appserver-id,$value)"},{"content":"admin:appserver-set-root(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong}, ${3:\\$value as xs:string})","trigger":"admin:appserver-set-root","description":"($config,$appserver-id,$value)"},{"content":"admin:appserver-set-session-timeout(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong}, ${3:\\$value as xs:unsignedInt})","trigger":"admin:appserver-set-session-timeout","description":"($config,$appserver-id,$value)"},{"content":"admin:appserver-set-ssl-allow-sslv3(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong}, ${3:\\$value as xs:boolean})","trigger":"admin:appserver-set-ssl-allow-sslv3","description":"($config,$appserver-id,$value)"},{"content":"admin:appserver-set-ssl-allow-tls(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong}, ${3:\\$value as xs:boolean})","trigger":"admin:appserver-set-ssl-allow-tls","description":"($config,$appserver-id,$value)"},{"content":"admin:appserver-set-ssl-certificate-template(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong}, ${3:\\$value as xs:unsignedLong})","trigger":"admin:appserver-set-ssl-certificate-template","description":"($config,$appserver-id,$value)"},{"content":"admin:appserver-set-ssl-ciphers(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong}, ${3:\\$value as xs:string})","trigger":"admin:appserver-set-ssl-ciphers","description":"($config,$appserver-id,$value)"},{"content":"admin:appserver-set-ssl-client-certificate-authorities(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong}, ${3:\\$value as xs:unsignedLong*})","trigger":"admin:appserver-set-ssl-client-certificate-authorities","description":"($config,$appserver-id,$value)"},{"content":"admin:appserver-set-ssl-hostname(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong}, ${3:\\$value as xs:string})","trigger":"admin:appserver-set-ssl-hostname","description":"($config,$appserver-id,$value)"},{"content":"admin:appserver-set-ssl-require-client-certificate(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong}, ${3:\\$value as xs:boolean})","trigger":"admin:appserver-set-ssl-require-client-certificate","description":"($config,$appserver-id,$value)"},{"content":"admin:appserver-set-static-expires(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong}, ${3:\\$value as xs:unsignedInt})","trigger":"admin:appserver-set-static-expires","description":"($config,$appserver-id,$value)"},{"content":"admin:appserver-set-threads(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong}, ${3:\\$value as xs:unsignedInt})","trigger":"admin:appserver-set-threads","description":"($config,$appserver-id,$value)"},{"content":"admin:appserver-set-url-rewriter(${1:\\$config as element(configuration)}, ${2:\\$appserver-id as xs:unsignedLong}, ${3:\\$value as xs:string})","trigger":"admin:appserver-set-url-rewriter","description":"($config,$appserver-id,$value)"},{"content":"admin:bucket-assignment-policy()","trigger":"admin:bucket-assignment-policy"},{"content":"admin:cluster-get-foreign-cluster-id(${1:\\$config as element(configuration)}, ${2:\\$name as xs:string})","trigger":"admin:cluster-get-foreign-cluster-id","description":"($config,$name)"},{"content":"admin:cluster-get-foreign-cluster-ids(${1:\\$config as element(configuration)})","trigger":"admin:cluster-get-foreign-cluster-ids","description":"($config)"},{"content":"admin:cluster-get-foreign-master-database(${1:\\$config as element(configuration)}, ${2:\\$foreign-cluster-id as xs:unsignedLong}, ${3:\\$database-ids as xs:unsignedLong*})","trigger":"admin:cluster-get-foreign-master-database","description":"($config,$foreign-cluster-id,$database-ids)"},{"content":"admin:cluster-get-foreign-replica-databases(${1:\\$config as element(configuration)}, ${2:\\$foreign-cluster-id as xs:unsignedLong}, ${3:\\$database-ids as xs:unsignedLong*})","trigger":"admin:cluster-get-foreign-replica-databases","description":"($config,$foreign-cluster-id,$database-ids)"},{"content":"admin:cluster-get-id(${1:\\$config as element(configuration)})","trigger":"admin:cluster-get-id","description":"($config)"},{"content":"admin:cluster-get-name(${1:\\$config as element(configuration)})","trigger":"admin:cluster-get-name","description":"($config)"},{"content":"admin:cluster-get-ssl-fips-enabled(${1:\\$config as element(configuration)})","trigger":"admin:cluster-get-ssl-fips-enabled","description":"($config)"},{"content":"admin:cluster-get-xdqp-bootstrap-hosts(${1:\\$config as element(configuration)})","trigger":"admin:cluster-get-xdqp-bootstrap-hosts","description":"($config)"},{"content":"admin:cluster-get-xdqp-ssl-certificate(${1:\\$config as element(configuration)})","trigger":"admin:cluster-get-xdqp-ssl-certificate","description":"($config)"},{"content":"admin:cluster-get-xdqp-ssl-private-key(${1:\\$config as element(configuration)})","trigger":"admin:cluster-get-xdqp-ssl-private-key","description":"($config)"},{"content":"admin:cluster-set-name(${1:\\$config as element(configuration)}, ${2:\\$name as xs:string})","trigger":"admin:cluster-set-name","description":"($config,$name)"},{"content":"admin:cluster-set-ssl-fips-enabled(${1:\\$config as element(configuration)}, ${2:\\$flag as xs:boolean})","trigger":"admin:cluster-set-ssl-fips-enabled","description":"($config,$flag)"},{"content":"admin:cluster-set-xdqp-bootstrap-hosts(${1:\\$config as element(configuration)}, ${2:\\$host-ids as xs:unsignedLong*})","trigger":"admin:cluster-set-xdqp-bootstrap-hosts","description":"($config,$host-ids)"},{"content":"admin:cluster-set-xdqp-ssl-certificate(${1:\\$config as element(configuration)}, ${2:\\$value as xs:string})","trigger":"admin:cluster-set-xdqp-ssl-certificate","description":"($config,$value)"},{"content":"admin:database-add-backup(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$backups as element(db:database-backup)*})","trigger":"admin:database-add-backup","description":"($config,$database-id,$backups)"},{"content":"admin:database-add-default-ruleset(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$rulesets as element(db:ruleset)*})","trigger":"admin:database-add-default-ruleset","description":"($config,$database-id,$rulesets)"},{"content":"admin:database-add-element-attribute-word-lexicon(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$element-attribute-word-lexicons as element(db:element-attribute-word-lexicon)*})","trigger":"admin:database-add-element-attribute-word-lexicon","description":"($config,$database-id,$element-attribute-word-lexicons)"},{"content":"admin:database-add-element-word-lexicon(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$element-word-lexicons as element(db:element-word-lexicon)*})","trigger":"admin:database-add-element-word-lexicon","description":"($config,$database-id,$element-word-lexicons)"},{"content":"admin:database-add-element-word-query-through(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$element-word-query-throughs as element(db:element-word-query-through)*})","trigger":"admin:database-add-element-word-query-through","description":"($config,$database-id,$element-word-query-throughs)"},{"content":"admin:database-add-field(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$fields as element(db:field)*})","trigger":"admin:database-add-field","description":"($config,$database-id,$fields)"},{"content":"admin:database-add-field-excluded-element(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$field-name as xs:string}, ${4:\\$excluded-elements as element(db:excluded-element)*})","trigger":"admin:database-add-field-excluded-element","description":"($config,$database-id,$field-name,$excluded-elements)"},{"content":"admin:database-add-field-included-element(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$field-name as xs:string}, ${4:\\$included-elements as element(db:included-element)*})","trigger":"admin:database-add-field-included-element","description":"($config,$database-id,$field-name,$included-elements)"},{"content":"admin:database-add-field-paths(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$field-name as xs:string}, ${4:\\$field-paths as element(db:field-path)*})","trigger":"admin:database-add-field-paths","description":"($config,$database-id,$field-name,$field-paths)"},{"content":"admin:database-add-field-tokenizer-override(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$field-name as xs:string}, ${4:\\$tokenizer-overrides as element(db:tokenizer-override)*})","trigger":"admin:database-add-field-tokenizer-override","description":"($config,$database-id,$field-name,$tokenizer-overrides)"},{"content":"admin:database-add-field-word-lexicon(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$field-name as xs:string}, ${4:\\$word-lexicons as element(db:word-lexicon)*})","trigger":"admin:database-add-field-word-lexicon","description":"($config,$database-id,$field-name,$word-lexicons)"},{"content":"admin:database-add-foreign-replicas(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$replicas as element(db:foreign-replica)*})","trigger":"admin:database-add-foreign-replicas","description":"($config,$database-id,$replicas)"},{"content":"admin:database-add-fragment-parent(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$fragment-parents as element(db:fragment-parent)*})","trigger":"admin:database-add-fragment-parent","description":"($config,$database-id,$fragment-parents)"},{"content":"admin:database-add-fragment-root(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$fragment-roots as element(db:fragment-root)*})","trigger":"admin:database-add-fragment-root","description":"($config,$database-id,$fragment-roots)"},{"content":"admin:database-add-geospatial-element-attribute-pair-index(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$geospatial-element-attribute-pair-indexes as element(db:geospatial-element-attribute-pair-index)*})","trigger":"admin:database-add-geospatial-element-attribute-pair-index","description":"($config,$database-id,$geospatial-element-attribute-pair-indexes)"},{"content":"admin:database-add-geospatial-element-child-index(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$geospatial-element-child-indexes as element(db:geospatial-element-child-index)*})","trigger":"admin:database-add-geospatial-element-child-index","description":"($config,$database-id,$geospatial-element-child-indexes)"},{"content":"admin:database-add-geospatial-element-index(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$geospatial-element-indexes as element(db:geospatial-element-index)*})","trigger":"admin:database-add-geospatial-element-index","description":"($config,$database-id,$geospatial-element-indexes)"},{"content":"admin:database-add-geospatial-element-pair-index(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$geospatial-element-pair-indexes as element(db:geospatial-element-pair-index)*})","trigger":"admin:database-add-geospatial-element-pair-index","description":"($config,$database-id,$geospatial-element-pair-indexes)"},{"content":"admin:database-add-geospatial-path-index(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$geospatial-path-indexes as element(db:geospatial-path-index)*})","trigger":"admin:database-add-geospatial-path-index","description":"($config,$database-id,$geospatial-path-indexes)"},{"content":"admin:database-add-merge-blackout(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$merge-blackouts as element(db:merge-blackout)*})","trigger":"admin:database-add-merge-blackout","description":"($config,$database-id,$merge-blackouts)"},{"content":"admin:database-add-path-namespace(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$path-namespaces as element(db:path-namespace)*})","trigger":"admin:database-add-path-namespace","description":"($config,$database-id,$path-namespaces)"},{"content":"admin:database-add-phrase-around(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$phrase-arounds as element(db:phrase-around)*})","trigger":"admin:database-add-phrase-around","description":"($config,$database-id,$phrase-arounds)"},{"content":"admin:database-add-phrase-through(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$phrase-throughs as element(db:phrase-through)*})","trigger":"admin:database-add-phrase-through","description":"($config,$database-id,$phrase-throughs)"},{"content":"admin:database-add-range-element-attribute-index(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$attribute-indexes as element(db:range-element-attribute-index)*})","trigger":"admin:database-add-range-element-attribute-index","description":"($config,$database-id,$attribute-indexes)"},{"content":"admin:database-add-range-element-index(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$range-indexes as element(db:range-element-index)*})","trigger":"admin:database-add-range-element-index","description":"($config,$database-id,$range-indexes)"},{"content":"admin:database-add-range-field-index(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$range-indexes as element(db:range-field-index)*})","trigger":"admin:database-add-range-field-index","description":"($config,$database-id,$range-indexes)"},{"content":"admin:database-add-range-path-index(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$range-indexes as element(db:range-path-index)*})","trigger":"admin:database-add-range-path-index","description":"($config,$database-id,$range-indexes)"},{"content":"admin:database-add-word-lexicon(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$word-lexicons as element(db:word-lexicon)*})","trigger":"admin:database-add-word-lexicon","description":"($config,$database-id,$word-lexicons)"},{"content":"admin:database-add-word-query-excluded-element(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$excluded-elements as element(db:excluded-element)*})","trigger":"admin:database-add-word-query-excluded-element","description":"($config,$database-id,$excluded-elements)"},{"content":"admin:database-add-word-query-included-element(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$included-elements as element(db:included-element)*})","trigger":"admin:database-add-word-query-included-element","description":"($config,$database-id,$included-elements)"},{"content":"admin:database-attach-forest(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$forest-id as xs:unsignedLong})","trigger":"admin:database-attach-forest","description":"($config,$database-id,$forest-id)"},{"content":"admin:database-attach-sub-database(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$subdatabase-id as xs:unsignedLong})","trigger":"admin:database-attach-sub-database","description":"($config,$database-id,$subdatabase-id)"},{"content":"admin:database-attach-sub-database(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$subdatabase-id as xs:unsignedLong}, ${4:\\$foreign-cluster-id as xs:unsignedLong})","trigger":"admin:database-attach-sub-database","description":"($config,$database-id,$subdatabase-id,$foreign-cluster-id)"},{"content":"admin:database-copy(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$database-name as xs:string})","trigger":"admin:database-copy","description":"($config,$database-id,$database-name)"},{"content":"admin:database-create(${1:\\$config as element(configuration)}, ${2:\\$database-name as xs:string}, ${3:\\$security-db as xs:unsignedLong}, ${4:\\$schema-db as xs:unsignedLong})","trigger":"admin:database-create","description":"($config,$database-name,$security-db,$schema-db)"},{"content":"admin:database-daily-backup(${1:\\$backup-dir as xs:string}, ${2:\\$backup-period as xs:positiveInteger}, ${3:\\$start-time as xs:time}, ${4:\\$max-backups as xs:unsignedLong}, ${5:\\$backup-security-db as xs:boolean}, ${6:\\$backup-schemas-db as xs:boolean}, ${7:\\$backup-triggers-db as xs:boolean})","trigger":"admin:database-daily-backup","description":"($backup-dir,$backup-period,$start-time,$max-backups,$backup-security-db,$backup-schemas-db,$backup-triggers-db)"},{"content":"admin:database-daily-backup(${1:\\$backup-dir as xs:string}, ${2:\\$backup-period as xs:positiveInteger}, ${3:\\$start-time as xs:time}, ${4:\\$max-backups as xs:unsignedLong}, ${5:\\$backup-security-db as xs:boolean}, ${6:\\$backup-schemas-db as xs:boolean}, ${7:\\$backup-triggers-db as xs:boolean}, ${8:\\$include-replicas as xs:boolean})","trigger":"admin:database-daily-backup","description":"($backup-dir,$backup-period,$start-time,$max-backups,$backup-security-db,$backup-schemas-db,$backup-triggers-db,$include-replicas)"},{"content":"admin:database-daily-backup(${1:\\$backup-dir as xs:string}, ${2:\\$backup-period as xs:positiveInteger}, ${3:\\$start-time as xs:time}, ${4:\\$max-backups as xs:unsignedLong}, ${5:\\$backup-security-db as xs:boolean}, ${6:\\$backup-schemas-db as xs:boolean}, ${7:\\$backup-triggers-db as xs:boolean}, ${8:\\$include-replicas as xs:boolean}, ${9:\\$journal-archiving as xs:boolean?})","trigger":"admin:database-daily-backup","description":"($backup-dir,$backup-period,$start-time,$max-backups,$backup-security-db,$backup-schemas-db,$backup-triggers-db,$include-replicas,$journal-archiving)"},{"content":"admin:database-daily-backup(${1:\\$backup-dir as xs:string}, ${2:\\$backup-period as xs:positiveInteger}, ${3:\\$start-time as xs:time}, ${4:\\$max-backups as xs:unsignedLong}, ${5:\\$backup-security-db as xs:boolean}, ${6:\\$backup-schemas-db as xs:boolean}, ${7:\\$backup-triggers-db as xs:boolean}, ${8:\\$include-replicas as xs:boolean}, ${9:\\$journal-archiving as xs:boolean?}, ${10:\\$journal-archive-path as xs:string?})","trigger":"admin:database-daily-backup","description":"($backup-dir,$backup-period,$start-time,$max-backups,$backup-security-db,$backup-schemas-db,$backup-triggers-db,$include-replicas,$journal-archiving,$journal-archive-path)"},{"content":"admin:database-daily-backup(${1:\\$backup-dir as xs:string}, ${2:\\$backup-period as xs:positiveInteger}, ${3:\\$start-time as xs:time}, ${4:\\$max-backups as xs:unsignedLong}, ${5:\\$backup-security-db as xs:boolean}, ${6:\\$backup-schemas-db as xs:boolean}, ${7:\\$backup-triggers-db as xs:boolean}, ${8:\\$include-replicas as xs:boolean}, ${9:\\$journal-archiving as xs:boolean?}, ${10:\\$journal-archive-path as xs:string?}, ${11:\\$lag-limit as xs:unsignedLong?})","trigger":"admin:database-daily-backup","description":"($backup-dir,$backup-period,$start-time,$max-backups,$backup-security-db,$backup-schemas-db,$backup-triggers-db,$include-replicas,$journal-archiving,$journal-archive-path,$lag-limit)"},{"content":"admin:database-daily-incremental-backup(${1:\\$backup-dir as xs:string}, ${2:\\$backup-period as xs:positiveInteger}, ${3:\\$start-time as xs:time}, ${4:\\$backup-security-db as xs:boolean}, ${5:\\$backup-schemas-db as xs:boolean}, ${6:\\$backup-triggers-db as xs:boolean})","trigger":"admin:database-daily-incremental-backup","description":"($backup-dir,$backup-period,$start-time,$backup-security-db,$backup-schemas-db,$backup-triggers-db)"},{"content":"admin:database-daily-incremental-backup(${1:\\$backup-dir as xs:string}, ${2:\\$backup-period as xs:positiveInteger}, ${3:\\$start-time as xs:time}, ${4:\\$backup-security-db as xs:boolean}, ${5:\\$backup-schemas-db as xs:boolean}, ${6:\\$backup-triggers-db as xs:boolean}, ${7:\\$include-replicas as xs:boolean})","trigger":"admin:database-daily-incremental-backup","description":"($backup-dir,$backup-period,$start-time,$backup-security-db,$backup-schemas-db,$backup-triggers-db,$include-replicas)"},{"content":"admin:database-daily-incremental-backup(${1:\\$backup-dir as xs:string}, ${2:\\$backup-period as xs:positiveInteger}, ${3:\\$start-time as xs:time}, ${4:\\$backup-security-db as xs:boolean}, ${5:\\$backup-schemas-db as xs:boolean}, ${6:\\$backup-triggers-db as xs:boolean}, ${7:\\$include-replicas as xs:boolean}, ${8:\\$incremental-dir as xs:string?})","trigger":"admin:database-daily-incremental-backup","description":"($backup-dir,$backup-period,$start-time,$backup-security-db,$backup-schemas-db,$backup-triggers-db,$include-replicas,$incremental-dir)"},{"content":"admin:database-daily-incremental-backup(${1:\\$backup-dir as xs:string}, ${2:\\$backup-period as xs:positiveInteger}, ${3:\\$start-time as xs:time}, ${4:\\$backup-security-db as xs:boolean}, ${5:\\$backup-schemas-db as xs:boolean}, ${6:\\$backup-triggers-db as xs:boolean}, ${7:\\$include-replicas as xs:boolean}, ${8:\\$incremental-dir as xs:string?}, ${9:\\$purge-journal-archive as xs:boolean?})","trigger":"admin:database-daily-incremental-backup","description":"($backup-dir,$backup-period,$start-time,$backup-security-db,$backup-schemas-db,$backup-triggers-db,$include-replicas,$incremental-dir,$purge-journal-archive)"},{"content":"admin:database-daily-incremental-backup(${1:\\$backup-dir as xs:string}, ${2:\\$backup-period as xs:positiveInteger}, ${3:\\$start-time as xs:time}, ${4:\\$backup-security-db as xs:boolean}, ${5:\\$backup-schemas-db as xs:boolean}, ${6:\\$backup-triggers-db as xs:boolean}, ${7:\\$include-replicas as xs:boolean}, ${8:\\$incremental-dir as xs:string?}, ${9:\\$purge-journal-archive as xs:boolean?}, ${10:\\$journal-archiving as xs:boolean?})","trigger":"admin:database-daily-incremental-backup","description":"($backup-dir,$backup-period,$start-time,$backup-security-db,$backup-schemas-db,$backup-triggers-db,$include-replicas,$incremental-dir,$purge-journal-archive,$journal-archiving)"},{"content":"admin:database-daily-incremental-backup(${1:\\$backup-dir as xs:string}, ${2:\\$backup-period as xs:positiveInteger}, ${3:\\$start-time as xs:time}, ${4:\\$backup-security-db as xs:boolean}, ${5:\\$backup-schemas-db as xs:boolean}, ${6:\\$backup-triggers-db as xs:boolean}, ${7:\\$include-replicas as xs:boolean}, ${8:\\$incremental-dir as xs:string?}, ${9:\\$purge-journal-archive as xs:boolean?}, ${10:\\$journal-archiving as xs:boolean?}, ${11:\\$journal-archive-path as xs:string?})","trigger":"admin:database-daily-incremental-backup","description":"($backup-dir,$backup-period,$start-time,$backup-security-db,$backup-schemas-db,$backup-triggers-db,$include-replicas,$incremental-dir,$purge-journal-archive,$journal-archiving,$journal-archive-path)"},{"content":"admin:database-daily-incremental-backup(${1:\\$backup-dir as xs:string}, ${2:\\$backup-period as xs:positiveInteger}, ${3:\\$start-time as xs:time}, ${4:\\$backup-security-db as xs:boolean}, ${5:\\$backup-schemas-db as xs:boolean}, ${6:\\$backup-triggers-db as xs:boolean}, ${7:\\$include-replicas as xs:boolean}, ${8:\\$incremental-dir as xs:string?}, ${9:\\$purge-journal-archive as xs:boolean?}, ${10:\\$journal-archiving as xs:boolean?}, ${11:\\$journal-archive-path as xs:string?}, ${12:\\$lag-limit as xs:unsignedLong?})","trigger":"admin:database-daily-incremental-backup","description":"($backup-dir,$backup-period,$start-time,$backup-security-db,$backup-schemas-db,$backup-triggers-db,$include-replicas,$incremental-dir,$purge-journal-archive,$journal-archiving,$journal-archive-path,$lag-limit)"},{"content":"admin:database-delete(${1:\\$config as element(configuration)}, ${2:\\$database-ids as xs:unsignedLong*})","trigger":"admin:database-delete","description":"($config,$database-ids)"},{"content":"admin:database-delete-all-range-field-indexes(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$fieldnames as xs:string*})","trigger":"admin:database-delete-all-range-field-indexes","description":"($config,$database-id,$fieldnames)"},{"content":"admin:database-delete-backup(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$backups as element(db:database-backup)*})","trigger":"admin:database-delete-backup","description":"($config,$database-id,$backups)"},{"content":"admin:database-delete-default-ruleset(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$rulesets as element(db:ruleset)*})","trigger":"admin:database-delete-default-ruleset","description":"($config,$database-id,$rulesets)"},{"content":"admin:database-delete-element-attribute-word-lexicon(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$lexicons as element(db:element-attribute-word-lexicon)*})","trigger":"admin:database-delete-element-attribute-word-lexicon","description":"($config,$database-id,$lexicons)"},{"content":"admin:database-delete-element-word-lexicon(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$element-word-lexicons as element(db:element-word-lexicon)*})","trigger":"admin:database-delete-element-word-lexicon","description":"($config,$database-id,$element-word-lexicons)"},{"content":"admin:database-delete-element-word-query-through(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$throughs as element(db:element-word-query-through)*})","trigger":"admin:database-delete-element-word-query-through","description":"($config,$database-id,$throughs)"},{"content":"admin:database-delete-field(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$field-names as xs:string*})","trigger":"admin:database-delete-field","description":"($config,$database-id,$field-names)"},{"content":"admin:database-delete-field-excluded-element(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$field-name as xs:string}, ${4:\\$excluded-elements as element(db:excluded-element)*})","trigger":"admin:database-delete-field-excluded-element","description":"($config,$database-id,$field-name,$excluded-elements)"},{"content":"admin:database-delete-field-included-element(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$field-name as xs:string}, ${4:\\$included-elements as element(db:included-element)*})","trigger":"admin:database-delete-field-included-element","description":"($config,$database-id,$field-name,$included-elements)"},{"content":"admin:database-delete-field-paths(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$field-name as xs:string}, ${4:\\$field-paths as element(db:field-path)*})","trigger":"admin:database-delete-field-paths","description":"($config,$database-id,$field-name,$field-paths)"},{"content":"admin:database-delete-field-tokenizer-override(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$field-name as xs:string}, ${4:\\$tokenizer-overrides as element(db:tokenizer-override)*})","trigger":"admin:database-delete-field-tokenizer-override","description":"($config,$database-id,$field-name,$tokenizer-overrides)"},{"content":"admin:database-delete-field-word-lexicon(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$field-name as xs:string}, ${4:\\$word-lexicons as element(db:word-lexicon)*})","trigger":"admin:database-delete-field-word-lexicon","description":"($config,$database-id,$field-name,$word-lexicons)"},{"content":"admin:database-delete-foreign-master(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong})","trigger":"admin:database-delete-foreign-master","description":"($config,$database-id)"},{"content":"admin:database-delete-foreign-replicas(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$foreign-replicas as element(db:foreign-replica)*})","trigger":"admin:database-delete-foreign-replicas","description":"($config,$database-id,$foreign-replicas)"},{"content":"admin:database-delete-fragment-parent(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$fragment-parents as element(db:fragment-parent)*})","trigger":"admin:database-delete-fragment-parent","description":"($config,$database-id,$fragment-parents)"},{"content":"admin:database-delete-fragment-root(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$fragment-roots as element(db:fragment-root)*})","trigger":"admin:database-delete-fragment-root","description":"($config,$database-id,$fragment-roots)"},{"content":"admin:database-delete-geospatial-element-attribute-pair-index(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$indexes as element(db:geospatial-element-attribute-pair-index)*})","trigger":"admin:database-delete-geospatial-element-attribute-pair-index","description":"($config,$database-id,$indexes)"},{"content":"admin:database-delete-geospatial-element-child-index(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$geospatial-element-child-indexes as element(db:geospatial-element-child-index)*})","trigger":"admin:database-delete-geospatial-element-child-index","description":"($config,$database-id,$geospatial-element-child-indexes)"},{"content":"admin:database-delete-geospatial-element-index(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$geospatial-element-indexes as element(db:geospatial-element-index)*})","trigger":"admin:database-delete-geospatial-element-index","description":"($config,$database-id,$geospatial-element-indexes)"},{"content":"admin:database-delete-geospatial-element-pair-index(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$geospatial-element-pair-indexes as element(db:geospatial-element-pair-index)*})","trigger":"admin:database-delete-geospatial-element-pair-index","description":"($config,$database-id,$geospatial-element-pair-indexes)"},{"content":"admin:database-delete-geospatial-path-index(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$geospatial-path-indexes as element(db:geospatial-path-index)*})","trigger":"admin:database-delete-geospatial-path-index","description":"($config,$database-id,$geospatial-path-indexes)"},{"content":"admin:database-delete-merge-blackout(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$blackouts as element(db:merge-blackout)*})","trigger":"admin:database-delete-merge-blackout","description":"($config,$database-id,$blackouts)"},{"content":"admin:database-delete-path-namespace(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$path-namespaces as element(db:path-namespace)*})","trigger":"admin:database-delete-path-namespace","description":"($config,$database-id,$path-namespaces)"},{"content":"admin:database-delete-phrase-around(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$phrase-arounds as element(db:phrase-around)*})","trigger":"admin:database-delete-phrase-around","description":"($config,$database-id,$phrase-arounds)"},{"content":"admin:database-delete-phrase-through(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$phrase-throughs as element(db:phrase-through)*})","trigger":"admin:database-delete-phrase-through","description":"($config,$database-id,$phrase-throughs)"},{"content":"admin:database-delete-range-element-attribute-index(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$attribute-indexes as element(db:range-element-attribute-index)*})","trigger":"admin:database-delete-range-element-attribute-index","description":"($config,$database-id,$attribute-indexes)"},{"content":"admin:database-delete-range-element-index(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$range-indexes as element(db:range-element-index)*})","trigger":"admin:database-delete-range-element-index","description":"($config,$database-id,$range-indexes)"},{"content":"admin:database-delete-range-field-index(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$range-indexes as element(db:range-field-index)*})","trigger":"admin:database-delete-range-field-index","description":"($config,$database-id,$range-indexes)"},{"content":"admin:database-delete-range-path-index(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$range-indexes as element(db:range-path-index)*})","trigger":"admin:database-delete-range-path-index","description":"($config,$database-id,$range-indexes)"},{"content":"admin:database-delete-word-lexicon(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$word-lexicons as element(db:word-lexicon)*})","trigger":"admin:database-delete-word-lexicon","description":"($config,$database-id,$word-lexicons)"},{"content":"admin:database-delete-word-query-excluded-element(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$excluded-elements as element(db:excluded-element)*})","trigger":"admin:database-delete-word-query-excluded-element","description":"($config,$database-id,$excluded-elements)"},{"content":"admin:database-delete-word-query-included-element(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$included-elements as element(db:included-element)*})","trigger":"admin:database-delete-word-query-included-element","description":"($config,$database-id,$included-elements)"},{"content":"admin:database-detach-forest(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$forest-id as xs:unsignedLong})","trigger":"admin:database-detach-forest","description":"($config,$database-id,$forest-id)"},{"content":"admin:database-detach-sub-database(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$subdatabase-id as xs:unsignedLong})","trigger":"admin:database-detach-sub-database","description":"($config,$database-id,$subdatabase-id)"},{"content":"admin:database-detach-sub-database(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$subdatabase-id as xs:unsignedLong}, ${4:\\$foreign-cluster-id as xs:unsignedLong})","trigger":"admin:database-detach-sub-database","description":"($config,$database-id,$subdatabase-id,$foreign-cluster-id)"},{"content":"admin:database-element-attribute-reference(${1:\\$scalar-type as xs:string}, ${2:\\$parent-namespace as xs:string?}, ${3:\\$parent-localname as xs:string}, ${4:\\$namespace as xs:string?}, ${5:\\$localname as xs:string}, ${6:\\$collation as xs:string?})","trigger":"admin:database-element-attribute-reference","description":"($scalar-type,$parent-namespace,$parent-localname,$namespace,$localname,$collation)"},{"content":"admin:database-element-attribute-word-lexicon(${1:\\$parent-namespace as xs:string?}, ${2:\\$parent-localname as xs:string}, ${3:\\$namespace as xs:string?}, ${4:\\$localname as xs:string}, ${5:\\$collation as xs:string})","trigger":"admin:database-element-attribute-word-lexicon","description":"($parent-namespace,$parent-localname,$namespace,$localname,$collation)"},{"content":"admin:database-element-reference(${1:\\$scalar-type as xs:string}, ${2:\\$namespace as xs:string?}, ${3:\\$localname as xs:string}, ${4:\\$collation as xs:string?})","trigger":"admin:database-element-reference","description":"($scalar-type,$namespace,$localname,$collation)"},{"content":"admin:database-element-word-lexicon(${1:\\$namespace as xs:string?}, ${2:\\$localname as xs:string}, ${3:\\$collation as xs:string})","trigger":"admin:database-element-word-lexicon","description":"($namespace,$localname,$collation)"},{"content":"admin:database-element-word-query-through(${1:\\$namespace as xs:string?}, ${2:\\$localname as xs:string})","trigger":"admin:database-element-word-query-through","description":"($namespace,$localname)"},{"content":"admin:database-employ-forest(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$forest-id as xs:unsignedLong})","trigger":"admin:database-employ-forest","description":"($config,$database-id,$forest-id)"},{"content":"admin:database-excluded-element(${1:\\$namespace as xs:string?}, ${2:\\$localname as xs:string})","trigger":"admin:database-excluded-element","description":"($namespace,$localname)"},{"content":"admin:database-excluded-element(${1:\\$namespace as xs:string?}, ${2:\\$localname as xs:string}, ${3:\\$attribute-namespace as xs:string?})","trigger":"admin:database-excluded-element","description":"($namespace,$localname,$attribute-namespace)"},{"content":"admin:database-excluded-element(${1:\\$namespace as xs:string?}, ${2:\\$localname as xs:string}, ${3:\\$attribute-namespace as xs:string?}, ${4:\\$attribute-localname as xs:string})","trigger":"admin:database-excluded-element","description":"($namespace,$localname,$attribute-namespace,$attribute-localname)"},{"content":"admin:database-excluded-element(${1:\\$namespace as xs:string?}, ${2:\\$localname as xs:string}, ${3:\\$attribute-namespace as xs:string?}, ${4:\\$attribute-localname as xs:string}, ${5:\\$attribute-value as xs:string})","trigger":"admin:database-excluded-element","description":"($namespace,$localname,$attribute-namespace,$attribute-localname,$attribute-value)"},{"content":"admin:database-exists(${1:\\$config as element(configuration)}, ${2:\\$database-name as xs:string})","trigger":"admin:database-exists","description":"($config,$database-name)"},{"content":"admin:database-field(${1:\\$field-name as xs:string}, ${2:\\$include-root as xs:boolean})","trigger":"admin:database-field","description":"($field-name,$include-root)"},{"content":"admin:database-field-path(${1:\\$field-path as xs:string}, ${2:\\$weight as xs:double})","trigger":"admin:database-field-path","description":"($field-path,$weight)"},{"content":"admin:database-field-reference(${1:\\$scalar-type as xs:string}, ${2:\\$fieldname as xs:string}, ${3:\\$collation as xs:string?})","trigger":"admin:database-field-reference","description":"($scalar-type,$fieldname,$collation)"},{"content":"admin:database-foreign-master(${1:\\$foreign-cluster-id as xs:unsignedLong}, ${2:\\$foreign-database-id as xs:unsignedLong}, ${3:\\$connect-forests-by-name as xs:boolean})","trigger":"admin:database-foreign-master","description":"($foreign-cluster-id,$foreign-database-id,$connect-forests-by-name)"},{"content":"admin:database-foreign-master-get-cluster-id(${1:\\$foreign-master as element(db:foreign-master)})","trigger":"admin:database-foreign-master-get-cluster-id","description":"($foreign-master)"},{"content":"admin:database-foreign-master-get-connect-forests-by-name(${1:\\$foreign-master as element(db:foreign-master)})","trigger":"admin:database-foreign-master-get-connect-forests-by-name","description":"($foreign-master)"},{"content":"admin:database-foreign-master-get-database-id(${1:\\$foreign-master as element(db:foreign-master)})","trigger":"admin:database-foreign-master-get-database-id","description":"($foreign-master)"},{"content":"admin:database-foreign-replica(${1:\\$foreign-cluster-id as xs:unsignedLong}, ${2:\\$foreign-database-id as xs:unsignedLong}, ${3:\\$connect-forests-by-name as xs:boolean}, ${4:\\$lag-limit as xs:unsignedInt})","trigger":"admin:database-foreign-replica","description":"($foreign-cluster-id,$foreign-database-id,$connect-forests-by-name,$lag-limit)"},{"content":"admin:database-foreign-replica(${1:\\$foreign-cluster-id as xs:unsignedLong}, ${2:\\$foreign-database-id as xs:unsignedLong}, ${3:\\$connect-forests-by-name as xs:boolean}, ${4:\\$lag-limit as xs:unsignedInt}, ${5:\\$replication-enabled as xs:boolean})","trigger":"admin:database-foreign-replica","description":"($foreign-cluster-id,$foreign-database-id,$connect-forests-by-name,$lag-limit,$replication-enabled)"},{"content":"admin:database-foreign-replica-get-cluster-id(${1:\\$foreign-replica as element(db:foreign-replica)})","trigger":"admin:database-foreign-replica-get-cluster-id","description":"($foreign-replica)"},{"content":"admin:database-foreign-replica-get-connect-forests-by-name(${1:\\$foreign-replica as element(db:foreign-replica)})","trigger":"admin:database-foreign-replica-get-connect-forests-by-name","description":"($foreign-replica)"},{"content":"admin:database-foreign-replica-get-database-id(${1:\\$foreign-replica as element(db:foreign-replica)})","trigger":"admin:database-foreign-replica-get-database-id","description":"($foreign-replica)"},{"content":"admin:database-foreign-replica-get-lag-limit(${1:\\$foreign-replica as element(db:foreign-replica)})","trigger":"admin:database-foreign-replica-get-lag-limit","description":"($foreign-replica)"},{"content":"admin:database-foreign-replica-get-replication-enabled(${1:\\$foreign-replica as element(db:foreign-replica)})","trigger":"admin:database-foreign-replica-get-replication-enabled","description":"($foreign-replica)"},{"content":"admin:database-foreign-replica-set-lag-limit(${1:\\$foreign-replica as element(db:foreign-replica)}, ${2:\\$lag-limit as xs:unsignedInt})","trigger":"admin:database-foreign-replica-set-lag-limit","description":"($foreign-replica,$lag-limit)"},{"content":"admin:database-foreign-replica-set-replication-enabled(${1:\\$foreign-replica as element(db:foreign-replica)}, ${2:\\$enabled as xs:boolean})","trigger":"admin:database-foreign-replica-set-replication-enabled","description":"($foreign-replica,$enabled)"},{"content":"admin:database-fragment-parent(${1:\\$namespace as xs:string?}, ${2:\\$localname as xs:string})","trigger":"admin:database-fragment-parent","description":"($namespace,$localname)"},{"content":"admin:database-fragment-root(${1:\\$namespace as xs:string?}, ${2:\\$localname as xs:string})","trigger":"admin:database-fragment-root","description":"($namespace,$localname)"},{"content":"admin:database-geospatial-element-attribute-pair-index(${1:\\$parent-namespace as xs:string?}, ${2:\\$parent-localname as xs:string}, ${3:\\$latitude-namespace as xs:string?}, ${4:\\$latitude-localname as xs:string}, ${5:\\$longitude-namespace as xs:string?}, ${6:\\$longitude-localname as xs:string}, ${7:\\$coordinate-system as xs:string}, ${8:\\$range-value-positions as xs:boolean})","trigger":"admin:database-geospatial-element-attribute-pair-index","description":"($parent-namespace,$parent-localname,$latitude-namespace,$latitude-localname,$longitude-namespace,$longitude-localname,$coordinate-system,$range-value-positions)"},{"content":"admin:database-geospatial-element-attribute-pair-index(${1:\\$parent-namespace as xs:string?}, ${2:\\$parent-localname as xs:string}, ${3:\\$latitude-namespace as xs:string?}, ${4:\\$latitude-localname as xs:string}, ${5:\\$longitude-namespace as xs:string?}, ${6:\\$longitude-localname as xs:string}, ${7:\\$coordinate-system as xs:string}, ${8:\\$range-value-positions as xs:boolean}, ${9:\\$invalid-values as xs:string})","trigger":"admin:database-geospatial-element-attribute-pair-index","description":"($parent-namespace,$parent-localname,$latitude-namespace,$latitude-localname,$longitude-namespace,$longitude-localname,$coordinate-system,$range-value-positions,$invalid-values)"},{"content":"admin:database-geospatial-element-child-index(${1:\\$parent-namespace as xs:string?}, ${2:\\$parent-localname as xs:string}, ${3:\\$namespace as xs:string?}, ${4:\\$localname as xs:string}, ${5:\\$coordinate-system as xs:string}, ${6:\\$range-value-positions as xs:boolean})","trigger":"admin:database-geospatial-element-child-index","description":"($parent-namespace,$parent-localname,$namespace,$localname,$coordinate-system,$range-value-positions)"},{"content":"admin:database-geospatial-element-child-index(${1:\\$parent-namespace as xs:string?}, ${2:\\$parent-localname as xs:string}, ${3:\\$namespace as xs:string?}, ${4:\\$localname as xs:string}, ${5:\\$coordinate-system as xs:string}, ${6:\\$range-value-positions as xs:boolean}, ${7:\\$point-format as xs:string})","trigger":"admin:database-geospatial-element-child-index","description":"($parent-namespace,$parent-localname,$namespace,$localname,$coordinate-system,$range-value-positions,$point-format)"},{"content":"admin:database-geospatial-element-child-index(${1:\\$parent-namespace as xs:string?}, ${2:\\$parent-localname as xs:string}, ${3:\\$namespace as xs:string?}, ${4:\\$localname as xs:string}, ${5:\\$coordinate-system as xs:string}, ${6:\\$range-value-positions as xs:boolean}, ${7:\\$point-format as xs:string}, ${8:\\$invalid-values as xs:string})","trigger":"admin:database-geospatial-element-child-index","description":"($parent-namespace,$parent-localname,$namespace,$localname,$coordinate-system,$range-value-positions,$point-format,$invalid-values)"},{"content":"admin:database-geospatial-element-index(${1:\\$namespace as xs:string?}, ${2:\\$localname as xs:string}, ${3:\\$coordinate-system as xs:string}, ${4:\\$range-value-positions as xs:boolean})","trigger":"admin:database-geospatial-element-index","description":"($namespace,$localname,$coordinate-system,$range-value-positions)"},{"content":"admin:database-geospatial-element-index(${1:\\$namespace as xs:string?}, ${2:\\$localname as xs:string}, ${3:\\$coordinate-system as xs:string}, ${4:\\$range-value-positions as xs:boolean}, ${5:\\$point-format as xs:string})","trigger":"admin:database-geospatial-element-index","description":"($namespace,$localname,$coordinate-system,$range-value-positions,$point-format)"},{"content":"admin:database-geospatial-element-index(${1:\\$namespace as xs:string?}, ${2:\\$localname as xs:string}, ${3:\\$coordinate-system as xs:string}, ${4:\\$range-value-positions as xs:boolean}, ${5:\\$point-format as xs:string}, ${6:\\$invalid-values as xs:string})","trigger":"admin:database-geospatial-element-index","description":"($namespace,$localname,$coordinate-system,$range-value-positions,$point-format,$invalid-values)"},{"content":"admin:database-geospatial-element-pair-index(${1:\\$parent-namespace as xs:string?}, ${2:\\$parent-localname as xs:string}, ${3:\\$latitude-namespace as xs:string?}, ${4:\\$latitude-localname as xs:string}, ${5:\\$longitude-namespace as xs:string?}, ${6:\\$longitude-localname as xs:string}, ${7:\\$coordinate-system as xs:string}, ${8:\\$range-value-positions as xs:boolean})","trigger":"admin:database-geospatial-element-pair-index","description":"($parent-namespace,$parent-localname,$latitude-namespace,$latitude-localname,$longitude-namespace,$longitude-localname,$coordinate-system,$range-value-positions)"},{"content":"admin:database-geospatial-element-pair-index(${1:\\$parent-namespace as xs:string?}, ${2:\\$parent-localname as xs:string}, ${3:\\$latitude-namespace as xs:string?}, ${4:\\$latitude-localname as xs:string}, ${5:\\$longitude-namespace as xs:string?}, ${6:\\$longitude-localname as xs:string}, ${7:\\$coordinate-system as xs:string}, ${8:\\$range-value-positions as xs:boolean}, ${9:\\$invalid-values as xs:string})","trigger":"admin:database-geospatial-element-pair-index","description":"($parent-namespace,$parent-localname,$latitude-namespace,$latitude-localname,$longitude-namespace,$longitude-localname,$coordinate-system,$range-value-positions,$invalid-values)"},{"content":"admin:database-geospatial-path-index(${1:\\$pathexpr as xs:string}, ${2:\\$coordinate-system as xs:string}, ${3:\\$range-value-positions as xs:boolean}, ${4:\\$point-format as xs:string}, ${5:\\$invalid-values as xs:string})","trigger":"admin:database-geospatial-path-index","description":"($pathexpr,$coordinate-system,$range-value-positions,$point-format,$invalid-values)"},{"content":"admin:database-get-assignment-policy(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong})","trigger":"admin:database-get-assignment-policy","description":"($config,$database-id)"},{"content":"admin:database-get-attached-forests(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong})","trigger":"admin:database-get-attached-forests","description":"($config,$database-id)"},{"content":"admin:database-get-attribute-value-positions(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong})","trigger":"admin:database-get-attribute-value-positions","description":"($config,$database-id)"},{"content":"admin:database-get-backups(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong})","trigger":"admin:database-get-backups","description":"($config,$database-id)"},{"content":"admin:database-get-collection-lexicon(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong})","trigger":"admin:database-get-collection-lexicon","description":"($config,$database-id)"},{"content":"admin:database-get-config-for-foreign-master-on-foreign-cluster(${1:\\$config as element(configuration)}, ${2:\\$foreign-cluster-id as xs:unsignedLong})","trigger":"admin:database-get-config-for-foreign-master-on-foreign-cluster","description":"($config,$foreign-cluster-id)"},{"content":"admin:database-get-config-for-foreign-replicas-on-foreign-cluster(${1:\\$config as element(configuration)}, ${2:\\$foreign-cluster-id as xs:unsignedLong})","trigger":"admin:database-get-config-for-foreign-replicas-on-foreign-cluster","description":"($config,$foreign-cluster-id)"},{"content":"admin:database-get-default-rulesets(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong})","trigger":"admin:database-get-default-rulesets","description":"($config,$database-id)"},{"content":"admin:database-get-directory-creation(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong})","trigger":"admin:database-get-directory-creation","description":"($config,$database-id)"},{"content":"admin:database-get-element-attribute-word-lexicons(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong})","trigger":"admin:database-get-element-attribute-word-lexicons","description":"($config,$database-id)"},{"content":"admin:database-get-element-value-positions(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong})","trigger":"admin:database-get-element-value-positions","description":"($config,$database-id)"},{"content":"admin:database-get-element-word-lexicons(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong})","trigger":"admin:database-get-element-word-lexicons","description":"($config,$database-id)"},{"content":"admin:database-get-element-word-positions(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong})","trigger":"admin:database-get-element-word-positions","description":"($config,$database-id)"},{"content":"admin:database-get-element-word-query-throughs(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong})","trigger":"admin:database-get-element-word-query-throughs","description":"($config,$database-id)"},{"content":"admin:database-get-enabled(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong})","trigger":"admin:database-get-enabled","description":"($config,$database-id)"},{"content":"admin:database-get-expunge-locks(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong})","trigger":"admin:database-get-expunge-locks","description":"($config,$database-id)"},{"content":"admin:database-get-fast-case-sensitive-searches(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong})","trigger":"admin:database-get-fast-case-sensitive-searches","description":"($config,$database-id)"},{"content":"admin:database-get-fast-diacritic-sensitive-searches(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong})","trigger":"admin:database-get-fast-diacritic-sensitive-searches","description":"($config,$database-id)"},{"content":"admin:database-get-fast-element-character-searches(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong})","trigger":"admin:database-get-fast-element-character-searches","description":"($config,$database-id)"},{"content":"admin:database-get-fast-element-phrase-searches(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong})","trigger":"admin:database-get-fast-element-phrase-searches","description":"($config,$database-id)"},{"content":"admin:database-get-fast-element-trailing-wildcard-searches(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong})","trigger":"admin:database-get-fast-element-trailing-wildcard-searches","description":"($config,$database-id)"},{"content":"admin:database-get-fast-element-word-searches(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong})","trigger":"admin:database-get-fast-element-word-searches","description":"($config,$database-id)"},{"content":"admin:database-get-fast-phrase-searches(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong})","trigger":"admin:database-get-fast-phrase-searches","description":"($config,$database-id)"},{"content":"admin:database-get-fast-reverse-searches(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong})","trigger":"admin:database-get-fast-reverse-searches","description":"($config,$database-id)"},{"content":"admin:database-get-field(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$field-name as xs:string})","trigger":"admin:database-get-field","description":"($config,$database-id,$field-name)"},{"content":"admin:database-get-field-excluded-elements(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$field-name as xs:string})","trigger":"admin:database-get-field-excluded-elements","description":"($config,$database-id,$field-name)"},{"content":"admin:database-get-field-fast-case-sensitive-searches(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$field-name as xs:string})","trigger":"admin:database-get-field-fast-case-sensitive-searches","description":"($config,$database-id,$field-name)"},{"content":"admin:database-get-field-fast-diacritic-sensitive-searches(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$field-name as xs:string})","trigger":"admin:database-get-field-fast-diacritic-sensitive-searches","description":"($config,$database-id,$field-name)"},{"content":"admin:database-get-field-fast-phrase-searches(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$field-name as xs:string})","trigger":"admin:database-get-field-fast-phrase-searches","description":"($config,$database-id,$field-name)"},{"content":"admin:database-get-field-include-document-root(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$field-name as xs:string})","trigger":"admin:database-get-field-include-document-root","description":"($config,$database-id,$field-name)"},{"content":"admin:database-get-field-included-elements(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$field-name as xs:string})","trigger":"admin:database-get-field-included-elements","description":"($config,$database-id,$field-name)"},{"content":"admin:database-get-field-one-character-searches(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$field-name as xs:string})","trigger":"admin:database-get-field-one-character-searches","description":"($config,$database-id,$field-name)"},{"content":"admin:database-get-field-paths(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$field-name as xs:string})","trigger":"admin:database-get-field-paths","description":"($config,$database-id,$field-name)"},{"content":"admin:database-get-field-stemmed-searches(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$field-name as xs:string})","trigger":"admin:database-get-field-stemmed-searches","description":"($config,$database-id,$field-name)"},{"content":"admin:database-get-field-three-character-searches(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$field-name as xs:string})","trigger":"admin:database-get-field-three-character-searches","description":"($config,$database-id,$field-name)"},{"content":"admin:database-get-field-three-character-word-positions(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$field-name as xs:string})","trigger":"admin:database-get-field-three-character-word-positions","description":"($config,$database-id,$field-name)"},{"content":"admin:database-get-field-tokenizer-overrides(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$field-name as xs:string})","trigger":"admin:database-get-field-tokenizer-overrides","description":"($config,$database-id,$field-name)"},{"content":"admin:database-get-field-trailing-wildcard-searches(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$field-name as xs:string})","trigger":"admin:database-get-field-trailing-wildcard-searches","description":"($config,$database-id,$field-name)"},{"content":"admin:database-get-field-trailing-wildcard-word-positions(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$field-name as xs:string})","trigger":"admin:database-get-field-trailing-wildcard-word-positions","description":"($config,$database-id,$field-name)"},{"content":"admin:database-get-field-two-character-searches(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$field-name as xs:string})","trigger":"admin:database-get-field-two-character-searches","description":"($config,$database-id,$field-name)"},{"content":"admin:database-get-field-value-positions(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$field-name as xs:string})","trigger":"admin:database-get-field-value-positions","description":"($config,$database-id,$field-name)"},{"content":"admin:database-get-field-value-searches(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$field-name as xs:string})","trigger":"admin:database-get-field-value-searches","description":"($config,$database-id,$field-name)"},{"content":"admin:database-get-field-word-lexicons(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$field-name as xs:string})","trigger":"admin:database-get-field-word-lexicons","description":"($config,$database-id,$field-name)"},{"content":"admin:database-get-field-word-searches(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$field-name as xs:string})","trigger":"admin:database-get-field-word-searches","description":"($config,$database-id,$field-name)"},{"content":"admin:database-get-fields(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong})","trigger":"admin:database-get-fields","description":"($config,$database-id)"},{"content":"admin:database-get-foreign-master(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong})","trigger":"admin:database-get-foreign-master","description":"($config,$database-id)"},{"content":"admin:database-get-foreign-replicas(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong})","trigger":"admin:database-get-foreign-replicas","description":"($config,$database-id)"},{"content":"admin:database-get-format-compatibility(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong})","trigger":"admin:database-get-format-compatibility","description":"($config,$database-id)"},{"content":"admin:database-get-fragment-parents(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong})","trigger":"admin:database-get-fragment-parents","description":"($config,$database-id)"},{"content":"admin:database-get-fragment-roots(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong})","trigger":"admin:database-get-fragment-roots","description":"($config,$database-id)"},{"content":"admin:database-get-geospatial-element-attribute-pair-indexes(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong})","trigger":"admin:database-get-geospatial-element-attribute-pair-indexes","description":"($config,$database-id)"},{"content":"admin:database-get-geospatial-element-child-indexes(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong})","trigger":"admin:database-get-geospatial-element-child-indexes","description":"($config,$database-id)"},{"content":"admin:database-get-geospatial-element-indexes(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong})","trigger":"admin:database-get-geospatial-element-indexes","description":"($config,$database-id)"},{"content":"admin:database-get-geospatial-element-pair-indexes(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong})","trigger":"admin:database-get-geospatial-element-pair-indexes","description":"($config,$database-id)"},{"content":"admin:database-get-geospatial-path-indexes(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong})","trigger":"admin:database-get-geospatial-path-indexes","description":"($config,$database-id)"},{"content":"admin:database-get-id(${1:\\$config as element(configuration)}, ${2:\\$database-name as xs:string})","trigger":"admin:database-get-id","description":"($config,$database-name)"},{"content":"admin:database-get-in-memory-limit(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong})","trigger":"admin:database-get-in-memory-limit","description":"($config,$database-id)"},{"content":"admin:database-get-in-memory-list-size(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong})","trigger":"admin:database-get-in-memory-list-size","description":"($config,$database-id)"},{"content":"admin:database-get-in-memory-range-index-size(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong})","trigger":"admin:database-get-in-memory-range-index-size","description":"($config,$database-id)"},{"content":"admin:database-get-in-memory-reverse-index-size(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong})","trigger":"admin:database-get-in-memory-reverse-index-size","description":"($config,$database-id)"},{"content":"admin:database-get-in-memory-tree-size(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong})","trigger":"admin:database-get-in-memory-tree-size","description":"($config,$database-id)"},{"content":"admin:database-get-in-memory-triple-index-size(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong})","trigger":"admin:database-get-in-memory-triple-index-size","description":"($config,$database-id)"},{"content":"admin:database-get-index-detection(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong})","trigger":"admin:database-get-index-detection","description":"($config,$database-id)"},{"content":"admin:database-get-inherit-collections(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong})","trigger":"admin:database-get-inherit-collections","description":"($config,$database-id)"},{"content":"admin:database-get-inherit-permissions(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong})","trigger":"admin:database-get-inherit-permissions","description":"($config,$database-id)"},{"content":"admin:database-get-inherit-quality(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong})","trigger":"admin:database-get-inherit-quality","description":"($config,$database-id)"},{"content":"admin:database-get-journal-size(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong})","trigger":"admin:database-get-journal-size","description":"($config,$database-id)"},{"content":"admin:database-get-journaling(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong})","trigger":"admin:database-get-journaling","description":"($config,$database-id)"},{"content":"admin:database-get-language(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong})","trigger":"admin:database-get-language","description":"($config,$database-id)"},{"content":"admin:database-get-large-size-threshold(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong})","trigger":"admin:database-get-large-size-threshold","description":"($config,$database-id)"},{"content":"admin:database-get-locking(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong})","trigger":"admin:database-get-locking","description":"($config,$database-id)"},{"content":"admin:database-get-maintain-directory-last-modified(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong})","trigger":"admin:database-get-maintain-directory-last-modified","description":"($config,$database-id)"},{"content":"admin:database-get-maintain-last-modified(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong})","trigger":"admin:database-get-maintain-last-modified","description":"($config,$database-id)"},{"content":"admin:database-get-merge-blackouts(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong})","trigger":"admin:database-get-merge-blackouts","description":"($config,$database-id)"},{"content":"admin:database-get-merge-max-size(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong})","trigger":"admin:database-get-merge-max-size","description":"($config,$database-id)"},{"content":"admin:database-get-merge-min-ratio(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong})","trigger":"admin:database-get-merge-min-ratio","description":"($config,$database-id)"},{"content":"admin:database-get-merge-min-size(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong})","trigger":"admin:database-get-merge-min-size","description":"($config,$database-id)"},{"content":"admin:database-get-merge-priority(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong})","trigger":"admin:database-get-merge-priority","description":"($config,$database-id)"},{"content":"admin:database-get-merge-timestamp(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong})","trigger":"admin:database-get-merge-timestamp","description":"($config,$database-id)"},{"content":"admin:database-get-name(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong})","trigger":"admin:database-get-name","description":"($config,$database-id)"},{"content":"admin:database-get-one-character-searches(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong})","trigger":"admin:database-get-one-character-searches","description":"($config,$database-id)"},{"content":"admin:database-get-path-namespaces(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong})","trigger":"admin:database-get-path-namespaces","description":"($config,$database-id)"},{"content":"admin:database-get-phrase-arounds(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong})","trigger":"admin:database-get-phrase-arounds","description":"($config,$database-id)"},{"content":"admin:database-get-phrase-throughs(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong})","trigger":"admin:database-get-phrase-throughs","description":"($config,$database-id)"},{"content":"admin:database-get-positions-list-max-size(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong})","trigger":"admin:database-get-positions-list-max-size","description":"($config,$database-id)"},{"content":"admin:database-get-preallocate-journals(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong})","trigger":"admin:database-get-preallocate-journals","description":"($config,$database-id)"},{"content":"admin:database-get-preload-mapped-data(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong})","trigger":"admin:database-get-preload-mapped-data","description":"($config,$database-id)"},{"content":"admin:database-get-preload-replica-mapped-data(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong})","trigger":"admin:database-get-preload-replica-mapped-data","description":"($config,$database-id)"},{"content":"admin:database-get-range-element-attribute-indexes(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong})","trigger":"admin:database-get-range-element-attribute-indexes","description":"($config,$database-id)"},{"content":"admin:database-get-range-element-indexes(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong})","trigger":"admin:database-get-range-element-indexes","description":"($config,$database-id)"},{"content":"admin:database-get-range-field-indexes(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong})","trigger":"admin:database-get-range-field-indexes","description":"($config,$database-id)"},{"content":"admin:database-get-range-index-optimize(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong})","trigger":"admin:database-get-range-index-optimize","description":"($config,$database-id)"},{"content":"admin:database-get-range-path-indexes(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong})","trigger":"admin:database-get-range-path-indexes","description":"($config,$database-id)"},{"content":"admin:database-get-range-policy-partition-key(${1:\\$range-policy as element(db:assignment-policy)})","trigger":"admin:database-get-range-policy-partition-key","description":"($range-policy)"},{"content":"admin:database-get-rebalancer-enable(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong})","trigger":"admin:database-get-rebalancer-enable","description":"($config,$database-id)"},{"content":"admin:database-get-rebalancer-throttle(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong})","trigger":"admin:database-get-rebalancer-throttle","description":"($config,$database-id)"},{"content":"admin:database-get-reindexer-enable(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong})","trigger":"admin:database-get-reindexer-enable","description":"($config,$database-id)"},{"content":"admin:database-get-reindexer-throttle(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong})","trigger":"admin:database-get-reindexer-throttle","description":"($config,$database-id)"},{"content":"admin:database-get-reindexer-timestamp(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong})","trigger":"admin:database-get-reindexer-timestamp","description":"($config,$database-id)"},{"content":"admin:database-get-retain-until-backup(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong})","trigger":"admin:database-get-retain-until-backup","description":"($config,$database-id)"},{"content":"admin:database-get-retired-forests(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong})","trigger":"admin:database-get-retired-forests","description":"($config,$database-id)"},{"content":"admin:database-get-schema-database(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong})","trigger":"admin:database-get-schema-database","description":"($config,$database-id)"},{"content":"admin:database-get-security-database(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong})","trigger":"admin:database-get-security-database","description":"($config,$database-id)"},{"content":"admin:database-get-stemmed-searches(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong})","trigger":"admin:database-get-stemmed-searches","description":"($config,$database-id)"},{"content":"admin:database-get-tf-normalization(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong})","trigger":"admin:database-get-tf-normalization","description":"($config,$database-id)"},{"content":"admin:database-get-three-character-searches(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong})","trigger":"admin:database-get-three-character-searches","description":"($config,$database-id)"},{"content":"admin:database-get-three-character-word-positions(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong})","trigger":"admin:database-get-three-character-word-positions","description":"($config,$database-id)"},{"content":"admin:database-get-trailing-wildcard-searches(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong})","trigger":"admin:database-get-trailing-wildcard-searches","description":"($config,$database-id)"},{"content":"admin:database-get-trailing-wildcard-word-positions(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong})","trigger":"admin:database-get-trailing-wildcard-word-positions","description":"($config,$database-id)"},{"content":"admin:database-get-triggers-database(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong})","trigger":"admin:database-get-triggers-database","description":"($config,$database-id)"},{"content":"admin:database-get-triple-index(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong})","trigger":"admin:database-get-triple-index","description":"($config,$database-id)"},{"content":"admin:database-get-triple-positions(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong})","trigger":"admin:database-get-triple-positions","description":"($config,$database-id)"},{"content":"admin:database-get-two-character-searches(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong})","trigger":"admin:database-get-two-character-searches","description":"($config,$database-id)"},{"content":"admin:database-get-uri-lexicon(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong})","trigger":"admin:database-get-uri-lexicon","description":"($config,$database-id)"},{"content":"admin:database-get-word-lexicons(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong})","trigger":"admin:database-get-word-lexicons","description":"($config,$database-id)"},{"content":"admin:database-get-word-positions(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong})","trigger":"admin:database-get-word-positions","description":"($config,$database-id)"},{"content":"admin:database-get-word-query-excluded-elements(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong})","trigger":"admin:database-get-word-query-excluded-elements","description":"($config,$database-id)"},{"content":"admin:database-get-word-query-fast-case-sensitive-searches(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong})","trigger":"admin:database-get-word-query-fast-case-sensitive-searches","description":"($config,$database-id)"},{"content":"admin:database-get-word-query-fast-diacritic-sensitive-searches(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong})","trigger":"admin:database-get-word-query-fast-diacritic-sensitive-searches","description":"($config,$database-id)"},{"content":"admin:database-get-word-query-fast-phrase-searches(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong})","trigger":"admin:database-get-word-query-fast-phrase-searches","description":"($config,$database-id)"},{"content":"admin:database-get-word-query-include-document-root(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong})","trigger":"admin:database-get-word-query-include-document-root","description":"($config,$database-id)"},{"content":"admin:database-get-word-query-included-elements(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong})","trigger":"admin:database-get-word-query-included-elements","description":"($config,$database-id)"},{"content":"admin:database-get-word-query-one-character-searches(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong})","trigger":"admin:database-get-word-query-one-character-searches","description":"($config,$database-id)"},{"content":"admin:database-get-word-query-stemmed-searches(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong})","trigger":"admin:database-get-word-query-stemmed-searches","description":"($config,$database-id)"},{"content":"admin:database-get-word-query-three-character-searches(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong})","trigger":"admin:database-get-word-query-three-character-searches","description":"($config,$database-id)"},{"content":"admin:database-get-word-query-three-character-word-positions(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong})","trigger":"admin:database-get-word-query-three-character-word-positions","description":"($config,$database-id)"},{"content":"admin:database-get-word-query-trailing-wildcard-searches(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong})","trigger":"admin:database-get-word-query-trailing-wildcard-searches","description":"($config,$database-id)"},{"content":"admin:database-get-word-query-trailing-wildcard-word-positions(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong})","trigger":"admin:database-get-word-query-trailing-wildcard-word-positions","description":"($config,$database-id)"},{"content":"admin:database-get-word-query-two-character-searches(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong})","trigger":"admin:database-get-word-query-two-character-searches","description":"($config,$database-id)"},{"content":"admin:database-get-word-query-word-searches(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong})","trigger":"admin:database-get-word-query-word-searches","description":"($config,$database-id)"},{"content":"admin:database-get-word-searches(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong})","trigger":"admin:database-get-word-searches","description":"($config,$database-id)"},{"content":"admin:database-hourly-backup(${1:\\$backup-dir as xs:string}, ${2:\\$backup-period as xs:positiveInteger}, ${3:\\$start-minute as xs:nonNegativeInteger}, ${4:\\$max-backups as xs:unsignedLong}, ${5:\\$backup-security-db as xs:boolean}, ${6:\\$backup-schemas-db as xs:boolean}, ${7:\\$backup-triggers-db as xs:boolean})","trigger":"admin:database-hourly-backup","description":"($backup-dir,$backup-period,$start-minute,$max-backups,$backup-security-db,$backup-schemas-db,$backup-triggers-db)"},{"content":"admin:database-hourly-backup(${1:\\$backup-dir as xs:string}, ${2:\\$backup-period as xs:positiveInteger}, ${3:\\$start-minute as xs:nonNegativeInteger}, ${4:\\$max-backups as xs:unsignedLong}, ${5:\\$backup-security-db as xs:boolean}, ${6:\\$backup-schemas-db as xs:boolean}, ${7:\\$backup-triggers-db as xs:boolean}, ${8:\\$include-replicas as xs:boolean})","trigger":"admin:database-hourly-backup","description":"($backup-dir,$backup-period,$start-minute,$max-backups,$backup-security-db,$backup-schemas-db,$backup-triggers-db,$include-replicas)"},{"content":"admin:database-hourly-backup(${1:\\$backup-dir as xs:string}, ${2:\\$backup-period as xs:positiveInteger}, ${3:\\$start-minute as xs:nonNegativeInteger}, ${4:\\$max-backups as xs:unsignedLong}, ${5:\\$backup-security-db as xs:boolean}, ${6:\\$backup-schemas-db as xs:boolean}, ${7:\\$backup-triggers-db as xs:boolean}, ${8:\\$include-replicas as xs:boolean}, ${9:\\$journal-archiving as xs:boolean?})","trigger":"admin:database-hourly-backup","description":"($backup-dir,$backup-period,$start-minute,$max-backups,$backup-security-db,$backup-schemas-db,$backup-triggers-db,$include-replicas,$journal-archiving)"},{"content":"admin:database-hourly-backup(${1:\\$backup-dir as xs:string}, ${2:\\$backup-period as xs:positiveInteger}, ${3:\\$start-minute as xs:nonNegativeInteger}, ${4:\\$max-backups as xs:unsignedLong}, ${5:\\$backup-security-db as xs:boolean}, ${6:\\$backup-schemas-db as xs:boolean}, ${7:\\$backup-triggers-db as xs:boolean}, ${8:\\$include-replicas as xs:boolean}, ${9:\\$journal-archiving as xs:boolean?}, ${10:\\$journal-archive-path as xs:string?})","trigger":"admin:database-hourly-backup","description":"($backup-dir,$backup-period,$start-minute,$max-backups,$backup-security-db,$backup-schemas-db,$backup-triggers-db,$include-replicas,$journal-archiving,$journal-archive-path)"},{"content":"admin:database-hourly-backup(${1:\\$backup-dir as xs:string}, ${2:\\$backup-period as xs:positiveInteger}, ${3:\\$start-minute as xs:nonNegativeInteger}, ${4:\\$max-backups as xs:unsignedLong}, ${5:\\$backup-security-db as xs:boolean}, ${6:\\$backup-schemas-db as xs:boolean}, ${7:\\$backup-triggers-db as xs:boolean}, ${8:\\$include-replicas as xs:boolean}, ${9:\\$journal-archiving as xs:boolean?}, ${10:\\$journal-archive-path as xs:string?}, ${11:\\$lag-limit as xs:unsignedLong?})","trigger":"admin:database-hourly-backup","description":"($backup-dir,$backup-period,$start-minute,$max-backups,$backup-security-db,$backup-schemas-db,$backup-triggers-db,$include-replicas,$journal-archiving,$journal-archive-path,$lag-limit)"},{"content":"admin:database-hourly-incremental-backup(${1:\\$backup-dir as xs:string}, ${2:\\$backup-period as xs:positiveInteger}, ${3:\\$start-minute as xs:nonNegativeInteger}, ${4:\\$backup-security-db as xs:boolean}, ${5:\\$backup-schemas-db as xs:boolean}, ${6:\\$backup-triggers-db as xs:boolean})","trigger":"admin:database-hourly-incremental-backup","description":"($backup-dir,$backup-period,$start-minute,$backup-security-db,$backup-schemas-db,$backup-triggers-db)"},{"content":"admin:database-hourly-incremental-backup(${1:\\$backup-dir as xs:string}, ${2:\\$backup-period as xs:positiveInteger}, ${3:\\$start-minute as xs:nonNegativeInteger}, ${4:\\$backup-security-db as xs:boolean}, ${5:\\$backup-schemas-db as xs:boolean}, ${6:\\$backup-triggers-db as xs:boolean}, ${7:\\$include-replicas as xs:boolean})","trigger":"admin:database-hourly-incremental-backup","description":"($backup-dir,$backup-period,$start-minute,$backup-security-db,$backup-schemas-db,$backup-triggers-db,$include-replicas)"},{"content":"admin:database-hourly-incremental-backup(${1:\\$backup-dir as xs:string}, ${2:\\$backup-period as xs:positiveInteger}, ${3:\\$start-minute as xs:nonNegativeInteger}, ${4:\\$backup-security-db as xs:boolean}, ${5:\\$backup-schemas-db as xs:boolean}, ${6:\\$backup-triggers-db as xs:boolean}, ${7:\\$include-replicas as xs:boolean}, ${8:\\$incremental-dir as xs:string?})","trigger":"admin:database-hourly-incremental-backup","description":"($backup-dir,$backup-period,$start-minute,$backup-security-db,$backup-schemas-db,$backup-triggers-db,$include-replicas,$incremental-dir)"},{"content":"admin:database-hourly-incremental-backup(${1:\\$backup-dir as xs:string}, ${2:\\$backup-period as xs:positiveInteger}, ${3:\\$start-minute as xs:nonNegativeInteger}, ${4:\\$backup-security-db as xs:boolean}, ${5:\\$backup-schemas-db as xs:boolean}, ${6:\\$backup-triggers-db as xs:boolean}, ${7:\\$include-replicas as xs:boolean}, ${8:\\$incremental-dir as xs:string?}, ${9:\\$purge-journal-archive as xs:boolean?})","trigger":"admin:database-hourly-incremental-backup","description":"($backup-dir,$backup-period,$start-minute,$backup-security-db,$backup-schemas-db,$backup-triggers-db,$include-replicas,$incremental-dir,$purge-journal-archive)"},{"content":"admin:database-hourly-incremental-backup(${1:\\$backup-dir as xs:string}, ${2:\\$backup-period as xs:positiveInteger}, ${3:\\$start-minute as xs:nonNegativeInteger}, ${4:\\$backup-security-db as xs:boolean}, ${5:\\$backup-schemas-db as xs:boolean}, ${6:\\$backup-triggers-db as xs:boolean}, ${7:\\$include-replicas as xs:boolean}, ${8:\\$incremental-dir as xs:string?}, ${9:\\$purge-journal-archive as xs:boolean?}, ${10:\\$journal-archiving as xs:boolean?})","trigger":"admin:database-hourly-incremental-backup","description":"($backup-dir,$backup-period,$start-minute,$backup-security-db,$backup-schemas-db,$backup-triggers-db,$include-replicas,$incremental-dir,$purge-journal-archive,$journal-archiving)"},{"content":"admin:database-hourly-incremental-backup(${1:\\$backup-dir as xs:string}, ${2:\\$backup-period as xs:positiveInteger}, ${3:\\$start-minute as xs:nonNegativeInteger}, ${4:\\$backup-security-db as xs:boolean}, ${5:\\$backup-schemas-db as xs:boolean}, ${6:\\$backup-triggers-db as xs:boolean}, ${7:\\$include-replicas as xs:boolean}, ${8:\\$incremental-dir as xs:string?}, ${9:\\$purge-journal-archive as xs:boolean?}, ${10:\\$journal-archiving as xs:boolean?}, ${11:\\$journal-archive-path as xs:string?})","trigger":"admin:database-hourly-incremental-backup","description":"($backup-dir,$backup-period,$start-minute,$backup-security-db,$backup-schemas-db,$backup-triggers-db,$include-replicas,$incremental-dir,$purge-journal-archive,$journal-archiving,$journal-archive-path)"},{"content":"admin:database-hourly-incremental-backup(${1:\\$backup-dir as xs:string}, ${2:\\$backup-period as xs:positiveInteger}, ${3:\\$start-minute as xs:nonNegativeInteger}, ${4:\\$backup-security-db as xs:boolean}, ${5:\\$backup-schemas-db as xs:boolean}, ${6:\\$backup-triggers-db as xs:boolean}, ${7:\\$include-replicas as xs:boolean}, ${8:\\$incremental-dir as xs:string?}, ${9:\\$purge-journal-archive as xs:boolean?}, ${10:\\$journal-archiving as xs:boolean?}, ${11:\\$journal-archive-path as xs:string?}, ${12:\\$lag-limit as xs:unsignedLong?})","trigger":"admin:database-hourly-incremental-backup","description":"($backup-dir,$backup-period,$start-minute,$backup-security-db,$backup-schemas-db,$backup-triggers-db,$include-replicas,$incremental-dir,$purge-journal-archive,$journal-archiving,$journal-archive-path,$lag-limit)"},{"content":"admin:database-in-use-path-namespace-prefixes(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong})","trigger":"admin:database-in-use-path-namespace-prefixes","description":"($config,$database-id)"},{"content":"admin:database-included-element(${1:\\$namespace as xs:string?}, ${2:\\$localname as xs:string}, ${3:\\$weight as xs:double}, ${4:\\$attribute-namespace as xs:string?}, ${5:\\$attribute-localname as xs:string}, ${6:\\$attribute-value as xs:string})","trigger":"admin:database-included-element","description":"($namespace,$localname,$weight,$attribute-namespace,$attribute-localname,$attribute-value)"},{"content":"admin:database-is-forest-employed(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$forest-id as xs:unsignedLong})","trigger":"admin:database-is-forest-employed","description":"($config,$database-id,$forest-id)"},{"content":"admin:database-is-forest-retired(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$forest-id as xs:unsignedLong})","trigger":"admin:database-is-forest-retired","description":"($config,$database-id,$forest-id)"},{"content":"admin:database-minutely-backup(${1:\\$backup-dir as xs:string}, ${2:\\$backup-period as xs:positiveInteger}, ${3:\\$max-backups as xs:unsignedLong}, ${4:\\$backup-security-db as xs:boolean}, ${5:\\$backup-schemas-db as xs:boolean}, ${6:\\$backup-triggers-db as xs:boolean})","trigger":"admin:database-minutely-backup","description":"($backup-dir,$backup-period,$max-backups,$backup-security-db,$backup-schemas-db,$backup-triggers-db)"},{"content":"admin:database-minutely-backup(${1:\\$backup-dir as xs:string}, ${2:\\$backup-period as xs:positiveInteger}, ${3:\\$max-backups as xs:unsignedLong}, ${4:\\$backup-security-db as xs:boolean}, ${5:\\$backup-schemas-db as xs:boolean}, ${6:\\$backup-triggers-db as xs:boolean}, ${7:\\$include-replicas as xs:boolean})","trigger":"admin:database-minutely-backup","description":"($backup-dir,$backup-period,$max-backups,$backup-security-db,$backup-schemas-db,$backup-triggers-db,$include-replicas)"},{"content":"admin:database-minutely-backup(${1:\\$backup-dir as xs:string}, ${2:\\$backup-period as xs:positiveInteger}, ${3:\\$max-backups as xs:unsignedLong}, ${4:\\$backup-security-db as xs:boolean}, ${5:\\$backup-schemas-db as xs:boolean}, ${6:\\$backup-triggers-db as xs:boolean}, ${7:\\$include-replicas as xs:boolean}, ${8:\\$journal-archiving as xs:boolean?})","trigger":"admin:database-minutely-backup","description":"($backup-dir,$backup-period,$max-backups,$backup-security-db,$backup-schemas-db,$backup-triggers-db,$include-replicas,$journal-archiving)"},{"content":"admin:database-minutely-backup(${1:\\$backup-dir as xs:string}, ${2:\\$backup-period as xs:positiveInteger}, ${3:\\$max-backups as xs:unsignedLong}, ${4:\\$backup-security-db as xs:boolean}, ${5:\\$backup-schemas-db as xs:boolean}, ${6:\\$backup-triggers-db as xs:boolean}, ${7:\\$include-replicas as xs:boolean}, ${8:\\$journal-archiving as xs:boolean?}, ${9:\\$journal-archive-path as xs:string?})","trigger":"admin:database-minutely-backup","description":"($backup-dir,$backup-period,$max-backups,$backup-security-db,$backup-schemas-db,$backup-triggers-db,$include-replicas,$journal-archiving,$journal-archive-path)"},{"content":"admin:database-minutely-backup(${1:\\$backup-dir as xs:string}, ${2:\\$backup-period as xs:positiveInteger}, ${3:\\$max-backups as xs:unsignedLong}, ${4:\\$backup-security-db as xs:boolean}, ${5:\\$backup-schemas-db as xs:boolean}, ${6:\\$backup-triggers-db as xs:boolean}, ${7:\\$include-replicas as xs:boolean}, ${8:\\$journal-archiving as xs:boolean?}, ${9:\\$journal-archive-path as xs:string?}, ${10:\\$lag-limit as xs:unsignedLong?})","trigger":"admin:database-minutely-backup","description":"($backup-dir,$backup-period,$max-backups,$backup-security-db,$backup-schemas-db,$backup-triggers-db,$include-replicas,$journal-archiving,$journal-archive-path,$lag-limit)"},{"content":"admin:database-minutely-incremental-backup(${1:\\$backup-dir as xs:string}, ${2:\\$backup-period as xs:positiveInteger}, ${3:\\$backup-security-db as xs:boolean}, ${4:\\$backup-schemas-db as xs:boolean}, ${5:\\$backup-triggers-db as xs:boolean})","trigger":"admin:database-minutely-incremental-backup","description":"($backup-dir,$backup-period,$backup-security-db,$backup-schemas-db,$backup-triggers-db)"},{"content":"admin:database-minutely-incremental-backup(${1:\\$backup-dir as xs:string}, ${2:\\$backup-period as xs:positiveInteger}, ${3:\\$backup-security-db as xs:boolean}, ${4:\\$backup-schemas-db as xs:boolean}, ${5:\\$backup-triggers-db as xs:boolean}, ${6:\\$include-replicas as xs:boolean})","trigger":"admin:database-minutely-incremental-backup","description":"($backup-dir,$backup-period,$backup-security-db,$backup-schemas-db,$backup-triggers-db,$include-replicas)"},{"content":"admin:database-minutely-incremental-backup(${1:\\$backup-dir as xs:string}, ${2:\\$backup-period as xs:positiveInteger}, ${3:\\$backup-security-db as xs:boolean}, ${4:\\$backup-schemas-db as xs:boolean}, ${5:\\$backup-triggers-db as xs:boolean}, ${6:\\$include-replicas as xs:boolean}, ${7:\\$incremental-dir as xs:string?})","trigger":"admin:database-minutely-incremental-backup","description":"($backup-dir,$backup-period,$backup-security-db,$backup-schemas-db,$backup-triggers-db,$include-replicas,$incremental-dir)"},{"content":"admin:database-minutely-incremental-backup(${1:\\$backup-dir as xs:string}, ${2:\\$backup-period as xs:positiveInteger}, ${3:\\$backup-security-db as xs:boolean}, ${4:\\$backup-schemas-db as xs:boolean}, ${5:\\$backup-triggers-db as xs:boolean}, ${6:\\$include-replicas as xs:boolean}, ${7:\\$incremental-dir as xs:string?}, ${8:\\$purge-journal-archive as xs:boolean?})","trigger":"admin:database-minutely-incremental-backup","description":"($backup-dir,$backup-period,$backup-security-db,$backup-schemas-db,$backup-triggers-db,$include-replicas,$incremental-dir,$purge-journal-archive)"},{"content":"admin:database-minutely-incremental-backup(${1:\\$backup-dir as xs:string}, ${2:\\$backup-period as xs:positiveInteger}, ${3:\\$backup-security-db as xs:boolean}, ${4:\\$backup-schemas-db as xs:boolean}, ${5:\\$backup-triggers-db as xs:boolean}, ${6:\\$include-replicas as xs:boolean}, ${7:\\$incremental-dir as xs:string?}, ${8:\\$purge-journal-archive as xs:boolean?}, ${9:\\$journal-archiving as xs:boolean?})","trigger":"admin:database-minutely-incremental-backup","description":"($backup-dir,$backup-period,$backup-security-db,$backup-schemas-db,$backup-triggers-db,$include-replicas,$incremental-dir,$purge-journal-archive,$journal-archiving)"},{"content":"admin:database-minutely-incremental-backup(${1:\\$backup-dir as xs:string}, ${2:\\$backup-period as xs:positiveInteger}, ${3:\\$backup-security-db as xs:boolean}, ${4:\\$backup-schemas-db as xs:boolean}, ${5:\\$backup-triggers-db as xs:boolean}, ${6:\\$include-replicas as xs:boolean}, ${7:\\$incremental-dir as xs:string?}, ${8:\\$purge-journal-archive as xs:boolean?}, ${9:\\$journal-archiving as xs:boolean?}, ${10:\\$journal-archive-path as xs:string?})","trigger":"admin:database-minutely-incremental-backup","description":"($backup-dir,$backup-period,$backup-security-db,$backup-schemas-db,$backup-triggers-db,$include-replicas,$incremental-dir,$purge-journal-archive,$journal-archiving,$journal-archive-path)"},{"content":"admin:database-minutely-incremental-backup(${1:\\$backup-dir as xs:string}, ${2:\\$backup-period as xs:positiveInteger}, ${3:\\$backup-security-db as xs:boolean}, ${4:\\$backup-schemas-db as xs:boolean}, ${5:\\$backup-triggers-db as xs:boolean}, ${6:\\$include-replicas as xs:boolean}, ${7:\\$incremental-dir as xs:string?}, ${8:\\$purge-journal-archive as xs:boolean?}, ${9:\\$journal-archiving as xs:boolean?}, ${10:\\$journal-archive-path as xs:string?}, ${11:\\$lag-limit as xs:unsignedLong?})","trigger":"admin:database-minutely-incremental-backup","description":"($backup-dir,$backup-period,$backup-security-db,$backup-schemas-db,$backup-triggers-db,$include-replicas,$incremental-dir,$purge-journal-archive,$journal-archiving,$journal-archive-path,$lag-limit)"},{"content":"admin:database-monthly-backup(${1:\\$backup-dir as xs:string}, ${2:\\$backup-period as xs:positiveInteger}, ${3:\\$backup-month-day as xs:unsignedLong}, ${4:\\$start-time as xs:time}, ${5:\\$max-backups as xs:unsignedLong}, ${6:\\$backup-security-db as xs:boolean}, ${7:\\$backup-schemas-db as xs:boolean}, ${8:\\$backup-triggers-db as xs:boolean})","trigger":"admin:database-monthly-backup","description":"($backup-dir,$backup-period,$backup-month-day,$start-time,$max-backups,$backup-security-db,$backup-schemas-db,$backup-triggers-db)"},{"content":"admin:database-monthly-backup(${1:\\$backup-dir as xs:string}, ${2:\\$backup-period as xs:positiveInteger}, ${3:\\$backup-month-day as xs:unsignedLong}, ${4:\\$start-time as xs:time}, ${5:\\$max-backups as xs:unsignedLong}, ${6:\\$backup-security-db as xs:boolean}, ${7:\\$backup-schemas-db as xs:boolean}, ${8:\\$backup-triggers-db as xs:boolean}, ${9:\\$include-replicas as xs:boolean})","trigger":"admin:database-monthly-backup","description":"($backup-dir,$backup-period,$backup-month-day,$start-time,$max-backups,$backup-security-db,$backup-schemas-db,$backup-triggers-db,$include-replicas)"},{"content":"admin:database-monthly-backup(${1:\\$backup-dir as xs:string}, ${2:\\$backup-period as xs:positiveInteger}, ${3:\\$backup-month-day as xs:unsignedLong}, ${4:\\$start-time as xs:time}, ${5:\\$max-backups as xs:unsignedLong}, ${6:\\$backup-security-db as xs:boolean}, ${7:\\$backup-schemas-db as xs:boolean}, ${8:\\$backup-triggers-db as xs:boolean}, ${9:\\$include-replicas as xs:boolean}, ${10:\\$journal-archiving as xs:boolean?})","trigger":"admin:database-monthly-backup","description":"($backup-dir,$backup-period,$backup-month-day,$start-time,$max-backups,$backup-security-db,$backup-schemas-db,$backup-triggers-db,$include-replicas,$journal-archiving)"},{"content":"admin:database-monthly-backup(${1:\\$backup-dir as xs:string}, ${2:\\$backup-period as xs:positiveInteger}, ${3:\\$backup-month-day as xs:unsignedLong}, ${4:\\$start-time as xs:time}, ${5:\\$max-backups as xs:unsignedLong}, ${6:\\$backup-security-db as xs:boolean}, ${7:\\$backup-schemas-db as xs:boolean}, ${8:\\$backup-triggers-db as xs:boolean}, ${9:\\$include-replicas as xs:boolean}, ${10:\\$journal-archiving as xs:boolean?}, ${11:\\$journal-archive-path as xs:string?})","trigger":"admin:database-monthly-backup","description":"($backup-dir,$backup-period,$backup-month-day,$start-time,$max-backups,$backup-security-db,$backup-schemas-db,$backup-triggers-db,$include-replicas,$journal-archiving,$journal-archive-path)"},{"content":"admin:database-monthly-backup(${1:\\$backup-dir as xs:string}, ${2:\\$backup-period as xs:positiveInteger}, ${3:\\$backup-month-day as xs:unsignedLong}, ${4:\\$start-time as xs:time}, ${5:\\$max-backups as xs:unsignedLong}, ${6:\\$backup-security-db as xs:boolean}, ${7:\\$backup-schemas-db as xs:boolean}, ${8:\\$backup-triggers-db as xs:boolean}, ${9:\\$include-replicas as xs:boolean}, ${10:\\$journal-archiving as xs:boolean?}, ${11:\\$journal-archive-path as xs:string?}, ${12:\\$lag-limit as xs:unsignedLong?})","trigger":"admin:database-monthly-backup","description":"($backup-dir,$backup-period,$backup-month-day,$start-time,$max-backups,$backup-security-db,$backup-schemas-db,$backup-triggers-db,$include-replicas,$journal-archiving,$journal-archive-path,$lag-limit)"},{"content":"admin:database-monthly-incremental-backup(${1:\\$backup-dir as xs:string}, ${2:\\$backup-period as xs:positiveInteger}, ${3:\\$backup-month-day as xs:unsignedLong}, ${4:\\$start-time as xs:time}, ${5:\\$backup-security-db as xs:boolean}, ${6:\\$backup-schemas-db as xs:boolean}, ${7:\\$backup-triggers-db as xs:boolean})","trigger":"admin:database-monthly-incremental-backup","description":"($backup-dir,$backup-period,$backup-month-day,$start-time,$backup-security-db,$backup-schemas-db,$backup-triggers-db)"},{"content":"admin:database-monthly-incremental-backup(${1:\\$backup-dir as xs:string}, ${2:\\$backup-period as xs:positiveInteger}, ${3:\\$backup-month-day as xs:unsignedLong}, ${4:\\$start-time as xs:time}, ${5:\\$backup-security-db as xs:boolean}, ${6:\\$backup-schemas-db as xs:boolean}, ${7:\\$backup-triggers-db as xs:boolean}, ${8:\\$include-replicas as xs:boolean})","trigger":"admin:database-monthly-incremental-backup","description":"($backup-dir,$backup-period,$backup-month-day,$start-time,$backup-security-db,$backup-schemas-db,$backup-triggers-db,$include-replicas)"},{"content":"admin:database-monthly-incremental-backup(${1:\\$backup-dir as xs:string}, ${2:\\$backup-period as xs:positiveInteger}, ${3:\\$backup-month-day as xs:unsignedLong}, ${4:\\$start-time as xs:time}, ${5:\\$backup-security-db as xs:boolean}, ${6:\\$backup-schemas-db as xs:boolean}, ${7:\\$backup-triggers-db as xs:boolean}, ${8:\\$include-replicas as xs:boolean}, ${9:\\$incremental-dir as xs:string?})","trigger":"admin:database-monthly-incremental-backup","description":"($backup-dir,$backup-period,$backup-month-day,$start-time,$backup-security-db,$backup-schemas-db,$backup-triggers-db,$include-replicas,$incremental-dir)"},{"content":"admin:database-monthly-incremental-backup(${1:\\$backup-dir as xs:string}, ${2:\\$backup-period as xs:positiveInteger}, ${3:\\$backup-month-day as xs:unsignedLong}, ${4:\\$start-time as xs:time}, ${5:\\$backup-security-db as xs:boolean}, ${6:\\$backup-schemas-db as xs:boolean}, ${7:\\$backup-triggers-db as xs:boolean}, ${8:\\$include-replicas as xs:boolean}, ${9:\\$incremental-dir as xs:string?}, ${10:\\$purge-journal-archive as xs:boolean?})","trigger":"admin:database-monthly-incremental-backup","description":"($backup-dir,$backup-period,$backup-month-day,$start-time,$backup-security-db,$backup-schemas-db,$backup-triggers-db,$include-replicas,$incremental-dir,$purge-journal-archive)"},{"content":"admin:database-monthly-incremental-backup(${1:\\$backup-dir as xs:string}, ${2:\\$backup-period as xs:positiveInteger}, ${3:\\$backup-month-day as xs:unsignedLong}, ${4:\\$start-time as xs:time}, ${5:\\$backup-security-db as xs:boolean}, ${6:\\$backup-schemas-db as xs:boolean}, ${7:\\$backup-triggers-db as xs:boolean}, ${8:\\$include-replicas as xs:boolean}, ${9:\\$incremental-dir as xs:string?}, ${10:\\$purge-journal-archive as xs:boolean?}, ${11:\\$journal-archiving as xs:boolean?})","trigger":"admin:database-monthly-incremental-backup","description":"($backup-dir,$backup-period,$backup-month-day,$start-time,$backup-security-db,$backup-schemas-db,$backup-triggers-db,$include-replicas,$incremental-dir,$purge-journal-archive,$journal-archiving)"},{"content":"admin:database-monthly-incremental-backup(${1:\\$backup-dir as xs:string}, ${2:\\$backup-period as xs:positiveInteger}, ${3:\\$backup-month-day as xs:unsignedLong}, ${4:\\$start-time as xs:time}, ${5:\\$backup-security-db as xs:boolean}, ${6:\\$backup-schemas-db as xs:boolean}, ${7:\\$backup-triggers-db as xs:boolean}, ${8:\\$include-replicas as xs:boolean}, ${9:\\$incremental-dir as xs:string?}, ${10:\\$purge-journal-archive as xs:boolean?}, ${11:\\$journal-archiving as xs:boolean?}, ${12:\\$journal-archive-path as xs:string?})","trigger":"admin:database-monthly-incremental-backup","description":"($backup-dir,$backup-period,$backup-month-day,$start-time,$backup-security-db,$backup-schemas-db,$backup-triggers-db,$include-replicas,$incremental-dir,$purge-journal-archive,$journal-archiving,$journal-archive-path)"},{"content":"admin:database-monthly-incremental-backup(${1:\\$backup-dir as xs:string}, ${2:\\$backup-period as xs:positiveInteger}, ${3:\\$backup-month-day as xs:unsignedLong}, ${4:\\$start-time as xs:time}, ${5:\\$backup-security-db as xs:boolean}, ${6:\\$backup-schemas-db as xs:boolean}, ${7:\\$backup-triggers-db as xs:boolean}, ${8:\\$include-replicas as xs:boolean}, ${9:\\$incremental-dir as xs:string?}, ${10:\\$purge-journal-archive as xs:boolean?}, ${11:\\$journal-archiving as xs:boolean?}, ${12:\\$journal-archive-path as xs:string?}, ${13:\\$lag-limit as xs:unsignedLong?})","trigger":"admin:database-monthly-incremental-backup","description":"($backup-dir,$backup-period,$backup-month-day,$start-time,$backup-security-db,$backup-schemas-db,$backup-triggers-db,$include-replicas,$incremental-dir,$purge-journal-archive,$journal-archiving,$journal-archive-path,$lag-limit)"},{"content":"admin:database-one-time-backup(${1:\\$backup-dir as xs:string}, ${2:\\$start as xs:dateTime}, ${3:\\$max-backups as xs:unsignedLong}, ${4:\\$backup-security-db as xs:boolean}, ${5:\\$backup-schemas-db as xs:boolean}, ${6:\\$backup-triggers-db as xs:boolean})","trigger":"admin:database-one-time-backup","description":"($backup-dir,$start,$max-backups,$backup-security-db,$backup-schemas-db,$backup-triggers-db)"},{"content":"admin:database-one-time-backup(${1:\\$backup-dir as xs:string}, ${2:\\$start as xs:dateTime}, ${3:\\$max-backups as xs:unsignedLong}, ${4:\\$backup-security-db as xs:boolean}, ${5:\\$backup-schemas-db as xs:boolean}, ${6:\\$backup-triggers-db as xs:boolean}, ${7:\\$include-replicas as xs:boolean})","trigger":"admin:database-one-time-backup","description":"($backup-dir,$start,$max-backups,$backup-security-db,$backup-schemas-db,$backup-triggers-db,$include-replicas)"},{"content":"admin:database-one-time-backup(${1:\\$backup-dir as xs:string}, ${2:\\$start as xs:dateTime}, ${3:\\$max-backups as xs:unsignedLong}, ${4:\\$backup-security-db as xs:boolean}, ${5:\\$backup-schemas-db as xs:boolean}, ${6:\\$backup-triggers-db as xs:boolean}, ${7:\\$include-replicas as xs:boolean}, ${8:\\$journal-archiving as xs:boolean?})","trigger":"admin:database-one-time-backup","description":"($backup-dir,$start,$max-backups,$backup-security-db,$backup-schemas-db,$backup-triggers-db,$include-replicas,$journal-archiving)"},{"content":"admin:database-one-time-backup(${1:\\$backup-dir as xs:string}, ${2:\\$start as xs:dateTime}, ${3:\\$max-backups as xs:unsignedLong}, ${4:\\$backup-security-db as xs:boolean}, ${5:\\$backup-schemas-db as xs:boolean}, ${6:\\$backup-triggers-db as xs:boolean}, ${7:\\$include-replicas as xs:boolean}, ${8:\\$journal-archiving as xs:boolean?}, ${9:\\$journal-archive-path as xs:string?})","trigger":"admin:database-one-time-backup","description":"($backup-dir,$start,$max-backups,$backup-security-db,$backup-schemas-db,$backup-triggers-db,$include-replicas,$journal-archiving,$journal-archive-path)"},{"content":"admin:database-one-time-backup(${1:\\$backup-dir as xs:string}, ${2:\\$start as xs:dateTime}, ${3:\\$max-backups as xs:unsignedLong}, ${4:\\$backup-security-db as xs:boolean}, ${5:\\$backup-schemas-db as xs:boolean}, ${6:\\$backup-triggers-db as xs:boolean}, ${7:\\$include-replicas as xs:boolean}, ${8:\\$journal-archiving as xs:boolean?}, ${9:\\$journal-archive-path as xs:string?}, ${10:\\$lag-limit as xs:unsignedLong?})","trigger":"admin:database-one-time-backup","description":"($backup-dir,$start,$max-backups,$backup-security-db,$backup-schemas-db,$backup-triggers-db,$include-replicas,$journal-archiving,$journal-archive-path,$lag-limit)"},{"content":"admin:database-one-time-incremental-backup(${1:\\$backup-dir as xs:string}, ${2:\\$start as xs:dateTime}, ${3:\\$backup-security-db as xs:boolean}, ${4:\\$backup-schemas-db as xs:boolean}, ${5:\\$backup-triggers-db as xs:boolean})","trigger":"admin:database-one-time-incremental-backup","description":"($backup-dir,$start,$backup-security-db,$backup-schemas-db,$backup-triggers-db)"},{"content":"admin:database-one-time-incremental-backup(${1:\\$backup-dir as xs:string}, ${2:\\$start as xs:dateTime}, ${3:\\$backup-security-db as xs:boolean}, ${4:\\$backup-schemas-db as xs:boolean}, ${5:\\$backup-triggers-db as xs:boolean}, ${6:\\$include-replicas as xs:boolean})","trigger":"admin:database-one-time-incremental-backup","description":"($backup-dir,$start,$backup-security-db,$backup-schemas-db,$backup-triggers-db,$include-replicas)"},{"content":"admin:database-one-time-incremental-backup(${1:\\$backup-dir as xs:string}, ${2:\\$start as xs:dateTime}, ${3:\\$backup-security-db as xs:boolean}, ${4:\\$backup-schemas-db as xs:boolean}, ${5:\\$backup-triggers-db as xs:boolean}, ${6:\\$include-replicas as xs:boolean}, ${7:\\$incremental-dir as xs:string?})","trigger":"admin:database-one-time-incremental-backup","description":"($backup-dir,$start,$backup-security-db,$backup-schemas-db,$backup-triggers-db,$include-replicas,$incremental-dir)"},{"content":"admin:database-one-time-incremental-backup(${1:\\$backup-dir as xs:string}, ${2:\\$start as xs:dateTime}, ${3:\\$backup-security-db as xs:boolean}, ${4:\\$backup-schemas-db as xs:boolean}, ${5:\\$backup-triggers-db as xs:boolean}, ${6:\\$include-replicas as xs:boolean}, ${7:\\$incremental-dir as xs:string?}, ${8:\\$purge-journal-archive as xs:boolean?})","trigger":"admin:database-one-time-incremental-backup","description":"($backup-dir,$start,$backup-security-db,$backup-schemas-db,$backup-triggers-db,$include-replicas,$incremental-dir,$purge-journal-archive)"},{"content":"admin:database-one-time-incremental-backup(${1:\\$backup-dir as xs:string}, ${2:\\$start as xs:dateTime}, ${3:\\$backup-security-db as xs:boolean}, ${4:\\$backup-schemas-db as xs:boolean}, ${5:\\$backup-triggers-db as xs:boolean}, ${6:\\$include-replicas as xs:boolean}, ${7:\\$incremental-dir as xs:string?}, ${8:\\$purge-journal-archive as xs:boolean?}, ${9:\\$journal-archiving as xs:boolean?})","trigger":"admin:database-one-time-incremental-backup","description":"($backup-dir,$start,$backup-security-db,$backup-schemas-db,$backup-triggers-db,$include-replicas,$incremental-dir,$purge-journal-archive,$journal-archiving)"},{"content":"admin:database-one-time-incremental-backup(${1:\\$backup-dir as xs:string}, ${2:\\$start as xs:dateTime}, ${3:\\$backup-security-db as xs:boolean}, ${4:\\$backup-schemas-db as xs:boolean}, ${5:\\$backup-triggers-db as xs:boolean}, ${6:\\$include-replicas as xs:boolean}, ${7:\\$incremental-dir as xs:string?}, ${8:\\$purge-journal-archive as xs:boolean?}, ${9:\\$journal-archiving as xs:boolean?}, ${10:\\$journal-archive-path as xs:string?})","trigger":"admin:database-one-time-incremental-backup","description":"($backup-dir,$start,$backup-security-db,$backup-schemas-db,$backup-triggers-db,$include-replicas,$incremental-dir,$purge-journal-archive,$journal-archiving,$journal-archive-path)"},{"content":"admin:database-one-time-incremental-backup(${1:\\$backup-dir as xs:string}, ${2:\\$start as xs:dateTime}, ${3:\\$backup-security-db as xs:boolean}, ${4:\\$backup-schemas-db as xs:boolean}, ${5:\\$backup-triggers-db as xs:boolean}, ${6:\\$include-replicas as xs:boolean}, ${7:\\$incremental-dir as xs:string?}, ${8:\\$purge-journal-archive as xs:boolean?}, ${9:\\$journal-archiving as xs:boolean?}, ${10:\\$journal-archive-path as xs:string?}, ${11:\\$lag-limit as xs:unsignedLong?})","trigger":"admin:database-one-time-incremental-backup","description":"($backup-dir,$start,$backup-security-db,$backup-schemas-db,$backup-triggers-db,$include-replicas,$incremental-dir,$purge-journal-archive,$journal-archiving,$journal-archive-path,$lag-limit)"},{"content":"admin:database-one-time-merge-blackout(${1:\\$limit as xs:unsignedInt}, ${2:\\$merge-priority as xs:string}, ${3:\\$start as xs:dateTime}, ${4:\\$end as xs:dateTime?}, ${5:\\$duration as xs:duration?})","trigger":"admin:database-one-time-merge-blackout","description":"($limit,$merge-priority,$start,$end,$duration)"},{"content":"admin:database-path-field(${1:\\$field-name as xs:string}, ${2:\\$field-paths as element(db:field-path)+})","trigger":"admin:database-path-field","description":"($field-name,$field-paths)"},{"content":"admin:database-path-namespace(${1:\\$prefix as xs:string}, ${2:\\$namespace-uri as xs:string})","trigger":"admin:database-path-namespace","description":"($prefix,$namespace-uri)"},{"content":"admin:database-path-reference(${1:\\$scalar-type as xs:string}, ${2:\\$pathexpr as xs:string}, ${3:\\$collation as xs:string?})","trigger":"admin:database-path-reference","description":"($scalar-type,$pathexpr,$collation)"},{"content":"admin:database-phrase-around(${1:\\$namespace as xs:string?}, ${2:\\$localname as xs:string})","trigger":"admin:database-phrase-around","description":"($namespace,$localname)"},{"content":"admin:database-phrase-through(${1:\\$namespace as xs:string?}, ${2:\\$localname as xs:string})","trigger":"admin:database-phrase-through","description":"($namespace,$localname)"},{"content":"admin:database-range-element-attribute-index(${1:\\$scalar-type as xs:string}, ${2:\\$parent-namespace as xs:string?}, ${3:\\$parent-localname as xs:string}, ${4:\\$namespace as xs:string?}, ${5:\\$localname as xs:string}, ${6:\\$collation as xs:string?}, ${7:\\$range-value-positions as xs:boolean})","trigger":"admin:database-range-element-attribute-index","description":"($scalar-type,$parent-namespace,$parent-localname,$namespace,$localname,$collation,$range-value-positions)"},{"content":"admin:database-range-element-attribute-index(${1:\\$scalar-type as xs:string}, ${2:\\$parent-namespace as xs:string?}, ${3:\\$parent-localname as xs:string}, ${4:\\$namespace as xs:string?}, ${5:\\$localname as xs:string}, ${6:\\$collation as xs:string?}, ${7:\\$range-value-positions as xs:boolean}, ${8:\\$invalid-values as xs:string})","trigger":"admin:database-range-element-attribute-index","description":"($scalar-type,$parent-namespace,$parent-localname,$namespace,$localname,$collation,$range-value-positions,$invalid-values)"},{"content":"admin:database-range-element-index(${1:\\$scalar-type as xs:string}, ${2:\\$namespace as xs:string?}, ${3:\\$localname as xs:string}, ${4:\\$collation as xs:string?}, ${5:\\$range-value-positions as xs:boolean})","trigger":"admin:database-range-element-index","description":"($scalar-type,$namespace,$localname,$collation,$range-value-positions)"},{"content":"admin:database-range-element-index(${1:\\$scalar-type as xs:string}, ${2:\\$namespace as xs:string?}, ${3:\\$localname as xs:string}, ${4:\\$collation as xs:string?}, ${5:\\$range-value-positions as xs:boolean}, ${6:\\$invalid-values as xs:string})","trigger":"admin:database-range-element-index","description":"($scalar-type,$namespace,$localname,$collation,$range-value-positions,$invalid-values)"},{"content":"admin:database-range-field-index(${1:\\$scalar-type as xs:string}, ${2:\\$fieldname as xs:string}, ${3:\\$collation as xs:string?}, ${4:\\$range-value-positions as xs:boolean})","trigger":"admin:database-range-field-index","description":"($scalar-type,$fieldname,$collation,$range-value-positions)"},{"content":"admin:database-range-field-index(${1:\\$scalar-type as xs:string}, ${2:\\$fieldname as xs:string}, ${3:\\$collation as xs:string?}, ${4:\\$range-value-positions as xs:boolean}, ${5:\\$invalid-values as xs:string})","trigger":"admin:database-range-field-index","description":"($scalar-type,$fieldname,$collation,$range-value-positions,$invalid-values)"},{"content":"admin:database-range-path-index(${1:\\$database-id as xs:unsignedLong}, ${2:\\$scalar-type as xs:string}, ${3:\\$pathexpr as xs:string}, ${4:\\$collation as xs:string?}, ${5:\\$range-value-positions as xs:boolean}, ${6:\\$invalid-values as xs:string})","trigger":"admin:database-range-path-index","description":"($database-id,$scalar-type,$pathexpr,$collation,$range-value-positions,$invalid-values)"},{"content":"admin:database-recurring-merge-blackout(${1:\\$limit as xs:unsignedInt}, ${2:\\$merge-priority as xs:string}, ${3:\\$days as xs:string+}, ${4:\\$start-time as xs:time?}, ${5:\\$end-time as xs:time?}, ${6:\\$duration as xs:duration?})","trigger":"admin:database-recurring-merge-blackout","description":"($limit,$merge-priority,$days,$start-time,$end-time,$duration)"},{"content":"admin:database-reorder-forests(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$forest-ids as xs:unsignedLong*})","trigger":"admin:database-reorder-forests","description":"($config,$database-id,$forest-ids)"},{"content":"admin:database-retire-forest(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$forest-id as xs:unsignedLong})","trigger":"admin:database-retire-forest","description":"($config,$database-id,$forest-id)"},{"content":"admin:database-ruleset(${1:\\$location as xs:string})","trigger":"admin:database-ruleset","description":"($location)"},{"content":"admin:database-set-assignment-policy(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$policy as element(db:assignment-policy)})","trigger":"admin:database-set-assignment-policy","description":"($config,$database-id,$policy)"},{"content":"admin:database-set-attribute-value-positions(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$value as xs:boolean})","trigger":"admin:database-set-attribute-value-positions","description":"($config,$database-id,$value)"},{"content":"admin:database-set-collection-lexicon(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$value as xs:boolean})","trigger":"admin:database-set-collection-lexicon","description":"($config,$database-id,$value)"},{"content":"admin:database-set-directory-creation(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$value as xs:string})","trigger":"admin:database-set-directory-creation","description":"($config,$database-id,$value)"},{"content":"admin:database-set-element-value-positions(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$value as xs:boolean})","trigger":"admin:database-set-element-value-positions","description":"($config,$database-id,$value)"},{"content":"admin:database-set-element-word-positions(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$value as xs:boolean})","trigger":"admin:database-set-element-word-positions","description":"($config,$database-id,$value)"},{"content":"admin:database-set-enabled(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$value as xs:boolean})","trigger":"admin:database-set-enabled","description":"($config,$database-id,$value)"},{"content":"admin:database-set-expunge-locks(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$value as xs:string})","trigger":"admin:database-set-expunge-locks","description":"($config,$database-id,$value)"},{"content":"admin:database-set-fast-case-sensitive-searches(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$value as xs:boolean})","trigger":"admin:database-set-fast-case-sensitive-searches","description":"($config,$database-id,$value)"},{"content":"admin:database-set-fast-diacritic-sensitive-searches(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$value as xs:boolean})","trigger":"admin:database-set-fast-diacritic-sensitive-searches","description":"($config,$database-id,$value)"},{"content":"admin:database-set-fast-element-character-searches(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$value as xs:boolean})","trigger":"admin:database-set-fast-element-character-searches","description":"($config,$database-id,$value)"},{"content":"admin:database-set-fast-element-phrase-searches(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$value as xs:boolean})","trigger":"admin:database-set-fast-element-phrase-searches","description":"($config,$database-id,$value)"},{"content":"admin:database-set-fast-element-trailing-wildcard-searches(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$value as xs:boolean})","trigger":"admin:database-set-fast-element-trailing-wildcard-searches","description":"($config,$database-id,$value)"},{"content":"admin:database-set-fast-element-word-searches(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$value as xs:boolean})","trigger":"admin:database-set-fast-element-word-searches","description":"($config,$database-id,$value)"},{"content":"admin:database-set-fast-phrase-searches(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$value as xs:boolean})","trigger":"admin:database-set-fast-phrase-searches","description":"($config,$database-id,$value)"},{"content":"admin:database-set-fast-reverse-searches(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$value as xs:boolean})","trigger":"admin:database-set-fast-reverse-searches","description":"($config,$database-id,$value)"},{"content":"admin:database-set-field-fast-case-sensitive-searches(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$field-name as xs:string}, ${4:\\$value as xs:boolean?})","trigger":"admin:database-set-field-fast-case-sensitive-searches","description":"($config,$database-id,$field-name,$value)"},{"content":"admin:database-set-field-fast-diacritic-sensitive-searches(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$field-name as xs:string}, ${4:\\$value as xs:boolean?})","trigger":"admin:database-set-field-fast-diacritic-sensitive-searches","description":"($config,$database-id,$field-name,$value)"},{"content":"admin:database-set-field-fast-phrase-searches(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$field-name as xs:string}, ${4:\\$value as xs:boolean?})","trigger":"admin:database-set-field-fast-phrase-searches","description":"($config,$database-id,$field-name,$value)"},{"content":"admin:database-set-field-include-document-root(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$field-name as xs:string}, ${4:\\$value as xs:boolean})","trigger":"admin:database-set-field-include-document-root","description":"($config,$database-id,$field-name,$value)"},{"content":"admin:database-set-field-name(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$field-name as xs:string}, ${4:\\$value as xs:string})","trigger":"admin:database-set-field-name","description":"($config,$database-id,$field-name,$value)"},{"content":"admin:database-set-field-one-character-searches(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$field-name as xs:string}, ${4:\\$value as xs:boolean?})","trigger":"admin:database-set-field-one-character-searches","description":"($config,$database-id,$field-name,$value)"},{"content":"admin:database-set-field-stemmed-searches(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$field-name as xs:string}, ${4:\\$value as xs:string?})","trigger":"admin:database-set-field-stemmed-searches","description":"($config,$database-id,$field-name,$value)"},{"content":"admin:database-set-field-three-character-searches(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$field-name as xs:string}, ${4:\\$value as xs:boolean?})","trigger":"admin:database-set-field-three-character-searches","description":"($config,$database-id,$field-name,$value)"},{"content":"admin:database-set-field-three-character-word-positions(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$field-name as xs:string}, ${4:\\$value as xs:boolean?})","trigger":"admin:database-set-field-three-character-word-positions","description":"($config,$database-id,$field-name,$value)"},{"content":"admin:database-set-field-trailing-wildcard-searches(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$field-name as xs:string}, ${4:\\$value as xs:boolean?})","trigger":"admin:database-set-field-trailing-wildcard-searches","description":"($config,$database-id,$field-name,$value)"},{"content":"admin:database-set-field-trailing-wildcard-word-positions(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$field-name as xs:string}, ${4:\\$value as xs:boolean?})","trigger":"admin:database-set-field-trailing-wildcard-word-positions","description":"($config,$database-id,$field-name,$value)"},{"content":"admin:database-set-field-two-character-searches(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$field-name as xs:string}, ${4:\\$value as xs:boolean?})","trigger":"admin:database-set-field-two-character-searches","description":"($config,$database-id,$field-name,$value)"},{"content":"admin:database-set-field-value-positions(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$field-name as xs:string}, ${4:\\$value as xs:boolean?})","trigger":"admin:database-set-field-value-positions","description":"($config,$database-id,$field-name,$value)"},{"content":"admin:database-set-field-value-searches(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$field-name as xs:string}, ${4:\\$value as xs:boolean?})","trigger":"admin:database-set-field-value-searches","description":"($config,$database-id,$field-name,$value)"},{"content":"admin:database-set-field-word-searches(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$field-name as xs:string}, ${4:\\$value as xs:boolean?})","trigger":"admin:database-set-field-word-searches","description":"($config,$database-id,$field-name,$value)"},{"content":"admin:database-set-foreign-master(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$foreign-master as element(db:foreign-master)})","trigger":"admin:database-set-foreign-master","description":"($config,$database-id,$foreign-master)"},{"content":"admin:database-set-foreign-replicas(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$replicas as element(db:foreign-replica)*})","trigger":"admin:database-set-foreign-replicas","description":"($config,$database-id,$replicas)"},{"content":"admin:database-set-format-compatibility(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$value as xs:string})","trigger":"admin:database-set-format-compatibility","description":"($config,$database-id,$value)"},{"content":"admin:database-set-in-memory-limit(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$value as xs:unsignedInt})","trigger":"admin:database-set-in-memory-limit","description":"($config,$database-id,$value)"},{"content":"admin:database-set-in-memory-list-size(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$value as xs:unsignedInt})","trigger":"admin:database-set-in-memory-list-size","description":"($config,$database-id,$value)"},{"content":"admin:database-set-in-memory-range-index-size(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$value as xs:unsignedInt})","trigger":"admin:database-set-in-memory-range-index-size","description":"($config,$database-id,$value)"},{"content":"admin:database-set-in-memory-reverse-index-size(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$value as xs:unsignedInt})","trigger":"admin:database-set-in-memory-reverse-index-size","description":"($config,$database-id,$value)"},{"content":"admin:database-set-in-memory-tree-size(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$value as xs:unsignedInt})","trigger":"admin:database-set-in-memory-tree-size","description":"($config,$database-id,$value)"},{"content":"admin:database-set-in-memory-triple-index-size(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$value as xs:unsignedInt})","trigger":"admin:database-set-in-memory-triple-index-size","description":"($config,$database-id,$value)"},{"content":"admin:database-set-index-detection(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$value as xs:string})","trigger":"admin:database-set-index-detection","description":"($config,$database-id,$value)"},{"content":"admin:database-set-inherit-collections(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$value as xs:boolean})","trigger":"admin:database-set-inherit-collections","description":"($config,$database-id,$value)"},{"content":"admin:database-set-inherit-permissions(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$value as xs:boolean})","trigger":"admin:database-set-inherit-permissions","description":"($config,$database-id,$value)"},{"content":"admin:database-set-inherit-quality(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$value as xs:boolean})","trigger":"admin:database-set-inherit-quality","description":"($config,$database-id,$value)"},{"content":"admin:database-set-journal-size(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$value as xs:unsignedInt})","trigger":"admin:database-set-journal-size","description":"($config,$database-id,$value)"},{"content":"admin:database-set-journaling(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$value as xs:string})","trigger":"admin:database-set-journaling","description":"($config,$database-id,$value)"},{"content":"admin:database-set-language(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$value as xs:string})","trigger":"admin:database-set-language","description":"($config,$database-id,$value)"},{"content":"admin:database-set-large-size-threshold(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$value as xs:unsignedInt})","trigger":"admin:database-set-large-size-threshold","description":"($config,$database-id,$value)"},{"content":"admin:database-set-locking(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$value as xs:string})","trigger":"admin:database-set-locking","description":"($config,$database-id,$value)"},{"content":"admin:database-set-maintain-directory-last-modified(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$value as xs:boolean})","trigger":"admin:database-set-maintain-directory-last-modified","description":"($config,$database-id,$value)"},{"content":"admin:database-set-maintain-last-modified(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$value as xs:boolean})","trigger":"admin:database-set-maintain-last-modified","description":"($config,$database-id,$value)"},{"content":"admin:database-set-merge-max-size(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$value as xs:unsignedInt})","trigger":"admin:database-set-merge-max-size","description":"($config,$database-id,$value)"},{"content":"admin:database-set-merge-min-ratio(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$value as xs:unsignedInt})","trigger":"admin:database-set-merge-min-ratio","description":"($config,$database-id,$value)"},{"content":"admin:database-set-merge-min-size(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$value as xs:unsignedInt})","trigger":"admin:database-set-merge-min-size","description":"($config,$database-id,$value)"},{"content":"admin:database-set-merge-priority(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$value as xs:string})","trigger":"admin:database-set-merge-priority","description":"($config,$database-id,$value)"},{"content":"admin:database-set-merge-timestamp(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$value as xs:long})","trigger":"admin:database-set-merge-timestamp","description":"($config,$database-id,$value)"},{"content":"admin:database-set-name(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$value as xs:string})","trigger":"admin:database-set-name","description":"($config,$database-id,$value)"},{"content":"admin:database-set-one-character-searches(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$value as xs:boolean})","trigger":"admin:database-set-one-character-searches","description":"($config,$database-id,$value)"},{"content":"admin:database-set-positions-list-max-size(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$value as xs:unsignedInt})","trigger":"admin:database-set-positions-list-max-size","description":"($config,$database-id,$value)"},{"content":"admin:database-set-preallocate-journals(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$value as xs:boolean})","trigger":"admin:database-set-preallocate-journals","description":"($config,$database-id,$value)"},{"content":"admin:database-set-preload-mapped-data(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$value as xs:boolean})","trigger":"admin:database-set-preload-mapped-data","description":"($config,$database-id,$value)"},{"content":"admin:database-set-preload-replica-mapped-data(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$value as xs:boolean})","trigger":"admin:database-set-preload-replica-mapped-data","description":"($config,$database-id,$value)"},{"content":"admin:database-set-range-index-optimize(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$value as xs:string})","trigger":"admin:database-set-range-index-optimize","description":"($config,$database-id,$value)"},{"content":"admin:database-set-rebalancer-enable(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$value as xs:boolean})","trigger":"admin:database-set-rebalancer-enable","description":"($config,$database-id,$value)"},{"content":"admin:database-set-rebalancer-throttle(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$value as xs:unsignedInt})","trigger":"admin:database-set-rebalancer-throttle","description":"($config,$database-id,$value)"},{"content":"admin:database-set-reindexer-enable(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$value as xs:boolean})","trigger":"admin:database-set-reindexer-enable","description":"($config,$database-id,$value)"},{"content":"admin:database-set-reindexer-throttle(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$value as xs:unsignedInt})","trigger":"admin:database-set-reindexer-throttle","description":"($config,$database-id,$value)"},{"content":"admin:database-set-reindexer-timestamp(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$value as xs:unsignedLong})","trigger":"admin:database-set-reindexer-timestamp","description":"($config,$database-id,$value)"},{"content":"admin:database-set-retain-until-backup(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$value as xs:boolean})","trigger":"admin:database-set-retain-until-backup","description":"($config,$database-id,$value)"},{"content":"admin:database-set-schema-database(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$value as xs:unsignedLong})","trigger":"admin:database-set-schema-database","description":"($config,$database-id,$value)"},{"content":"admin:database-set-security-database(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$value as xs:unsignedLong})","trigger":"admin:database-set-security-database","description":"($config,$database-id,$value)"},{"content":"admin:database-set-stemmed-searches(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$value as xs:string})","trigger":"admin:database-set-stemmed-searches","description":"($config,$database-id,$value)"},{"content":"admin:database-set-tf-normalization(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$value as xs:string})","trigger":"admin:database-set-tf-normalization","description":"($config,$database-id,$value)"},{"content":"admin:database-set-three-character-searches(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$value as xs:boolean})","trigger":"admin:database-set-three-character-searches","description":"($config,$database-id,$value)"},{"content":"admin:database-set-three-character-word-positions(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$value as xs:boolean})","trigger":"admin:database-set-three-character-word-positions","description":"($config,$database-id,$value)"},{"content":"admin:database-set-trailing-wildcard-searches(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$value as xs:boolean})","trigger":"admin:database-set-trailing-wildcard-searches","description":"($config,$database-id,$value)"},{"content":"admin:database-set-trailing-wildcard-word-positions(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$value as xs:boolean})","trigger":"admin:database-set-trailing-wildcard-word-positions","description":"($config,$database-id,$value)"},{"content":"admin:database-set-triggers-database(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$value as xs:unsignedLong})","trigger":"admin:database-set-triggers-database","description":"($config,$database-id,$value)"},{"content":"admin:database-set-triple-index(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$value as xs:boolean})","trigger":"admin:database-set-triple-index","description":"($config,$database-id,$value)"},{"content":"admin:database-set-triple-positions(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$value as xs:boolean})","trigger":"admin:database-set-triple-positions","description":"($config,$database-id,$value)"},{"content":"admin:database-set-two-character-searches(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$value as xs:boolean})","trigger":"admin:database-set-two-character-searches","description":"($config,$database-id,$value)"},{"content":"admin:database-set-uri-lexicon(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$value as xs:boolean})","trigger":"admin:database-set-uri-lexicon","description":"($config,$database-id,$value)"},{"content":"admin:database-set-word-positions(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$value as xs:boolean})","trigger":"admin:database-set-word-positions","description":"($config,$database-id,$value)"},{"content":"admin:database-set-word-query-fast-case-sensitive-searches(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$value as xs:boolean?})","trigger":"admin:database-set-word-query-fast-case-sensitive-searches","description":"($config,$database-id,$value)"},{"content":"admin:database-set-word-query-fast-diacritic-sensitive-searches(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$value as xs:boolean?})","trigger":"admin:database-set-word-query-fast-diacritic-sensitive-searches","description":"($config,$database-id,$value)"},{"content":"admin:database-set-word-query-fast-phrase-searches(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$value as xs:boolean?})","trigger":"admin:database-set-word-query-fast-phrase-searches","description":"($config,$database-id,$value)"},{"content":"admin:database-set-word-query-include-document-root(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$value as xs:boolean})","trigger":"admin:database-set-word-query-include-document-root","description":"($config,$database-id,$value)"},{"content":"admin:database-set-word-query-one-character-searches(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$value as xs:boolean?})","trigger":"admin:database-set-word-query-one-character-searches","description":"($config,$database-id,$value)"},{"content":"admin:database-set-word-query-stemmed-searches(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$value as xs:string?})","trigger":"admin:database-set-word-query-stemmed-searches","description":"($config,$database-id,$value)"},{"content":"admin:database-set-word-query-three-character-searches(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$value as xs:boolean?})","trigger":"admin:database-set-word-query-three-character-searches","description":"($config,$database-id,$value)"},{"content":"admin:database-set-word-query-three-character-word-positions(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$value as xs:boolean?})","trigger":"admin:database-set-word-query-three-character-word-positions","description":"($config,$database-id,$value)"},{"content":"admin:database-set-word-query-trailing-wildcard-searches(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$value as xs:boolean?})","trigger":"admin:database-set-word-query-trailing-wildcard-searches","description":"($config,$database-id,$value)"},{"content":"admin:database-set-word-query-trailing-wildcard-word-positions(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$value as xs:boolean?})","trigger":"admin:database-set-word-query-trailing-wildcard-word-positions","description":"($config,$database-id,$value)"},{"content":"admin:database-set-word-query-two-character-searches(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$value as xs:boolean?})","trigger":"admin:database-set-word-query-two-character-searches","description":"($config,$database-id,$value)"},{"content":"admin:database-set-word-query-word-searches(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$value as xs:boolean?})","trigger":"admin:database-set-word-query-word-searches","description":"($config,$database-id,$value)"},{"content":"admin:database-set-word-searches(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$value as xs:boolean})","trigger":"admin:database-set-word-searches","description":"($config,$database-id,$value)"},{"content":"admin:database-sub-databases(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong})","trigger":"admin:database-sub-databases","description":"($config,$database-id)"},{"content":"admin:database-super-databases(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong})","trigger":"admin:database-super-databases","description":"($config,$database-id)"},{"content":"admin:database-tokenizer-override(${1:\\$character as xs:string}, ${2:\\$class as xs:string})","trigger":"admin:database-tokenizer-override","description":"($character,$class)"},{"content":"admin:database-validate-field-path(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$field-path as element(db:field-path)})","trigger":"admin:database-validate-field-path","description":"($config,$database-id,$field-path)"},{"content":"admin:database-validate-field-paths(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$field-paths as element(db:field-path)*})","trigger":"admin:database-validate-field-paths","description":"($config,$database-id,$field-paths)"},{"content":"admin:database-validate-path-fields(${1:\\$config as element(configuration)}, ${2:\\$database-id as xs:unsignedLong}, ${3:\\$fields as element(db:field)*})","trigger":"admin:database-validate-path-fields","description":"($config,$database-id,$fields)"},{"content":"admin:database-weekly-backup(${1:\\$backup-dir as xs:string}, ${2:\\$backup-period as xs:positiveInteger}, ${3:\\$days as xs:string+}, ${4:\\$start-time as xs:time}, ${5:\\$max-backups as xs:unsignedLong}, ${6:\\$backup-security-db as xs:boolean}, ${7:\\$backup-schemas-db as xs:boolean}, ${8:\\$backup-triggers-db as xs:boolean})","trigger":"admin:database-weekly-backup","description":"($backup-dir,$backup-period,$days,$start-time,$max-backups,$backup-security-db,$backup-schemas-db,$backup-triggers-db)"},{"content":"admin:database-weekly-backup(${1:\\$backup-dir as xs:string}, ${2:\\$backup-period as xs:positiveInteger}, ${3:\\$days as xs:string+}, ${4:\\$start-time as xs:time}, ${5:\\$max-backups as xs:unsignedLong}, ${6:\\$backup-security-db as xs:boolean}, ${7:\\$backup-schemas-db as xs:boolean}, ${8:\\$backup-triggers-db as xs:boolean}, ${9:\\$include-replicas as xs:boolean})","trigger":"admin:database-weekly-backup","description":"($backup-dir,$backup-period,$days,$start-time,$max-backups,$backup-security-db,$backup-schemas-db,$backup-triggers-db,$include-replicas)"},{"content":"admin:database-weekly-backup(${1:\\$backup-dir as xs:string}, ${2:\\$backup-period as xs:positiveInteger}, ${3:\\$days as xs:string+}, ${4:\\$start-time as xs:time}, ${5:\\$max-backups as xs:unsignedLong}, ${6:\\$backup-security-db as xs:boolean}, ${7:\\$backup-schemas-db as xs:boolean}, ${8:\\$backup-triggers-db as xs:boolean}, ${9:\\$include-replicas as xs:boolean}, ${10:\\$journal-archiving as xs:boolean})","trigger":"admin:database-weekly-backup","description":"($backup-dir,$backup-period,$days,$start-time,$max-backups,$backup-security-db,$backup-schemas-db,$backup-triggers-db,$include-replicas,$journal-archiving)"},{"content":"admin:database-weekly-backup(${1:\\$backup-dir as xs:string}, ${2:\\$backup-period as xs:positiveInteger}, ${3:\\$days as xs:string+}, ${4:\\$start-time as xs:time}, ${5:\\$max-backups as xs:unsignedLong}, ${6:\\$backup-security-db as xs:boolean}, ${7:\\$backup-schemas-db as xs:boolean}, ${8:\\$backup-triggers-db as xs:boolean}, ${9:\\$include-replicas as xs:boolean}, ${10:\\$journal-archiving as xs:boolean}, ${11:\\$journal-archive-path as xs:string})","trigger":"admin:database-weekly-backup","description":"($backup-dir,$backup-period,$days,$start-time,$max-backups,$backup-security-db,$backup-schemas-db,$backup-triggers-db,$include-replicas,$journal-archiving,$journal-archive-path)"},{"content":"admin:database-weekly-backup(${1:\\$backup-dir as xs:string}, ${2:\\$backup-period as xs:positiveInteger}, ${3:\\$days as xs:string+}, ${4:\\$start-time as xs:time}, ${5:\\$max-backups as xs:unsignedLong}, ${6:\\$backup-security-db as xs:boolean}, ${7:\\$backup-schemas-db as xs:boolean}, ${8:\\$backup-triggers-db as xs:boolean}, ${9:\\$include-replicas as xs:boolean}, ${10:\\$journal-archiving as xs:boolean}, ${11:\\$journal-archive-path as xs:string}, ${12:\\$lag-limit as xs:unsignedLong})","trigger":"admin:database-weekly-backup","description":"($backup-dir,$backup-period,$days,$start-time,$max-backups,$backup-security-db,$backup-schemas-db,$backup-triggers-db,$include-replicas,$journal-archiving,$journal-archive-path,$lag-limit)"},{"content":"admin:database-weekly-incremental-backup(${1:\\$backup-dir as xs:string}, ${2:\\$backup-period as xs:positiveInteger}, ${3:\\$days as xs:string+}, ${4:\\$start-time as xs:time}, ${5:\\$backup-security-db as xs:boolean}, ${6:\\$backup-schemas-db as xs:boolean}, ${7:\\$backup-triggers-db as xs:boolean})","trigger":"admin:database-weekly-incremental-backup","description":"($backup-dir,$backup-period,$days,$start-time,$backup-security-db,$backup-schemas-db,$backup-triggers-db)"},{"content":"admin:database-weekly-incremental-backup(${1:\\$backup-dir as xs:string}, ${2:\\$backup-period as xs:positiveInteger}, ${3:\\$days as xs:string+}, ${4:\\$start-time as xs:time}, ${5:\\$backup-security-db as xs:boolean}, ${6:\\$backup-schemas-db as xs:boolean}, ${7:\\$backup-triggers-db as xs:boolean}, ${8:\\$include-replicas as xs:boolean})","trigger":"admin:database-weekly-incremental-backup","description":"($backup-dir,$backup-period,$days,$start-time,$backup-security-db,$backup-schemas-db,$backup-triggers-db,$include-replicas)"},{"content":"admin:database-weekly-incremental-backup(${1:\\$backup-dir as xs:string}, ${2:\\$backup-period as xs:positiveInteger}, ${3:\\$days as xs:string+}, ${4:\\$start-time as xs:time}, ${5:\\$backup-security-db as xs:boolean}, ${6:\\$backup-schemas-db as xs:boolean}, ${7:\\$backup-triggers-db as xs:boolean}, ${8:\\$include-replicas as xs:boolean}, ${9:\\$incremental-dir as xs:string?})","trigger":"admin:database-weekly-incremental-backup","description":"($backup-dir,$backup-period,$days,$start-time,$backup-security-db,$backup-schemas-db,$backup-triggers-db,$include-replicas,$incremental-dir)"},{"content":"admin:database-weekly-incremental-backup(${1:\\$backup-dir as xs:string}, ${2:\\$backup-period as xs:positiveInteger}, ${3:\\$days as xs:string+}, ${4:\\$start-time as xs:time}, ${5:\\$backup-security-db as xs:boolean}, ${6:\\$backup-schemas-db as xs:boolean}, ${7:\\$backup-triggers-db as xs:boolean}, ${8:\\$include-replicas as xs:boolean}, ${9:\\$incremental-dir as xs:string?}, ${10:\\$purge-journal-archive as xs:boolean?})","trigger":"admin:database-weekly-incremental-backup","description":"($backup-dir,$backup-period,$days,$start-time,$backup-security-db,$backup-schemas-db,$backup-triggers-db,$include-replicas,$incremental-dir,$purge-journal-archive)"},{"content":"admin:database-weekly-incremental-backup(${1:\\$backup-dir as xs:string}, ${2:\\$backup-period as xs:positiveInteger}, ${3:\\$days as xs:string+}, ${4:\\$start-time as xs:time}, ${5:\\$backup-security-db as xs:boolean}, ${6:\\$backup-schemas-db as xs:boolean}, ${7:\\$backup-triggers-db as xs:boolean}, ${8:\\$include-replicas as xs:boolean}, ${9:\\$incremental-dir as xs:string?}, ${10:\\$purge-journal-archive as xs:boolean?}, ${11:\\$journal-archiving as xs:boolean})","trigger":"admin:database-weekly-incremental-backup","description":"($backup-dir,$backup-period,$days,$start-time,$backup-security-db,$backup-schemas-db,$backup-triggers-db,$include-replicas,$incremental-dir,$purge-journal-archive,$journal-archiving)"},{"content":"admin:database-weekly-incremental-backup(${1:\\$backup-dir as xs:string}, ${2:\\$backup-period as xs:positiveInteger}, ${3:\\$days as xs:string+}, ${4:\\$start-time as xs:time}, ${5:\\$backup-security-db as xs:boolean}, ${6:\\$backup-schemas-db as xs:boolean}, ${7:\\$backup-triggers-db as xs:boolean}, ${8:\\$include-replicas as xs:boolean}, ${9:\\$incremental-dir as xs:string?}, ${10:\\$purge-journal-archive as xs:boolean?}, ${11:\\$journal-archiving as xs:boolean}, ${12:\\$journal-archive-path as xs:string})","trigger":"admin:database-weekly-incremental-backup","description":"($backup-dir,$backup-period,$days,$start-time,$backup-security-db,$backup-schemas-db,$backup-triggers-db,$include-replicas,$incremental-dir,$purge-journal-archive,$journal-archiving,$journal-archive-path)"},{"content":"admin:database-weekly-incremental-backup(${1:\\$backup-dir as xs:string}, ${2:\\$backup-period as xs:positiveInteger}, ${3:\\$days as xs:string+}, ${4:\\$start-time as xs:time}, ${5:\\$backup-security-db as xs:boolean}, ${6:\\$backup-schemas-db as xs:boolean}, ${7:\\$backup-triggers-db as xs:boolean}, ${8:\\$include-replicas as xs:boolean}, ${9:\\$incremental-dir as xs:string?}, ${10:\\$purge-journal-archive as xs:boolean?}, ${11:\\$journal-archiving as xs:boolean}, ${12:\\$journal-archive-path as xs:string}, ${13:\\$lag-limit as xs:unsignedLong})","trigger":"admin:database-weekly-incremental-backup","description":"($backup-dir,$backup-period,$days,$start-time,$backup-security-db,$backup-schemas-db,$backup-triggers-db,$include-replicas,$incremental-dir,$purge-journal-archive,$journal-archiving,$journal-archive-path,$lag-limit)"},{"content":"admin:database-word-lexicon(${1:\\$collation as xs:string})","trigger":"admin:database-word-lexicon","description":"($collation)"},{"content":"admin:foreign-cluster-create(${1:\\$config as element(configuration)}, ${2:\\$cluster-id as xs:unsignedLong}, ${3:\\$cluster-name as xs:string}, ${4:\\$xdqp-timeout as xs:unsignedInt?}, ${5:\\$host-timeout as xs:unsignedInt?}, ${6:\\$ssl-certificate as xs:string?}, ${7:\\$xdqp-ssl-enabled as xs:boolean?}, ${8:\\$xdqp-ssl-allow-sslv3 as xs:boolean?}, ${9:\\$xdqp-ssl-allow-tls as xs:boolean?}, ${10:\\$xdqp-ssl-ciphers as xs:string?}, ${11:\\$foreign-bootstrap-hosts as element(cl:foreign-host)*})","trigger":"admin:foreign-cluster-create","description":"($config,$cluster-id,$cluster-name,$xdqp-timeout,$host-timeout,$ssl-certificate,$xdqp-ssl-enabled,$xdqp-ssl-allow-sslv3,$xdqp-ssl-allow-tls,$xdqp-ssl-ciphers,$foreign-bootstrap-hosts)"},{"content":"admin:foreign-cluster-delete(${1:\\$config as element(configuration)}, ${2:\\$cluster-id as xs:unsignedLong})","trigger":"admin:foreign-cluster-delete","description":"($config,$cluster-id)"},{"content":"admin:foreign-cluster-get-bootstrap-hosts(${1:\\$config as element(configuration)}, ${2:\\$cluster-id as xs:unsignedLong})","trigger":"admin:foreign-cluster-get-bootstrap-hosts","description":"($config,$cluster-id)"},{"content":"admin:foreign-cluster-get-host-timeout(${1:\\$config as element(configuration)}, ${2:\\$cluster-id as xs:unsignedLong})","trigger":"admin:foreign-cluster-get-host-timeout","description":"($config,$cluster-id)"},{"content":"admin:foreign-cluster-get-name(${1:\\$config as element(configuration)}, ${2:\\$cluster-id as xs:unsignedLong})","trigger":"admin:foreign-cluster-get-name","description":"($config,$cluster-id)"},{"content":"admin:foreign-cluster-get-ssl-certificate(${1:\\$config as element(configuration)}, ${2:\\$cluster-id as xs:unsignedLong})","trigger":"admin:foreign-cluster-get-ssl-certificate","description":"($config,$cluster-id)"},{"content":"admin:foreign-cluster-get-xdqp-ssl-allow-sslv3(${1:\\$config as element(configuration)}, ${2:\\$cluster-id as xs:unsignedLong})","trigger":"admin:foreign-cluster-get-xdqp-ssl-allow-sslv3","description":"($config,$cluster-id)"},{"content":"admin:foreign-cluster-get-xdqp-ssl-allow-tls(${1:\\$config as element(configuration)}, ${2:\\$cluster-id as xs:unsignedLong})","trigger":"admin:foreign-cluster-get-xdqp-ssl-allow-tls","description":"($config,$cluster-id)"},{"content":"admin:foreign-cluster-get-xdqp-ssl-ciphers(${1:\\$config as element(configuration)}, ${2:\\$cluster-id as xs:unsignedLong})","trigger":"admin:foreign-cluster-get-xdqp-ssl-ciphers","description":"($config,$cluster-id)"},{"content":"admin:foreign-cluster-get-xdqp-ssl-enabled(${1:\\$config as element(configuration)}, ${2:\\$cluster-id as xs:unsignedLong})","trigger":"admin:foreign-cluster-get-xdqp-ssl-enabled","description":"($config,$cluster-id)"},{"content":"admin:foreign-cluster-get-xdqp-timeout(${1:\\$config as element(configuration)}, ${2:\\$cluster-id as xs:unsignedLong})","trigger":"admin:foreign-cluster-get-xdqp-timeout","description":"($config,$cluster-id)"},{"content":"admin:foreign-cluster-replace(${1:\\$config as element(configuration)}, ${2:\\$cluster-id as xs:unsignedLong}, ${3:\\$cluster-name as xs:string}, ${4:\\$xdqp-timeout as xs:unsignedInt?}, ${5:\\$host-timeout as xs:unsignedInt?}, ${6:\\$ssl-certificate as xs:string?}, ${7:\\$xdqp-ssl-enabled as xs:boolean?}, ${8:\\$xdqp-ssl-allow-sslv3 as xs:boolean?}, ${9:\\$xdqp-ssl-allow-tls as xs:boolean?}, ${10:\\$xdqp-ssl-ciphers as xs:string?}, ${11:\\$foreign-bootstrap-hosts as element(cl:foreign-host)*})","trigger":"admin:foreign-cluster-replace","description":"($config,$cluster-id,$cluster-name,$xdqp-timeout,$host-timeout,$ssl-certificate,$xdqp-ssl-enabled,$xdqp-ssl-allow-sslv3,$xdqp-ssl-allow-tls,$xdqp-ssl-ciphers,$foreign-bootstrap-hosts)"},{"content":"admin:foreign-cluster-set-bootstrap-hosts(${1:\\$config as element(configuration)}, ${2:\\$cluster-id as xs:unsignedLong}, ${3:\\$bootstrap-hosts as element(cl:foreign-host)*})","trigger":"admin:foreign-cluster-set-bootstrap-hosts","description":"($config,$cluster-id,$bootstrap-hosts)"},{"content":"admin:foreign-cluster-set-host-timeout(${1:\\$config as element(configuration)}, ${2:\\$cluster-id as xs:unsignedLong}, ${3:\\$host-timeout as xs:unsignedInt})","trigger":"admin:foreign-cluster-set-host-timeout","description":"($config,$cluster-id,$host-timeout)"},{"content":"admin:foreign-cluster-set-name(${1:\\$config as element(configuration)}, ${2:\\$cluster-id as xs:unsignedLong}, ${3:\\$cluster-name as xs:string})","trigger":"admin:foreign-cluster-set-name","description":"($config,$cluster-id,$cluster-name)"},{"content":"admin:foreign-cluster-set-ssl-certificate(${1:\\$config as element(configuration)}, ${2:\\$cluster-id as xs:unsignedLong}, ${3:\\$ssl-certificate as xs:string?})","trigger":"admin:foreign-cluster-set-ssl-certificate","description":"($config,$cluster-id,$ssl-certificate)"},{"content":"admin:foreign-cluster-set-xdqp-ssl-allow-sslv3(${1:\\$config as element(configuration)}, ${2:\\$cluster-id as xs:unsignedLong}, ${3:\\$value as xs:boolean})","trigger":"admin:foreign-cluster-set-xdqp-ssl-allow-sslv3","description":"($config,$cluster-id,$value)"},{"content":"admin:foreign-cluster-set-xdqp-ssl-allow-tls(${1:\\$config as element(configuration)}, ${2:\\$cluster-id as xs:unsignedLong}, ${3:\\$value as xs:boolean})","trigger":"admin:foreign-cluster-set-xdqp-ssl-allow-tls","description":"($config,$cluster-id,$value)"},{"content":"admin:foreign-cluster-set-xdqp-ssl-ciphers(${1:\\$config as element(configuration)}, ${2:\\$cluster-id as xs:unsignedLong}, ${3:\\$value as xs:string})","trigger":"admin:foreign-cluster-set-xdqp-ssl-ciphers","description":"($config,$cluster-id,$value)"},{"content":"admin:foreign-cluster-set-xdqp-ssl-enabled(${1:\\$config as element(configuration)}, ${2:\\$cluster-id as xs:unsignedLong}, ${3:\\$value as xs:boolean})","trigger":"admin:foreign-cluster-set-xdqp-ssl-enabled","description":"($config,$cluster-id,$value)"},{"content":"admin:foreign-cluster-set-xdqp-timeout(${1:\\$config as element(configuration)}, ${2:\\$cluster-id as xs:unsignedLong}, ${3:\\$xdqp-timeout as xs:unsignedInt})","trigger":"admin:foreign-cluster-set-xdqp-timeout","description":"($config,$cluster-id,$xdqp-timeout)"},{"content":"admin:foreign-host(${1:\\$host-id as xs:unsignedLong}, ${2:\\$host-name as xs:string}, ${3:\\$connect-port as xs:unsignedInt})","trigger":"admin:foreign-host","description":"($host-id,$host-name,$connect-port)"},{"content":"admin:foreign-host-get-connect-port(${1:\\$fh as element(cl:foreign-host)})","trigger":"admin:foreign-host-get-connect-port","description":"($fh)"},{"content":"admin:foreign-host-get-id(${1:\\$fh as element(cl:foreign-host)})","trigger":"admin:foreign-host-get-id","description":"($fh)"},{"content":"admin:foreign-host-get-name(${1:\\$fh as element(cl:foreign-host)})","trigger":"admin:foreign-host-get-name","description":"($fh)"},{"content":"admin:forest-add-backup(${1:\\$config as element(configuration)}, ${2:\\$forest-id as xs:unsignedLong}, ${3:\\$backups as element(as:forest-backup)*})","trigger":"admin:forest-add-backup","description":"($config,$forest-id,$backups)"},{"content":"admin:forest-add-failover-host(${1:\\$config as element(configuration)}, ${2:\\$forest-id as xs:unsignedLong}, ${3:\\$hosts as xs:unsignedLong*})","trigger":"admin:forest-add-failover-host","description":"($config,$forest-id,$hosts)"},{"content":"admin:forest-add-foreign-replicas(${1:\\$config as element(configuration)}, ${2:\\$forest-id as xs:unsignedLong}, ${3:\\$foreign-replicas as element(as:foreign-replica)*})","trigger":"admin:forest-add-foreign-replicas","description":"($config,$forest-id,$foreign-replicas)"},{"content":"admin:forest-add-replica(${1:\\$config as element(configuration)}, ${2:\\$master-id as xs:unsignedLong}, ${3:\\$replica-id as xs:unsignedLong})","trigger":"admin:forest-add-replica","description":"($config,$master-id,$replica-id)"},{"content":"admin:forest-copy(${1:\\$config as element(configuration)}, ${2:\\$forest-id as xs:unsignedLong}, ${3:\\$forest-name as xs:string}, ${4:\\$data-directory as xs:string?})","trigger":"admin:forest-copy","description":"($config,$forest-id,$forest-name,$data-directory)"},{"content":"admin:forest-copy(${1:\\$config as element(configuration)}, ${2:\\$forest-id as xs:unsignedLong}, ${3:\\$forest-name as xs:string}, ${4:\\$data-directory as xs:string?}, ${5:\\$large-data-directory as xs:string?})","trigger":"admin:forest-copy","description":"($config,$forest-id,$forest-name,$data-directory,$large-data-directory)"},{"content":"admin:forest-copy(${1:\\$config as element(configuration)}, ${2:\\$forest-id as xs:unsignedLong}, ${3:\\$forest-name as xs:string}, ${4:\\$data-directory as xs:string?}, ${5:\\$large-data-directory as xs:string?}, ${6:\\$fast-data-directory as xs:string?})","trigger":"admin:forest-copy","description":"($config,$forest-id,$forest-name,$data-directory,$large-data-directory,$fast-data-directory)"},{"content":"admin:forest-create(${1:\\$config as element(configuration)}, ${2:\\$forest-name as xs:string}, ${3:\\$host-id as xs:unsignedLong}, ${4:\\$data-directory as xs:string?})","trigger":"admin:forest-create","description":"($config,$forest-name,$host-id,$data-directory)"},{"content":"admin:forest-create(${1:\\$config as element(configuration)}, ${2:\\$forest-name as xs:string}, ${3:\\$host-id as xs:unsignedLong}, ${4:\\$data-directory as xs:string?}, ${5:\\$large-data-directory as xs:string?})","trigger":"admin:forest-create","description":"($config,$forest-name,$host-id,$data-directory,$large-data-directory)"},{"content":"admin:forest-create(${1:\\$config as element(configuration)}, ${2:\\$forest-name as xs:string}, ${3:\\$host-id as xs:unsignedLong}, ${4:\\$data-directory as xs:string?}, ${5:\\$large-data-directory as xs:string?}, ${6:\\$fast-data-directory as xs:string?})","trigger":"admin:forest-create","description":"($config,$forest-name,$host-id,$data-directory,$large-data-directory,$fast-data-directory)"},{"content":"admin:forest-daily-backup(${1:\\$backup-dir as xs:string}, ${2:\\$backup-period as xs:positiveInteger}, ${3:\\$start-time as xs:time})","trigger":"admin:forest-daily-backup","description":"($backup-dir,$backup-period,$start-time)"},{"content":"admin:forest-delete(${1:\\$config as element(configuration)}, ${2:\\$forest-ids as xs:unsignedLong*}, ${3:\\$delete-data as xs:boolean})","trigger":"admin:forest-delete","description":"($config,$forest-ids,$delete-data)"},{"content":"admin:forest-delete-backup(${1:\\$config as element(configuration)}, ${2:\\$forest-id as xs:unsignedLong}, ${3:\\$backups as element(as:forest-backup)*})","trigger":"admin:forest-delete-backup","description":"($config,$forest-id,$backups)"},{"content":"admin:forest-delete-failover-host(${1:\\$config as element(configuration)}, ${2:\\$forest-id as xs:unsignedLong}, ${3:\\$hosts as xs:unsignedLong*})","trigger":"admin:forest-delete-failover-host","description":"($config,$forest-id,$hosts)"},{"content":"admin:forest-delete-foreign-master(${1:\\$config as element(configuration)}, ${2:\\$forest-id as xs:unsignedLong})","trigger":"admin:forest-delete-foreign-master","description":"($config,$forest-id)"},{"content":"admin:forest-delete-foreign-replicas(${1:\\$config as element(configuration)}, ${2:\\$forest-id as xs:unsignedLong}, ${3:\\$foreign-replicas as element(as:foreign-replica)*})","trigger":"admin:forest-delete-foreign-replicas","description":"($config,$forest-id,$foreign-replicas)"},{"content":"admin:forest-exists(${1:\\$config as element(configuration)}, ${2:\\$forest-name as xs:string})","trigger":"admin:forest-exists","description":"($config,$forest-name)"},{"content":"admin:forest-foreign-master(${1:\\$foreign-cluster-id as xs:unsignedLong}, ${2:\\$foreign-database-id as xs:unsignedLong}, ${3:\\$foreign-forest-id as xs:unsignedLong})","trigger":"admin:forest-foreign-master","description":"($foreign-cluster-id,$foreign-database-id,$foreign-forest-id)"},{"content":"admin:forest-foreign-master-get-cluster-id(${1:\\$foreign-master as element(as:foreign-master)})","trigger":"admin:forest-foreign-master-get-cluster-id","description":"($foreign-master)"},{"content":"admin:forest-foreign-master-get-database-id(${1:\\$foreign-master as element(as:foreign-master)})","trigger":"admin:forest-foreign-master-get-database-id","description":"($foreign-master)"},{"content":"admin:forest-foreign-master-get-forest-id(${1:\\$foreign-master as element(as:foreign-master)})","trigger":"admin:forest-foreign-master-get-forest-id","description":"($foreign-master)"},{"content":"admin:forest-foreign-replica(${1:\\$foreign-cluster-id as xs:unsignedLong}, ${2:\\$foreign-database-id as xs:unsignedLong}, ${3:\\$foreign-forest-id as xs:unsignedLong})","trigger":"admin:forest-foreign-replica","description":"($foreign-cluster-id,$foreign-database-id,$foreign-forest-id)"},{"content":"admin:forest-foreign-replica-get-cluster-id(${1:\\$foreign-replica as element(as:foreign-replica)})","trigger":"admin:forest-foreign-replica-get-cluster-id","description":"($foreign-replica)"},{"content":"admin:forest-foreign-replica-get-database-id(${1:\\$foreign-replica as element(as:foreign-replica)})","trigger":"admin:forest-foreign-replica-get-database-id","description":"($foreign-replica)"},{"content":"admin:forest-foreign-replica-get-forest-id(${1:\\$foreign-replica as element(as:foreign-replica)})","trigger":"admin:forest-foreign-replica-get-forest-id","description":"($foreign-replica)"},{"content":"admin:forest-get-availability(${1:\\$config as element(configuration)}, ${2:\\$forest-id as xs:unsignedLong})","trigger":"admin:forest-get-availability","description":"($config,$forest-id)"},{"content":"admin:forest-get-backups(${1:\\$config as element(configuration)}, ${2:\\$forest-id as xs:unsignedLong})","trigger":"admin:forest-get-backups","description":"($config,$forest-id)"},{"content":"admin:forest-get-data-directory(${1:\\$config as element(configuration)}, ${2:\\$forest-id as xs:unsignedLong})","trigger":"admin:forest-get-data-directory","description":"($config,$forest-id)"},{"content":"admin:forest-get-database(${1:\\$config as element(configuration)}, ${2:\\$forest-id as xs:unsignedLong})","trigger":"admin:forest-get-database","description":"($config,$forest-id)"},{"content":"admin:forest-get-enabled(${1:\\$config as element(configuration)}, ${2:\\$forest-id as xs:unsignedLong})","trigger":"admin:forest-get-enabled","description":"($config,$forest-id)"},{"content":"admin:forest-get-failover-enable(${1:\\$config as element(configuration)}, ${2:\\$forest-id as xs:unsignedLong})","trigger":"admin:forest-get-failover-enable","description":"($config,$forest-id)"},{"content":"admin:forest-get-failover-hosts(${1:\\$config as element(configuration)}, ${2:\\$forest-id as xs:unsignedLong})","trigger":"admin:forest-get-failover-hosts","description":"($config,$forest-id)"},{"content":"admin:forest-get-fast-data-directory(${1:\\$config as element(configuration)}, ${2:\\$forest-id as xs:unsignedLong})","trigger":"admin:forest-get-fast-data-directory","description":"($config,$forest-id)"},{"content":"admin:forest-get-foreign-master(${1:\\$config as element(configuration)}, ${2:\\$forest-id as xs:unsignedLong})","trigger":"admin:forest-get-foreign-master","description":"($config,$forest-id)"},{"content":"admin:forest-get-foreign-replicas(${1:\\$config as element(configuration)}, ${2:\\$forest-id as xs:unsignedLong})","trigger":"admin:forest-get-foreign-replicas","description":"($config,$forest-id)"},{"content":"admin:forest-get-host(${1:\\$config as element(configuration)}, ${2:\\$forest-id as xs:unsignedLong})","trigger":"admin:forest-get-host","description":"($config,$forest-id)"},{"content":"admin:forest-get-id(${1:\\$config as element(configuration)}, ${2:\\$forest-name as xs:string})","trigger":"admin:forest-get-id","description":"($config,$forest-name)"},{"content":"admin:forest-get-large-data-directory(${1:\\$config as element(configuration)}, ${2:\\$forest-id as xs:unsignedLong})","trigger":"admin:forest-get-large-data-directory","description":"($config,$forest-id)"},{"content":"admin:forest-get-name(${1:\\$config as element(configuration)}, ${2:\\$forest-id as xs:unsignedLong})","trigger":"admin:forest-get-name","description":"($config,$forest-id)"},{"content":"admin:forest-get-range-policy-lower-bound(${1:\\$config as element(configuration)}, ${2:\\$forest-id as xs:unsignedLong})","trigger":"admin:forest-get-range-policy-lower-bound","description":"($config,$forest-id)"},{"content":"admin:forest-get-range-policy-upper-bound(${1:\\$config as element(configuration)}, ${2:\\$forest-id as xs:unsignedLong})","trigger":"admin:forest-get-range-policy-upper-bound","description":"($config,$forest-id)"},{"content":"admin:forest-get-rebalancer-enable(${1:\\$config as element(configuration)}, ${2:\\$forest-id as xs:unsignedLong})","trigger":"admin:forest-get-rebalancer-enable","description":"($config,$forest-id)"},{"content":"admin:forest-get-replicas(${1:\\$config as element(configuration)}, ${2:\\$forest-id as xs:unsignedLong})","trigger":"admin:forest-get-replicas","description":"($config,$forest-id)"},{"content":"admin:forest-get-updates-allowed(${1:\\$config as element(configuration)}, ${2:\\$forest-id as xs:unsignedLong})","trigger":"admin:forest-get-updates-allowed","description":"($config,$forest-id)"},{"content":"admin:forest-hourly-backup(${1:\\$backup-dir as xs:string}, ${2:\\$backup-period as xs:positiveInteger}, ${3:\\$start-minute as xs:nonNegativeInteger})","trigger":"admin:forest-hourly-backup","description":"($backup-dir,$backup-period,$start-minute)"},{"content":"admin:forest-is-range-policy-range-set(${1:\\$config as element(configuration)}, ${2:\\$forest-id as xs:unsignedLong})","trigger":"admin:forest-is-range-policy-range-set","description":"($config,$forest-id)"},{"content":"admin:forest-minutely-backup(${1:\\$backup-dir as xs:string}, ${2:\\$backup-period as xs:positiveInteger})","trigger":"admin:forest-minutely-backup","description":"($backup-dir,$backup-period)"},{"content":"admin:forest-monthly-backup(${1:\\$backup-dir as xs:string}, ${2:\\$backup-period as xs:positiveInteger}, ${3:\\$backup-month-day as xs:unsignedInt}, ${4:\\$start-time as xs:time})","trigger":"admin:forest-monthly-backup","description":"($backup-dir,$backup-period,$backup-month-day,$start-time)"},{"content":"admin:forest-one-time-backup(${1:\\$backup-dir as xs:string}, ${2:\\$start as xs:dateTime})","trigger":"admin:forest-one-time-backup","description":"($backup-dir,$start)"},{"content":"admin:forest-remove-replica(${1:\\$config as element(configuration)}, ${2:\\$master-id as xs:unsignedLong}, ${3:\\$replica-id as xs:unsignedLong})","trigger":"admin:forest-remove-replica","description":"($config,$master-id,$replica-id)"},{"content":"admin:forest-rename(${1:\\$config as element(configuration)}, ${2:\\$forest-id as xs:unsignedLong}, ${3:\\$new-name as xs:string})","trigger":"admin:forest-rename","description":"($config,$forest-id,$new-name)"},{"content":"admin:forest-set-availability(${1:\\$config as element(configuration)}, ${2:\\$forest-id as xs:unsignedLong}, ${3:\\$value as xs:string})","trigger":"admin:forest-set-availability","description":"($config,$forest-id,$value)"},{"content":"admin:forest-set-enabled(${1:\\$config as element(configuration)}, ${2:\\$forest-id as xs:unsignedLong}, ${3:\\$value as xs:boolean})","trigger":"admin:forest-set-enabled","description":"($config,$forest-id,$value)"},{"content":"admin:forest-set-failover-enable(${1:\\$config as element(configuration)}, ${2:\\$forest-id as xs:unsignedLong}, ${3:\\$value as xs:boolean})","trigger":"admin:forest-set-failover-enable","description":"($config,$forest-id,$value)"},{"content":"admin:forest-set-foreign-master(${1:\\$config as element(configuration)}, ${2:\\$forest-id as xs:unsignedLong}, ${3:\\$foreign-master as element(as:foreign-master)})","trigger":"admin:forest-set-foreign-master","description":"($config,$forest-id,$foreign-master)"},{"content":"admin:forest-set-foreign-replicas(${1:\\$config as element(configuration)}, ${2:\\$forest-id as xs:unsignedLong}, ${3:\\$foreign-replicas as element(as:foreign-replica)*})","trigger":"admin:forest-set-foreign-replicas","description":"($config,$forest-id,$foreign-replicas)"},{"content":"admin:forest-set-host(${1:\\$config as element(configuration)}, ${2:\\$forest-id as xs:unsignedLong}, ${3:\\$value as xs:unsignedLong})","trigger":"admin:forest-set-host","description":"($config,$forest-id,$value)"},{"content":"admin:forest-set-range-policy-range(${1:\\$config as element(configuration)}, ${2:\\$forest-id as xs:unsignedLong}, ${3:\\$lower-bound as item()?}, ${4:\\$upper-bound as item()?})","trigger":"admin:forest-set-range-policy-range","description":"($config,$forest-id,$lower-bound,$upper-bound)"},{"content":"admin:forest-set-rebalancer-enable(${1:\\$config as element(configuration)}, ${2:\\$forest-id as xs:unsignedLong}, ${3:\\$value as xs:boolean})","trigger":"admin:forest-set-rebalancer-enable","description":"($config,$forest-id,$value)"},{"content":"admin:forest-set-updates-allowed(${1:\\$config as element(configuration)}, ${2:\\$forest-id as xs:unsignedLong}, ${3:\\$value as xs:string})","trigger":"admin:forest-set-updates-allowed","description":"($config,$forest-id,$value)"},{"content":"admin:forest-weekly-backup(${1:\\$backup-dir as xs:string}, ${2:\\$backup-period as xs:positiveInteger}, ${3:\\$days as xs:string+}, ${4:\\$start-time as xs:time})","trigger":"admin:forest-weekly-backup","description":"($backup-dir,$backup-period,$days,$start-time)"},{"content":"admin:get-appserver-ids(${1:\\$config as element(configuration)})","trigger":"admin:get-appserver-ids","description":"($config)"},{"content":"admin:get-configuration()","trigger":"admin:get-configuration"},{"content":"admin:get-database-ids(${1:\\$config as element(configuration)})","trigger":"admin:get-database-ids","description":"($config)"},{"content":"admin:get-forest-ids(${1:\\$config as element(configuration)})","trigger":"admin:get-forest-ids","description":"($config)"},{"content":"admin:get-group-ids(${1:\\$config as element(configuration)})","trigger":"admin:get-group-ids","description":"($config)"},{"content":"admin:get-host-ids(${1:\\$config as element(configuration)})","trigger":"admin:get-host-ids","description":"($config)"},{"content":"admin:group-add-module-location(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong}, ${3:\\$module-locations as element(gr:module-location)*})","trigger":"admin:group-add-module-location","description":"($config,$group-id,$module-locations)"},{"content":"admin:group-add-namespace(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong}, ${3:\\$namespaces as element(gr:namespace)*})","trigger":"admin:group-add-namespace","description":"($config,$group-id,$namespaces)"},{"content":"admin:group-add-scheduled-task(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong}, ${3:\\$scheduled-tasks as element(gr:scheduled-task)*})","trigger":"admin:group-add-scheduled-task","description":"($config,$group-id,$scheduled-tasks)"},{"content":"admin:group-add-schema(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong}, ${3:\\$schemas as element(gr:schema)*})","trigger":"admin:group-add-schema","description":"($config,$group-id,$schemas)"},{"content":"admin:group-add-trace-event(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong}, ${3:\\$events as element(gr:event)*})","trigger":"admin:group-add-trace-event","description":"($config,$group-id,$events)"},{"content":"admin:group-add-using-namespace(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong}, ${3:\\$namespaces as element(gr:using-namespace)*})","trigger":"admin:group-add-using-namespace","description":"($config,$group-id,$namespaces)"},{"content":"admin:group-copy(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong}, ${3:\\$group-name as xs:string})","trigger":"admin:group-copy","description":"($config,$group-id,$group-name)"},{"content":"admin:group-create(${1:\\$config as element(configuration)}, ${2:\\$group-name as xs:string})","trigger":"admin:group-create","description":"($config,$group-name)"},{"content":"admin:group-daily-scheduled-task(${1:\\$task-path as xs:string}, ${2:\\$task-root as xs:string}, ${3:\\$task-period as xs:positiveInteger}, ${4:\\$task-start-time as xs:time}, ${5:\\$task-database as xs:unsignedLong}, ${6:\\$task-modules as xs:unsignedLong}, ${7:\\$task-user as xs:unsignedLong}, ${8:\\$task-host as xs:unsignedLong?})","trigger":"admin:group-daily-scheduled-task","description":"($task-path,$task-root,$task-period,$task-start-time,$task-database,$task-modules,$task-user,$task-host)"},{"content":"admin:group-daily-scheduled-task(${1:\\$task-path as xs:string}, ${2:\\$task-root as xs:string}, ${3:\\$task-period as xs:positiveInteger}, ${4:\\$task-start-time as xs:time}, ${5:\\$task-database as xs:unsignedLong}, ${6:\\$task-modules as xs:unsignedLong}, ${7:\\$task-user as xs:unsignedLong}, ${8:\\$task-host as xs:unsignedLong?}, ${9:\\$task-priority as xs:string?})","trigger":"admin:group-daily-scheduled-task","description":"($task-path,$task-root,$task-period,$task-start-time,$task-database,$task-modules,$task-user,$task-host,$task-priority)"},{"content":"admin:group-delete(${1:\\$config as element(configuration)}, ${2:\\$group-ids as xs:unsignedLong*})","trigger":"admin:group-delete","description":"($config,$group-ids)"},{"content":"admin:group-delete-module-location(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong}, ${3:\\$module-locations as element(gr:module-location)*})","trigger":"admin:group-delete-module-location","description":"($config,$group-id,$module-locations)"},{"content":"admin:group-delete-namespace(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong}, ${3:\\$namespaces as element(gr:namespace)*})","trigger":"admin:group-delete-namespace","description":"($config,$group-id,$namespaces)"},{"content":"admin:group-delete-scheduled-task(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong}, ${3:\\$scheduled-tasks as element(gr:scheduled-task)*})","trigger":"admin:group-delete-scheduled-task","description":"($config,$group-id,$scheduled-tasks)"},{"content":"admin:group-delete-schema(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong}, ${3:\\$schemas as element(gr:schema)*})","trigger":"admin:group-delete-schema","description":"($config,$group-id,$schemas)"},{"content":"admin:group-delete-trace-event(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong}, ${3:\\$events as element(gr:event)*})","trigger":"admin:group-delete-trace-event","description":"($config,$group-id,$events)"},{"content":"admin:group-delete-using-namespace(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong}, ${3:\\$namespaces as element(gr:using-namespace)*})","trigger":"admin:group-delete-using-namespace","description":"($config,$group-id,$namespaces)"},{"content":"admin:group-disable-audit-event-type(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong}, ${3:\\$event-type as xs:string*})","trigger":"admin:group-disable-audit-event-type","description":"($config,$group-id,$event-type)"},{"content":"admin:group-enable-audit-event-type(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong}, ${3:\\$event-type as xs:string*})","trigger":"admin:group-enable-audit-event-type","description":"($config,$group-id,$event-type)"},{"content":"admin:group-exists(${1:\\$config as element(configuration)}, ${2:\\$group-name as xs:string})","trigger":"admin:group-exists","description":"($config,$group-name)"},{"content":"admin:group-get-appserver-ids(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong})","trigger":"admin:group-get-appserver-ids","description":"($config,$group-id)"},{"content":"admin:group-get-audit-enabled(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong})","trigger":"admin:group-get-audit-enabled","description":"($config,$group-id)"},{"content":"admin:group-get-audit-event-type-enabled(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong}, ${3:\\$event-type as xs:string})","trigger":"admin:group-get-audit-event-type-enabled","description":"($config,$group-id,$event-type)"},{"content":"admin:group-get-audit-excluded-roles(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong})","trigger":"admin:group-get-audit-excluded-roles","description":"($config,$group-id)"},{"content":"admin:group-get-audit-excluded-uris(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong})","trigger":"admin:group-get-audit-excluded-uris","description":"($config,$group-id)"},{"content":"admin:group-get-audit-excluded-users(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong})","trigger":"admin:group-get-audit-excluded-users","description":"($config,$group-id)"},{"content":"admin:group-get-audit-included-roles(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong})","trigger":"admin:group-get-audit-included-roles","description":"($config,$group-id)"},{"content":"admin:group-get-audit-included-uris(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong})","trigger":"admin:group-get-audit-included-uris","description":"($config,$group-id)"},{"content":"admin:group-get-audit-included-users(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong})","trigger":"admin:group-get-audit-included-users","description":"($config,$group-id)"},{"content":"admin:group-get-audit-outcome-restriction(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong})","trigger":"admin:group-get-audit-outcome-restriction","description":"($config,$group-id)"},{"content":"admin:group-get-background-io-limit(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong})","trigger":"admin:group-get-background-io-limit","description":"($config,$group-id)"},{"content":"admin:group-get-compressed-tree-cache-partitions(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong})","trigger":"admin:group-get-compressed-tree-cache-partitions","description":"($config,$group-id)"},{"content":"admin:group-get-compressed-tree-cache-size(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong})","trigger":"admin:group-get-compressed-tree-cache-size","description":"($config,$group-id)"},{"content":"admin:group-get-compressed-tree-read-size(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong})","trigger":"admin:group-get-compressed-tree-read-size","description":"($config,$group-id)"},{"content":"admin:group-get-expanded-tree-cache-partitions(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong})","trigger":"admin:group-get-expanded-tree-cache-partitions","description":"($config,$group-id)"},{"content":"admin:group-get-expanded-tree-cache-size(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong})","trigger":"admin:group-get-expanded-tree-cache-size","description":"($config,$group-id)"},{"content":"admin:group-get-failover-enable(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong})","trigger":"admin:group-get-failover-enable","description":"($config,$group-id)"},{"content":"admin:group-get-file-log-level(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong})","trigger":"admin:group-get-file-log-level","description":"($config,$group-id)"},{"content":"admin:group-get-host-ids(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong})","trigger":"admin:group-get-host-ids","description":"($config,$group-id)"},{"content":"admin:group-get-host-initial-timeout(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong})","trigger":"admin:group-get-host-initial-timeout","description":"($config,$group-id)"},{"content":"admin:group-get-host-timeout(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong})","trigger":"admin:group-get-host-timeout","description":"($config,$group-id)"},{"content":"admin:group-get-http-timeout(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong})","trigger":"admin:group-get-http-timeout","description":"($config,$group-id)"},{"content":"admin:group-get-http-user-agent(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong})","trigger":"admin:group-get-http-user-agent","description":"($config,$group-id)"},{"content":"admin:group-get-httpserver-ids(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong})","trigger":"admin:group-get-httpserver-ids","description":"($config,$group-id)"},{"content":"admin:group-get-id(${1:\\$config as element(configuration)}, ${2:\\$group-name as xs:string})","trigger":"admin:group-get-id","description":"($config,$group-name)"},{"content":"admin:group-get-keep-audit-files(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong})","trigger":"admin:group-get-keep-audit-files","description":"($config,$group-id)"},{"content":"admin:group-get-keep-log-files(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong})","trigger":"admin:group-get-keep-log-files","description":"($config,$group-id)"},{"content":"admin:group-get-list-cache-partitions(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong})","trigger":"admin:group-get-list-cache-partitions","description":"($config,$group-id)"},{"content":"admin:group-get-list-cache-size(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong})","trigger":"admin:group-get-list-cache-size","description":"($config,$group-id)"},{"content":"admin:group-get-metering-enabled(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong})","trigger":"admin:group-get-metering-enabled","description":"($config,$group-id)"},{"content":"admin:group-get-meters-database(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong})","trigger":"admin:group-get-meters-database","description":"($config,$group-id)"},{"content":"admin:group-get-module-cache-timeout(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong})","trigger":"admin:group-get-module-cache-timeout","description":"($config,$group-id)"},{"content":"admin:group-get-module-locations(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong})","trigger":"admin:group-get-module-locations","description":"($config,$group-id)"},{"content":"admin:group-get-name(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong})","trigger":"admin:group-get-name","description":"($config,$group-id)"},{"content":"admin:group-get-namespaces(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong})","trigger":"admin:group-get-namespaces","description":"($config,$group-id)"},{"content":"admin:group-get-odbcserver-ids(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong})","trigger":"admin:group-get-odbcserver-ids","description":"($config,$group-id)"},{"content":"admin:group-get-performance-metering-enabled(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong})","trigger":"admin:group-get-performance-metering-enabled","description":"($config,$group-id)"},{"content":"admin:group-get-performance-metering-period(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong})","trigger":"admin:group-get-performance-metering-period","description":"($config,$group-id)"},{"content":"admin:group-get-performance-metering-retain-daily(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong})","trigger":"admin:group-get-performance-metering-retain-daily","description":"($config,$group-id)"},{"content":"admin:group-get-performance-metering-retain-hourly(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong})","trigger":"admin:group-get-performance-metering-retain-hourly","description":"($config,$group-id)"},{"content":"admin:group-get-performance-metering-retain-raw(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong})","trigger":"admin:group-get-performance-metering-retain-raw","description":"($config,$group-id)"},{"content":"admin:group-get-retry-timeout(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong})","trigger":"admin:group-get-retry-timeout","description":"($config,$group-id)"},{"content":"admin:group-get-rotate-audit-files(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong})","trigger":"admin:group-get-rotate-audit-files","description":"($config,$group-id)"},{"content":"admin:group-get-rotate-log-files(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong})","trigger":"admin:group-get-rotate-log-files","description":"($config,$group-id)"},{"content":"admin:group-get-s3-domain(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong})","trigger":"admin:group-get-s3-domain","description":"($config,$group-id)"},{"content":"admin:group-get-s3-protocol(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong})","trigger":"admin:group-get-s3-protocol","description":"($config,$group-id)"},{"content":"admin:group-get-s3-server-side-encryption(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong})","trigger":"admin:group-get-s3-server-side-encryption","description":"($config,$group-id)"},{"content":"admin:group-get-scheduled-tasks(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong})","trigger":"admin:group-get-scheduled-tasks","description":"($config,$group-id)"},{"content":"admin:group-get-schemas(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong})","trigger":"admin:group-get-schemas","description":"($config,$group-id)"},{"content":"admin:group-get-security-database(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong})","trigger":"admin:group-get-security-database","description":"($config,$group-id)"},{"content":"admin:group-get-smtp-relay(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong})","trigger":"admin:group-get-smtp-relay","description":"($config,$group-id)"},{"content":"admin:group-get-smtp-timeout(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong})","trigger":"admin:group-get-smtp-timeout","description":"($config,$group-id)"},{"content":"admin:group-get-system-log-level(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong})","trigger":"admin:group-get-system-log-level","description":"($config,$group-id)"},{"content":"admin:group-get-taskserver-id(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong})","trigger":"admin:group-get-taskserver-id","description":"($config,$group-id)"},{"content":"admin:group-get-trace-events(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong})","trigger":"admin:group-get-trace-events","description":"($config,$group-id)"},{"content":"admin:group-get-trace-events-activated(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong})","trigger":"admin:group-get-trace-events-activated","description":"($config,$group-id)"},{"content":"admin:group-get-triple-cache-partitions(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong})","trigger":"admin:group-get-triple-cache-partitions","description":"($config,$group-id)"},{"content":"admin:group-get-triple-cache-size(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong})","trigger":"admin:group-get-triple-cache-size","description":"($config,$group-id)"},{"content":"admin:group-get-triple-cache-timeout(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong})","trigger":"admin:group-get-triple-cache-timeout","description":"($config,$group-id)"},{"content":"admin:group-get-triple-value-cache-partitions(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong})","trigger":"admin:group-get-triple-value-cache-partitions","description":"($config,$group-id)"},{"content":"admin:group-get-triple-value-cache-size(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong})","trigger":"admin:group-get-triple-value-cache-size","description":"($config,$group-id)"},{"content":"admin:group-get-triple-value-cache-timeout(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong})","trigger":"admin:group-get-triple-value-cache-timeout","description":"($config,$group-id)"},{"content":"admin:group-get-using-namespaces(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong})","trigger":"admin:group-get-using-namespaces","description":"($config,$group-id)"},{"content":"admin:group-get-webdavserver-ids(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong})","trigger":"admin:group-get-webdavserver-ids","description":"($config,$group-id)"},{"content":"admin:group-get-xdbcserver-ids(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong})","trigger":"admin:group-get-xdbcserver-ids","description":"($config,$group-id)"},{"content":"admin:group-get-xdqp-ssl-allow-sslv3(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong})","trigger":"admin:group-get-xdqp-ssl-allow-sslv3","description":"($config,$group-id)"},{"content":"admin:group-get-xdqp-ssl-allow-tls(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong})","trigger":"admin:group-get-xdqp-ssl-allow-tls","description":"($config,$group-id)"},{"content":"admin:group-get-xdqp-ssl-ciphers(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong})","trigger":"admin:group-get-xdqp-ssl-ciphers","description":"($config,$group-id)"},{"content":"admin:group-get-xdqp-ssl-enabled(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong})","trigger":"admin:group-get-xdqp-ssl-enabled","description":"($config,$group-id)"},{"content":"admin:group-get-xdqp-timeout(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong})","trigger":"admin:group-get-xdqp-timeout","description":"($config,$group-id)"},{"content":"admin:group-hourly-scheduled-task(${1:\\$task-path as xs:string}, ${2:\\$task-root as xs:string}, ${3:\\$task-period as xs:positiveInteger}, ${4:\\$task-minute as xs:nonNegativeInteger}, ${5:\\$task-database as xs:unsignedLong}, ${6:\\$task-modules as xs:unsignedLong}, ${7:\\$task-user as xs:unsignedLong}, ${8:\\$task-host as xs:unsignedLong?})","trigger":"admin:group-hourly-scheduled-task","description":"($task-path,$task-root,$task-period,$task-minute,$task-database,$task-modules,$task-user,$task-host)"},{"content":"admin:group-hourly-scheduled-task(${1:\\$task-path as xs:string}, ${2:\\$task-root as xs:string}, ${3:\\$task-period as xs:positiveInteger}, ${4:\\$task-minute as xs:nonNegativeInteger}, ${5:\\$task-database as xs:unsignedLong}, ${6:\\$task-modules as xs:unsignedLong}, ${7:\\$task-user as xs:unsignedLong}, ${8:\\$task-host as xs:unsignedLong?}, ${9:\\$task-priority as xs:string?})","trigger":"admin:group-hourly-scheduled-task","description":"($task-path,$task-root,$task-period,$task-minute,$task-database,$task-modules,$task-user,$task-host,$task-priority)"},{"content":"admin:group-minutely-scheduled-task(${1:\\$task-path as xs:string}, ${2:\\$task-root as xs:string}, ${3:\\$task-period as xs:positiveInteger}, ${4:\\$task-database as xs:unsignedLong}, ${5:\\$task-modules as xs:unsignedLong}, ${6:\\$task-user as xs:unsignedLong}, ${7:\\$task-host as xs:unsignedLong?})","trigger":"admin:group-minutely-scheduled-task","description":"($task-path,$task-root,$task-period,$task-database,$task-modules,$task-user,$task-host)"},{"content":"admin:group-minutely-scheduled-task(${1:\\$task-path as xs:string}, ${2:\\$task-root as xs:string}, ${3:\\$task-period as xs:positiveInteger}, ${4:\\$task-database as xs:unsignedLong}, ${5:\\$task-modules as xs:unsignedLong}, ${6:\\$task-user as xs:unsignedLong}, ${7:\\$task-host as xs:unsignedLong?}, ${8:\\$task-priority as xs:string?})","trigger":"admin:group-minutely-scheduled-task","description":"($task-path,$task-root,$task-period,$task-database,$task-modules,$task-user,$task-host,$task-priority)"},{"content":"admin:group-module-location(${1:\\$namespace-uri as xs:string}, ${2:\\$location as xs:string})","trigger":"admin:group-module-location","description":"($namespace-uri,$location)"},{"content":"admin:group-monthly-scheduled-task(${1:\\$task-path as xs:string}, ${2:\\$task-root as xs:string}, ${3:\\$task-period as xs:positiveInteger}, ${4:\\$task-month-day as xs:unsignedLong}, ${5:\\$task-start-time as xs:time}, ${6:\\$task-database as xs:unsignedLong}, ${7:\\$task-modules as xs:unsignedLong}, ${8:\\$task-user as xs:unsignedLong}, ${9:\\$task-host as xs:unsignedLong?})","trigger":"admin:group-monthly-scheduled-task","description":"($task-path,$task-root,$task-period,$task-month-day,$task-start-time,$task-database,$task-modules,$task-user,$task-host)"},{"content":"admin:group-monthly-scheduled-task(${1:\\$task-path as xs:string}, ${2:\\$task-root as xs:string}, ${3:\\$task-period as xs:positiveInteger}, ${4:\\$task-month-day as xs:unsignedLong}, ${5:\\$task-start-time as xs:time}, ${6:\\$task-database as xs:unsignedLong}, ${7:\\$task-modules as xs:unsignedLong}, ${8:\\$task-user as xs:unsignedLong}, ${9:\\$task-host as xs:unsignedLong?}, ${10:\\$task-priority as xs:string?})","trigger":"admin:group-monthly-scheduled-task","description":"($task-path,$task-root,$task-period,$task-month-day,$task-start-time,$task-database,$task-modules,$task-user,$task-host,$task-priority)"},{"content":"admin:group-namespace(${1:\\$prefix as xs:string}, ${2:\\$namespace-uri as xs:string})","trigger":"admin:group-namespace","description":"($prefix,$namespace-uri)"},{"content":"admin:group-one-time-scheduled-task(${1:\\$task-path as xs:string}, ${2:\\$task-root as xs:string}, ${3:\\$task-start as xs:dateTime}, ${4:\\$task-database as xs:unsignedLong}, ${5:\\$task-modules as xs:unsignedLong}, ${6:\\$task-user as xs:unsignedLong}, ${7:\\$task-host as xs:unsignedLong?})","trigger":"admin:group-one-time-scheduled-task","description":"($task-path,$task-root,$task-start,$task-database,$task-modules,$task-user,$task-host)"},{"content":"admin:group-one-time-scheduled-task(${1:\\$task-path as xs:string}, ${2:\\$task-root as xs:string}, ${3:\\$task-start as xs:dateTime}, ${4:\\$task-database as xs:unsignedLong}, ${5:\\$task-modules as xs:unsignedLong}, ${6:\\$task-user as xs:unsignedLong}, ${7:\\$task-host as xs:unsignedLong?}, ${8:\\$task-priority as xs:string?})","trigger":"admin:group-one-time-scheduled-task","description":"($task-path,$task-root,$task-start,$task-database,$task-modules,$task-user,$task-host,$task-priority)"},{"content":"admin:group-schema(${1:\\$namespace-uri as xs:string}, ${2:\\$schema-location as xs:string})","trigger":"admin:group-schema","description":"($namespace-uri,$schema-location)"},{"content":"admin:group-set-audit-enabled(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong}, ${3:\\$value as xs:boolean})","trigger":"admin:group-set-audit-enabled","description":"($config,$group-id,$value)"},{"content":"admin:group-set-audit-outcome-restriction(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong}, ${3:\\$outcome as xs:string*})","trigger":"admin:group-set-audit-outcome-restriction","description":"($config,$group-id,$outcome)"},{"content":"admin:group-set-audit-role-restriction(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong}, ${3:\\$restriction-type as xs:string}, ${4:\\$roles as xs:string*})","trigger":"admin:group-set-audit-role-restriction","description":"($config,$group-id,$restriction-type,$roles)"},{"content":"admin:group-set-audit-uri-restriction(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong}, ${3:\\$restriction-type as xs:string}, ${4:\\$uris as xs:string*})","trigger":"admin:group-set-audit-uri-restriction","description":"($config,$group-id,$restriction-type,$uris)"},{"content":"admin:group-set-audit-user-restriction(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong}, ${3:\\$restriction-type as xs:string}, ${4:\\$users as xs:string*})","trigger":"admin:group-set-audit-user-restriction","description":"($config,$group-id,$restriction-type,$users)"},{"content":"admin:group-set-background-io-limit(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong}, ${3:\\$max-megabytes-per-second as xs:unsignedInt})","trigger":"admin:group-set-background-io-limit","description":"($config,$group-id,$max-megabytes-per-second)"},{"content":"admin:group-set-compressed-tree-cache-partitions(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong}, ${3:\\$value as xs:unsignedInt})","trigger":"admin:group-set-compressed-tree-cache-partitions","description":"($config,$group-id,$value)"},{"content":"admin:group-set-compressed-tree-cache-size(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong}, ${3:\\$value as xs:unsignedInt})","trigger":"admin:group-set-compressed-tree-cache-size","description":"($config,$group-id,$value)"},{"content":"admin:group-set-compressed-tree-read-size(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong}, ${3:\\$value as xs:unsignedInt})","trigger":"admin:group-set-compressed-tree-read-size","description":"($config,$group-id,$value)"},{"content":"admin:group-set-expanded-tree-cache-partitions(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong}, ${3:\\$value as xs:unsignedInt})","trigger":"admin:group-set-expanded-tree-cache-partitions","description":"($config,$group-id,$value)"},{"content":"admin:group-set-expanded-tree-cache-size(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong}, ${3:\\$value as xs:unsignedInt})","trigger":"admin:group-set-expanded-tree-cache-size","description":"($config,$group-id,$value)"},{"content":"admin:group-set-failover-enable(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong}, ${3:\\$value as xs:boolean})","trigger":"admin:group-set-failover-enable","description":"($config,$group-id,$value)"},{"content":"admin:group-set-file-log-level(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong}, ${3:\\$value as xs:string})","trigger":"admin:group-set-file-log-level","description":"($config,$group-id,$value)"},{"content":"admin:group-set-host-initial-timeout(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong}, ${3:\\$value as xs:unsignedInt})","trigger":"admin:group-set-host-initial-timeout","description":"($config,$group-id,$value)"},{"content":"admin:group-set-host-timeout(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong}, ${3:\\$value as xs:unsignedInt})","trigger":"admin:group-set-host-timeout","description":"($config,$group-id,$value)"},{"content":"admin:group-set-http-timeout(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong}, ${3:\\$value as xs:unsignedInt})","trigger":"admin:group-set-http-timeout","description":"($config,$group-id,$value)"},{"content":"admin:group-set-http-user-agent(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong}, ${3:\\$value as xs:string})","trigger":"admin:group-set-http-user-agent","description":"($config,$group-id,$value)"},{"content":"admin:group-set-keep-audit-files(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong}, ${3:\\$value as xs:unsignedInt})","trigger":"admin:group-set-keep-audit-files","description":"($config,$group-id,$value)"},{"content":"admin:group-set-keep-log-files(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong}, ${3:\\$value as xs:unsignedInt})","trigger":"admin:group-set-keep-log-files","description":"($config,$group-id,$value)"},{"content":"admin:group-set-list-cache-partitions(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong}, ${3:\\$value as xs:unsignedInt})","trigger":"admin:group-set-list-cache-partitions","description":"($config,$group-id,$value)"},{"content":"admin:group-set-list-cache-size(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong}, ${3:\\$value as xs:unsignedInt})","trigger":"admin:group-set-list-cache-size","description":"($config,$group-id,$value)"},{"content":"admin:group-set-metering-enabled(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong}, ${3:\\$value as xs:boolean})","trigger":"admin:group-set-metering-enabled","description":"($config,$group-id,$value)"},{"content":"admin:group-set-meters-database(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong}, ${3:\\$value as xs:unsignedLong})","trigger":"admin:group-set-meters-database","description":"($config,$group-id,$value)"},{"content":"admin:group-set-module-cache-timeout(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong}, ${3:\\$value as xs:unsignedInt})","trigger":"admin:group-set-module-cache-timeout","description":"($config,$group-id,$value)"},{"content":"admin:group-set-name(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong}, ${3:\\$value as xs:string})","trigger":"admin:group-set-name","description":"($config,$group-id,$value)"},{"content":"admin:group-set-performance-metering-enabled(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong}, ${3:\\$value as xs:boolean})","trigger":"admin:group-set-performance-metering-enabled","description":"($config,$group-id,$value)"},{"content":"admin:group-set-performance-metering-period(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong}, ${3:\\$value as xs:unsignedInt})","trigger":"admin:group-set-performance-metering-period","description":"($config,$group-id,$value)"},{"content":"admin:group-set-performance-metering-retain-daily(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong}, ${3:\\$value as xs:unsignedInt})","trigger":"admin:group-set-performance-metering-retain-daily","description":"($config,$group-id,$value)"},{"content":"admin:group-set-performance-metering-retain-hourly(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong}, ${3:\\$value as xs:unsignedInt})","trigger":"admin:group-set-performance-metering-retain-hourly","description":"($config,$group-id,$value)"},{"content":"admin:group-set-performance-metering-retain-raw(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong}, ${3:\\$value as xs:unsignedInt})","trigger":"admin:group-set-performance-metering-retain-raw","description":"($config,$group-id,$value)"},{"content":"admin:group-set-retry-timeout(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong}, ${3:\\$value as xs:unsignedInt})","trigger":"admin:group-set-retry-timeout","description":"($config,$group-id,$value)"},{"content":"admin:group-set-rotate-audit-files(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong}, ${3:\\$value as xs:string})","trigger":"admin:group-set-rotate-audit-files","description":"($config,$group-id,$value)"},{"content":"admin:group-set-rotate-log-files(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong}, ${3:\\$value as xs:string})","trigger":"admin:group-set-rotate-log-files","description":"($config,$group-id,$value)"},{"content":"admin:group-set-s3-domain(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong}, ${3:\\$domain as xs:string})","trigger":"admin:group-set-s3-domain","description":"($config,$group-id,$domain)"},{"content":"admin:group-set-s3-protocol(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong}, ${3:\\$protocol as xs:string})","trigger":"admin:group-set-s3-protocol","description":"($config,$group-id,$protocol)"},{"content":"admin:group-set-s3-server-side-encryption(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong}, ${3:\\$protocol as xs:string})","trigger":"admin:group-set-s3-server-side-encryption","description":"($config,$group-id,$protocol)"},{"content":"admin:group-set-security-database(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong}, ${3:\\$value as xs:unsignedLong})","trigger":"admin:group-set-security-database","description":"($config,$group-id,$value)"},{"content":"admin:group-set-smtp-relay(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong}, ${3:\\$value as xs:string})","trigger":"admin:group-set-smtp-relay","description":"($config,$group-id,$value)"},{"content":"admin:group-set-smtp-timeout(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong}, ${3:\\$value as xs:unsignedInt})","trigger":"admin:group-set-smtp-timeout","description":"($config,$group-id,$value)"},{"content":"admin:group-set-system-log-level(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong}, ${3:\\$value as xs:string})","trigger":"admin:group-set-system-log-level","description":"($config,$group-id,$value)"},{"content":"admin:group-set-trace-events-activated(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong}, ${3:\\$value as xs:boolean})","trigger":"admin:group-set-trace-events-activated","description":"($config,$group-id,$value)"},{"content":"admin:group-set-triple-cache-partitions(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong}, ${3:\\$value as xs:unsignedInt})","trigger":"admin:group-set-triple-cache-partitions","description":"($config,$group-id,$value)"},{"content":"admin:group-set-triple-cache-size(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong}, ${3:\\$value as xs:unsignedInt})","trigger":"admin:group-set-triple-cache-size","description":"($config,$group-id,$value)"},{"content":"admin:group-set-triple-cache-timeout(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong}, ${3:\\$value as xs:unsignedInt})","trigger":"admin:group-set-triple-cache-timeout","description":"($config,$group-id,$value)"},{"content":"admin:group-set-triple-value-cache-partitions(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong}, ${3:\\$value as xs:unsignedInt})","trigger":"admin:group-set-triple-value-cache-partitions","description":"($config,$group-id,$value)"},{"content":"admin:group-set-triple-value-cache-size(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong}, ${3:\\$value as xs:unsignedInt})","trigger":"admin:group-set-triple-value-cache-size","description":"($config,$group-id,$value)"},{"content":"admin:group-set-triple-value-cache-timeout(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong}, ${3:\\$value as xs:unsignedInt})","trigger":"admin:group-set-triple-value-cache-timeout","description":"($config,$group-id,$value)"},{"content":"admin:group-set-xdqp-ssl-allow-sslv3(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong}, ${3:\\$value as xs:boolean})","trigger":"admin:group-set-xdqp-ssl-allow-sslv3","description":"($config,$group-id,$value)"},{"content":"admin:group-set-xdqp-ssl-allow-tls(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong}, ${3:\\$value as xs:boolean})","trigger":"admin:group-set-xdqp-ssl-allow-tls","description":"($config,$group-id,$value)"},{"content":"admin:group-set-xdqp-ssl-ciphers(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong}, ${3:\\$value as xs:string})","trigger":"admin:group-set-xdqp-ssl-ciphers","description":"($config,$group-id,$value)"},{"content":"admin:group-set-xdqp-ssl-enabled(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong}, ${3:\\$value as xs:boolean})","trigger":"admin:group-set-xdqp-ssl-enabled","description":"($config,$group-id,$value)"},{"content":"admin:group-set-xdqp-timeout(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong}, ${3:\\$value as xs:unsignedInt})","trigger":"admin:group-set-xdqp-timeout","description":"($config,$group-id,$value)"},{"content":"admin:group-trace-event(${1:\\$event-id as xs:string})","trigger":"admin:group-trace-event","description":"($event-id)"},{"content":"admin:group-using-namespace(${1:\\$namespace-uri as xs:string})","trigger":"admin:group-using-namespace","description":"($namespace-uri)"},{"content":"admin:group-weekly-scheduled-task(${1:\\$task-path as xs:string}, ${2:\\$task-root as xs:string}, ${3:\\$task-period as xs:positiveInteger}, ${4:\\$task-days as xs:string+}, ${5:\\$task-start-time as xs:time}, ${6:\\$task-database as xs:unsignedLong}, ${7:\\$task-modules as xs:unsignedLong}, ${8:\\$task-user as xs:unsignedLong}, ${9:\\$task-host as xs:unsignedLong?})","trigger":"admin:group-weekly-scheduled-task","description":"($task-path,$task-root,$task-period,$task-days,$task-start-time,$task-database,$task-modules,$task-user,$task-host)"},{"content":"admin:group-weekly-scheduled-task(${1:\\$task-path as xs:string}, ${2:\\$task-root as xs:string}, ${3:\\$task-period as xs:positiveInteger}, ${4:\\$task-days as xs:string+}, ${5:\\$task-start-time as xs:time}, ${6:\\$task-database as xs:unsignedLong}, ${7:\\$task-modules as xs:unsignedLong}, ${8:\\$task-user as xs:unsignedLong}, ${9:\\$task-host as xs:unsignedLong?}, ${10:\\$task-priority as xs:string?})","trigger":"admin:group-weekly-scheduled-task","description":"($task-path,$task-root,$task-period,$task-days,$task-start-time,$task-database,$task-modules,$task-user,$task-host,$task-priority)"},{"content":"admin:host-exists(${1:\\$config as element(configuration)}, ${2:\\$host-name as xs:string})","trigger":"admin:host-exists","description":"($config,$host-name)"},{"content":"admin:host-get-foreign-port(${1:\\$config as element(configuration)}, ${2:\\$host-id as xs:unsignedLong})","trigger":"admin:host-get-foreign-port","description":"($config,$host-id)"},{"content":"admin:host-get-group(${1:\\$config as element(configuration)}, ${2:\\$host-id as xs:unsignedLong})","trigger":"admin:host-get-group","description":"($config,$host-id)"},{"content":"admin:host-get-id(${1:\\$config as element(configuration)}, ${2:\\$host-name as xs:string})","trigger":"admin:host-get-id","description":"($config,$host-name)"},{"content":"admin:host-get-name(${1:\\$config as element(configuration)}, ${2:\\$host-id as xs:unsignedLong})","trigger":"admin:host-get-name","description":"($config,$host-id)"},{"content":"admin:host-get-port(${1:\\$config as element(configuration)}, ${2:\\$host-id as xs:unsignedLong})","trigger":"admin:host-get-port","description":"($config,$host-id)"},{"content":"admin:host-get-zone(${1:\\$config as element(configuration)}, ${2:\\$host-id as xs:unsignedLong})","trigger":"admin:host-get-zone","description":"($config,$host-id)"},{"content":"admin:host-set-foreign-port(${1:\\$config as element(configuration)}, ${2:\\$host-id as xs:unsignedLong}, ${3:\\$value as xs:unsignedInt})","trigger":"admin:host-set-foreign-port","description":"($config,$host-id,$value)"},{"content":"admin:host-set-group(${1:\\$config as element(configuration)}, ${2:\\$host-id as xs:unsignedLong}, ${3:\\$value as xs:unsignedLong})","trigger":"admin:host-set-group","description":"($config,$host-id,$value)"},{"content":"admin:host-set-name(${1:\\$config as element(configuration)}, ${2:\\$host-id as xs:unsignedLong}, ${3:\\$value as xs:string})","trigger":"admin:host-set-name","description":"($config,$host-id,$value)"},{"content":"admin:host-set-port(${1:\\$config as element(configuration)}, ${2:\\$host-id as xs:unsignedLong}, ${3:\\$value as xs:unsignedInt})","trigger":"admin:host-set-port","description":"($config,$host-id,$value)"},{"content":"admin:host-set-zone(${1:\\$config as element(configuration)}, ${2:\\$host-id as xs:unsignedLong}, ${3:\\$value as xs:string})","trigger":"admin:host-set-zone","description":"($config,$host-id,$value)"},{"content":"admin:http-server-create(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong}, ${3:\\$appserver-name as xs:string}, ${4:\\$root as xs:string}, ${5:\\$port as xs:unsignedLong}, ${6:\\$modules-id as item()}, ${7:\\$database-id as xs:unsignedLong})","trigger":"admin:http-server-create","description":"($config,$group-id,$appserver-name,$root,$port,$modules-id,$database-id)"},{"content":"admin:legacy-assignment-policy()","trigger":"admin:legacy-assignment-policy"},{"content":"admin:mimetype(${1:\\$name as xs:string}, ${2:\\$extensions as xs:string}, ${3:\\$format as xs:string})","trigger":"admin:mimetype","description":"($name,$extensions,$format)"},{"content":"admin:mimetypes-add(${1:\\$config as element(configuration)}, ${2:\\$mimetypes as element(mt:mimetype)*})","trigger":"admin:mimetypes-add","description":"($config,$mimetypes)"},{"content":"admin:mimetypes-delete(${1:\\$config as element(configuration)}, ${2:\\$mimetypes as element(mt:mimetype)*})","trigger":"admin:mimetypes-delete","description":"($config,$mimetypes)"},{"content":"admin:mimetypes-get(${1:\\$config as element(configuration)})","trigger":"admin:mimetypes-get","description":"($config)"},{"content":"admin:odbc-server-create(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong}, ${3:\\$appserver-name as xs:string}, ${4:\\$root as xs:string}, ${5:\\$port as xs:unsignedLong}, ${6:\\$modules-id as item()}, ${7:\\$database-id as xs:unsignedLong})","trigger":"admin:odbc-server-create","description":"($config,$group-id,$appserver-name,$root,$port,$modules-id,$database-id)"},{"content":"admin:range-assignment-policy(${1:\\$partition-key as cts:reference}, ${2:\\$lower-bound-included as xs:boolean})","trigger":"admin:range-assignment-policy","description":"($partition-key,$lower-bound-included)"},{"content":"admin:restart-hosts(${1:\\$hosts as xs:unsignedLong*})","trigger":"admin:restart-hosts","description":"($hosts)"},{"content":"admin:save-configuration(${1:\\$config as element(configuration)})","trigger":"admin:save-configuration","description":"($config)"},{"content":"admin:save-configuration-without-restart(${1:\\$config as element(configuration)})","trigger":"admin:save-configuration-without-restart","description":"($config)"},{"content":"admin:statistical-assignment-policy()","trigger":"admin:statistical-assignment-policy"},{"content":"admin:taskserver-get-debug-allow(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong})","trigger":"admin:taskserver-get-debug-allow","description":"($config,$group-id)"},{"content":"admin:taskserver-get-debug-threads(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong})","trigger":"admin:taskserver-get-debug-threads","description":"($config,$group-id)"},{"content":"admin:taskserver-get-default-inference-size(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong})","trigger":"admin:taskserver-get-default-inference-size","description":"($config,$group-id)"},{"content":"admin:taskserver-get-default-time-limit(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong})","trigger":"admin:taskserver-get-default-time-limit","description":"($config,$group-id)"},{"content":"admin:taskserver-get-log-errors(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong})","trigger":"admin:taskserver-get-log-errors","description":"($config,$group-id)"},{"content":"admin:taskserver-get-max-inference-size(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong})","trigger":"admin:taskserver-get-max-inference-size","description":"($config,$group-id)"},{"content":"admin:taskserver-get-max-time-limit(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong})","trigger":"admin:taskserver-get-max-time-limit","description":"($config,$group-id)"},{"content":"admin:taskserver-get-name(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong})","trigger":"admin:taskserver-get-name","description":"($config,$group-id)"},{"content":"admin:taskserver-get-post-commit-trigger-depth(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong})","trigger":"admin:taskserver-get-post-commit-trigger-depth","description":"($config,$group-id)"},{"content":"admin:taskserver-get-pre-commit-trigger-depth(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong})","trigger":"admin:taskserver-get-pre-commit-trigger-depth","description":"($config,$group-id)"},{"content":"admin:taskserver-get-pre-commit-trigger-limit(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong})","trigger":"admin:taskserver-get-pre-commit-trigger-limit","description":"($config,$group-id)"},{"content":"admin:taskserver-get-profile-allow(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong})","trigger":"admin:taskserver-get-profile-allow","description":"($config,$group-id)"},{"content":"admin:taskserver-get-queue-size(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong})","trigger":"admin:taskserver-get-queue-size","description":"($config,$group-id)"},{"content":"admin:taskserver-get-threads(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong})","trigger":"admin:taskserver-get-threads","description":"($config,$group-id)"},{"content":"admin:taskserver-set-debug-allow(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong}, ${3:\\$value as xs:boolean})","trigger":"admin:taskserver-set-debug-allow","description":"($config,$group-id,$value)"},{"content":"admin:taskserver-set-debug-threads(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong}, ${3:\\$value as xs:unsignedInt})","trigger":"admin:taskserver-set-debug-threads","description":"($config,$group-id,$value)"},{"content":"admin:taskserver-set-default-inference-size(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong}, ${3:\\$value as xs:unsignedInt})","trigger":"admin:taskserver-set-default-inference-size","description":"($config,$group-id,$value)"},{"content":"admin:taskserver-set-default-time-limit(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong}, ${3:\\$value as xs:unsignedInt})","trigger":"admin:taskserver-set-default-time-limit","description":"($config,$group-id,$value)"},{"content":"admin:taskserver-set-log-errors(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong}, ${3:\\$value as xs:boolean})","trigger":"admin:taskserver-set-log-errors","description":"($config,$group-id,$value)"},{"content":"admin:taskserver-set-max-inference-size(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong}, ${3:\\$value as xs:unsignedInt})","trigger":"admin:taskserver-set-max-inference-size","description":"($config,$group-id,$value)"},{"content":"admin:taskserver-set-max-time-limit(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong}, ${3:\\$value as xs:unsignedInt})","trigger":"admin:taskserver-set-max-time-limit","description":"($config,$group-id,$value)"},{"content":"admin:taskserver-set-post-commit-trigger-depth(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong}, ${3:\\$value as xs:unsignedInt})","trigger":"admin:taskserver-set-post-commit-trigger-depth","description":"($config,$group-id,$value)"},{"content":"admin:taskserver-set-pre-commit-trigger-depth(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong}, ${3:\\$value as xs:unsignedInt})","trigger":"admin:taskserver-set-pre-commit-trigger-depth","description":"($config,$group-id,$value)"},{"content":"admin:taskserver-set-pre-commit-trigger-limit(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong}, ${3:\\$value as xs:unsignedInt})","trigger":"admin:taskserver-set-pre-commit-trigger-limit","description":"($config,$group-id,$value)"},{"content":"admin:taskserver-set-profile-allow(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong}, ${3:\\$value as xs:boolean})","trigger":"admin:taskserver-set-profile-allow","description":"($config,$group-id,$value)"},{"content":"admin:taskserver-set-queue-size(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong}, ${3:\\$value as xs:unsignedInt})","trigger":"admin:taskserver-set-queue-size","description":"($config,$group-id,$value)"},{"content":"admin:taskserver-set-threads(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong}, ${3:\\$value as xs:unsignedInt})","trigger":"admin:taskserver-set-threads","description":"($config,$group-id,$value)"},{"content":"admin:webdav-server-create(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong}, ${3:\\$appserver-name as xs:string}, ${4:\\$root as xs:string}, ${5:\\$port as xs:unsignedLong}, ${6:\\$database-id as xs:unsignedLong})","trigger":"admin:webdav-server-create","description":"($config,$group-id,$appserver-name,$root,$port,$database-id)"},{"content":"admin:xdbc-server-create(${1:\\$config as element(configuration)}, ${2:\\$group-id as xs:unsignedLong}, ${3:\\$appserver-name as xs:string}, ${4:\\$root as xs:string}, ${5:\\$port as xs:unsignedLong}, ${6:\\$modules-id as item()}, ${7:\\$database-id as xs:unsignedLong})","trigger":"admin:xdbc-server-create","description":"($config,$group-id,$appserver-name,$root,$port,$modules-id,$database-id)"},{"content":"alert:action-get-description(${1:\\$action as element(alert:action)})","trigger":"alert:action-get-description","description":"($action)"},{"content":"alert:action-get-module(${1:\\$action as element(alert:action)})","trigger":"alert:action-get-module","description":"($action)"},{"content":"alert:action-get-module-db(${1:\\$action as element(alert:action)})","trigger":"alert:action-get-module-db","description":"($action)"},{"content":"alert:action-get-module-root(${1:\\$action as element(alert:action)})","trigger":"alert:action-get-module-root","description":"($action)"},{"content":"alert:action-get-name(${1:\\$action as element(alert:action)})","trigger":"alert:action-get-name","description":"($action)"},{"content":"alert:action-get-options(${1:\\$action as element(alert:action)})","trigger":"alert:action-get-options","description":"($action)"},{"content":"alert:action-insert(${1:\\$collection-uri as xs:string}, ${2:\\$action as element(alert:action)})","trigger":"alert:action-insert","description":"($collection-uri,$action)"},{"content":"alert:action-remove(${1:\\$collection-uri as xs:string}, ${2:\\$name as xs:string})","trigger":"alert:action-remove","description":"($collection-uri,$name)"},{"content":"alert:action-set-description(${1:\\$action as element(alert:action)}, ${2:\\$description as xs:string})","trigger":"alert:action-set-description","description":"($action,$description)"},{"content":"alert:action-set-module(${1:\\$action as element(alert:action)}, ${2:\\$module as xs:string})","trigger":"alert:action-set-module","description":"($action,$module)"},{"content":"alert:action-set-module-db(${1:\\$action as element(alert:action)}, ${2:\\$module-db as xs:unsignedLong})","trigger":"alert:action-set-module-db","description":"($action,$module-db)"},{"content":"alert:action-set-module-root(${1:\\$action as element(alert:action)}, ${2:\\$module-root as xs:string})","trigger":"alert:action-set-module-root","description":"($action,$module-root)"},{"content":"alert:action-set-name(${1:\\$action as element(alert:action)}, ${2:\\$name as xs:string})","trigger":"alert:action-set-name","description":"($action,$name)"},{"content":"alert:action-set-options(${1:\\$action as element(alert:action)}, ${2:\\$options as element(alert:options)})","trigger":"alert:action-set-options","description":"($action,$options)"},{"content":"alert:config-delete(${1:\\$uri as xs:string})","trigger":"alert:config-delete","description":"($uri)"},{"content":"alert:config-get(${1:\\$uri as xs:string})","trigger":"alert:config-get","description":"($uri)"},{"content":"alert:config-get-cpf-domain-names(${1:\\$config as element(alert:config)})","trigger":"alert:config-get-cpf-domain-names","description":"($config)"},{"content":"alert:config-get-description(${1:\\$config as element(alert:config)})","trigger":"alert:config-get-description","description":"($config)"},{"content":"alert:config-get-id(${1:\\$config as element(alert:config)})","trigger":"alert:config-get-id","description":"($config)"},{"content":"alert:config-get-name(${1:\\$config as element(alert:config)})","trigger":"alert:config-get-name","description":"($config)"},{"content":"alert:config-get-options(${1:\\$config as element(alert:config)})","trigger":"alert:config-get-options","description":"($config)"},{"content":"alert:config-get-trigger-ids(${1:\\$config as element(alert:config)})","trigger":"alert:config-get-trigger-ids","description":"($config)"},{"content":"alert:config-get-uri(${1:\\$config as element(alert:config)})","trigger":"alert:config-get-uri","description":"($config)"},{"content":"alert:config-insert(${1:\\$config as element(alert:config)})","trigger":"alert:config-insert","description":"($config)"},{"content":"alert:config-set-cpf-domain-names(${1:\\$config as element(alert:config)}, ${2:\\$names as xs:string*})","trigger":"alert:config-set-cpf-domain-names","description":"($config,$names)"},{"content":"alert:config-set-description(${1:\\$config as element(alert:config)}, ${2:\\$description as xs:string})","trigger":"alert:config-set-description","description":"($config,$description)"},{"content":"alert:config-set-name(${1:\\$config as element(alert:config)}, ${2:\\$name as xs:string})","trigger":"alert:config-set-name","description":"($config,$name)"},{"content":"alert:config-set-options(${1:\\$config as element(alert:config)}, ${2:\\$options as element(alert:options)})","trigger":"alert:config-set-options","description":"($config,$options)"},{"content":"alert:config-set-trigger-ids(${1:\\$config as element(alert:config)}, ${2:\\$ids as xs:unsignedLong*})","trigger":"alert:config-set-trigger-ids","description":"($config,$ids)"},{"content":"alert:create-triggers(${1:\\$uri as xs:string}, ${2:\\$events as element(trgr:data-event)*})","trigger":"alert:create-triggers","description":"($uri,$events)"},{"content":"alert:find-matching-rules(${1:\\$config-uri as xs:string}, ${2:\\$doc as node()})","trigger":"alert:find-matching-rules","description":"($config-uri,$doc)"},{"content":"alert:get-actions(${1:\\$collection-uri as xs:string}, ${2:\\$names as xs:string*})","trigger":"alert:get-actions","description":"($collection-uri,$names)"},{"content":"alert:get-all-rules(${1:\\$collection-uri as xs:string}, ${2:\\$query as cts:query})","trigger":"alert:get-all-rules","description":"($collection-uri,$query)"},{"content":"alert:get-my-rules(${1:\\$collection-uri as xs:string}, ${2:\\$query as cts:query})","trigger":"alert:get-my-rules","description":"($collection-uri,$query)"},{"content":"alert:invoke-matching-actions(${1:\\$config-uri as xs:string}, ${2:\\$doc as node()}, ${3:\\$options as node()})","trigger":"alert:invoke-matching-actions","description":"($config-uri,$doc,$options)"},{"content":"alert:make-action(${1:\\$name as xs:string}, ${2:\\$description as xs:string}, ${3:\\$module-db as xs:unsignedLong}, ${4:\\$module-root as xs:string}, ${5:\\$module as xs:string}, ${6:\\$options as element(alert:options)})","trigger":"alert:make-action","description":"($name,$description,$module-db,$module-root,$module,$options)"},{"content":"alert:make-config(${1:\\$uri as xs:string}, ${2:\\$name as xs:string}, ${3:\\$description as xs:string}, ${4:\\$options as element(alert:options)})","trigger":"alert:make-config","description":"($uri,$name,$description,$options)"},{"content":"alert:make-log-action()","trigger":"alert:make-log-action"},{"content":"alert:make-rule(${1:\\$name as xs:string}, ${2:\\$description as xs:string}, ${3:\\$user-id as xs:unsignedLong}, ${4:\\$query as cts:query}, ${5:\\$action as xs:string}, ${6:\\$options as element(alert:options)})","trigger":"alert:make-rule","description":"($name,$description,$user-id,$query,$action,$options)"},{"content":"alert:remove-triggers(${1:\\$uri as xs:string})","trigger":"alert:remove-triggers","description":"($uri)"},{"content":"alert:rule-action-query(${1:\\$actions as xs:string*})","trigger":"alert:rule-action-query","description":"($actions)"},{"content":"alert:rule-get-action(${1:\\$rule as element(alert:rule)})","trigger":"alert:rule-get-action","description":"($rule)"},{"content":"alert:rule-get-description(${1:\\$rule as element(alert:rule)})","trigger":"alert:rule-get-description","description":"($rule)"},{"content":"alert:rule-get-id(${1:\\$rule as element(alert:rule)})","trigger":"alert:rule-get-id","description":"($rule)"},{"content":"alert:rule-get-name(${1:\\$rule as element(alert:rule)})","trigger":"alert:rule-get-name","description":"($rule)"},{"content":"alert:rule-get-options(${1:\\$rule as element(alert:rule)})","trigger":"alert:rule-get-options","description":"($rule)"},{"content":"alert:rule-get-query(${1:\\$rule as element(alert:rule)})","trigger":"alert:rule-get-query","description":"($rule)"},{"content":"alert:rule-get-user-id(${1:\\$rule as element(alert:rule)})","trigger":"alert:rule-get-user-id","description":"($rule)"},{"content":"alert:rule-id-query(${1:\\$ids as xs:unsignedLong*})","trigger":"alert:rule-id-query","description":"($ids)"},{"content":"alert:rule-insert(${1:\\$collection-uri as xs:string}, ${2:\\$rule as element(alert:rule)})","trigger":"alert:rule-insert","description":"($collection-uri,$rule)"},{"content":"alert:rule-name-query(${1:\\$names as xs:string*})","trigger":"alert:rule-name-query","description":"($names)"},{"content":"alert:rule-remove(${1:\\$collection-uri as xs:string}, ${2:\\$id as xs:unsignedLong})","trigger":"alert:rule-remove","description":"($collection-uri,$id)"},{"content":"alert:rule-set-action(${1:\\$rule as element(alert:rule)}, ${2:\\$action as xs:string})","trigger":"alert:rule-set-action","description":"($rule,$action)"},{"content":"alert:rule-set-description(${1:\\$rule as element(alert:rule)}, ${2:\\$description as xs:string})","trigger":"alert:rule-set-description","description":"($rule,$description)"},{"content":"alert:rule-set-name(${1:\\$rule as element(alert:rule)}, ${2:\\$name as xs:string})","trigger":"alert:rule-set-name","description":"($rule,$name)"},{"content":"alert:rule-set-options(${1:\\$rule as element(alert:rule)}, ${2:\\$options as element(alert:options)})","trigger":"alert:rule-set-options","description":"($rule,$options)"},{"content":"alert:rule-set-query(${1:\\$rule as element(alert:rule)}, ${2:\\$query as cts:query})","trigger":"alert:rule-set-query","description":"($rule,$query)"},{"content":"alert:rule-set-user-id(${1:\\$rule as element(alert:rule)}, ${2:\\$user-id as xs:unsignedLong})","trigger":"alert:rule-set-user-id","description":"($rule,$user-id)"},{"content":"alert:rule-user-id-query(${1:\\$user-ids as xs:unsignedLong*})","trigger":"alert:rule-user-id-query","description":"($user-ids)"},{"content":"alert:spawn-matching-actions(${1:\\$config-uri as xs:string}, ${2:\\$doc as node()}, ${3:\\$options as node()})","trigger":"alert:spawn-matching-actions","description":"($config-uri,$doc,$options)"},{"content":"cdict:dictionary-delete(${1:\\$lang as xs:string})","trigger":"cdict:dictionary-delete","description":"($lang)"},{"content":"cdict:dictionary-read(${1:\\$lang as xs:string})","trigger":"cdict:dictionary-read","description":"($lang)"},{"content":"cdict:dictionary-write(${1:\\$lang as xs:string}, ${2:\\$dict as element(cdict:dictionary)})","trigger":"cdict:dictionary-write","description":"($lang,$dict)"},{"content":"cdict:get-languages()","trigger":"cdict:get-languages"},{"content":"cpf:check-transition(${1:\\$docid as xs:string}, ${2:\\$transition as element(*}, p:transition)?})","trigger":"cpf:check-transition","description":"($docid,$transition,p:transition)?)"},{"content":"cpf:document-get-error(${1:\\$doc as xs:string})","trigger":"cpf:document-get-error","description":"($doc)"},{"content":"cpf:document-get-last-updated(${1:\\$doc as xs:string})","trigger":"cpf:document-get-last-updated","description":"($doc)"},{"content":"cpf:document-get-processing-status(${1:\\$doc as xs:string})","trigger":"cpf:document-get-processing-status","description":"($doc)"},{"content":"cpf:document-get-state(${1:\\$doc as xs:string})","trigger":"cpf:document-get-state","description":"($doc)"},{"content":"cpf:document-set-error(${1:\\$doc as xs:string}, ${2:\\$error as node()?})","trigger":"cpf:document-set-error","description":"($doc,$error)"},{"content":"cpf:document-set-last-updated(${1:\\$doc as xs:string}, ${2:\\$last-updated as xs:dateTime})","trigger":"cpf:document-set-last-updated","description":"($doc,$last-updated)"},{"content":"cpf:document-set-processing-status(${1:\\$doc as xs:string}, ${2:\\$processing-status as xs:string})","trigger":"cpf:document-set-processing-status","description":"($doc,$processing-status)"},{"content":"cpf:document-set-state(${1:\\$doc as xs:string}, ${2:\\$state as xs:anyURI})","trigger":"cpf:document-set-state","description":"($doc,$state)"},{"content":"cpf:failure(${1:\\$docid as xs:string}, ${2:\\$transition as element(*}, p:transition)?}, ${3:\\$exception as node()?}, ${4:\\$override-state as xs:anyURI?})","trigger":"cpf:failure","description":"($docid,$transition,p:transition)?,$exception,$override-state)"},{"content":"cpf:success(${1:\\$docid as xs:string}, ${2:\\$transition as element(*}, p:transition)?}, ${3:\\$override-state as xs:anyURI?})","trigger":"cpf:success","description":"($docid,$transition,p:transition)?,$override-state)"},{"content":"css:convert(${1:\\$css as xs:string}, ${2:\\$options as element()?})","trigger":"css:convert","description":"($css,$options)"},{"content":"css:get(${1:\\$doc as xs:string})","trigger":"css:get","description":"($doc)"},{"content":"cts:aggregate(${1:\\$native-plugin as xs:string}, ${2:\\$aggregate-name as xs:string}, ${3:\\$range-indexes as cts:reference*})","trigger":"cts:aggregate","description":"($native-plugin,$aggregate-name,$range-indexes)"},{"content":"cts:aggregate(${1:\\$native-plugin as xs:string}, ${2:\\$aggregate-name as xs:string}, ${3:\\$range-indexes as cts:reference*}, ${4:\\$argument as item()*})","trigger":"cts:aggregate","description":"($native-plugin,$aggregate-name,$range-indexes,$argument)"},{"content":"cts:aggregate(${1:\\$native-plugin as xs:string}, ${2:\\$aggregate-name as xs:string}, ${3:\\$range-indexes as cts:reference*}, ${4:\\$argument as item()*}, ${5:\\$options as xs:string*})","trigger":"cts:aggregate","description":"($native-plugin,$aggregate-name,$range-indexes,$argument,$options)"},{"content":"cts:aggregate(${1:\\$native-plugin as xs:string}, ${2:\\$aggregate-name as xs:string}, ${3:\\$range-indexes as cts:reference*}, ${4:\\$argument as item()*}, ${5:\\$options as xs:string*}, ${6:\\$query as cts:query?})","trigger":"cts:aggregate","description":"($native-plugin,$aggregate-name,$range-indexes,$argument,$options,$query)"},{"content":"cts:aggregate(${1:\\$native-plugin as xs:string}, ${2:\\$aggregate-name as xs:string}, ${3:\\$range-indexes as cts:reference*}, ${4:\\$argument as item()*}, ${5:\\$options as xs:string*}, ${6:\\$query as cts:query?}, ${7:\\$forest-ids as xs:unsignedLong*})","trigger":"cts:aggregate","description":"($native-plugin,$aggregate-name,$range-indexes,$argument,$options,$query,$forest-ids)"},{"content":"cts:and-not-query(${1:\\$positive-query as cts:query}, ${2:\\$negative-query as cts:query})","trigger":"cts:and-not-query","description":"($positive-query,$negative-query)"},{"content":"cts:and-not-query-negative-query(${1:\\$query as cts:and-not-query})","trigger":"cts:and-not-query-negative-query","description":"($query)"},{"content":"cts:and-not-query-positive-query(${1:\\$query as cts:and-not-query})","trigger":"cts:and-not-query-positive-query","description":"($query)"},{"content":"cts:and-query(${1:\\$queries as cts:query*})","trigger":"cts:and-query","description":"($queries)"},{"content":"cts:and-query(${1:\\$queries as cts:query*}, ${2:\\$options as xs:string*})","trigger":"cts:and-query","description":"($queries,$options)"},{"content":"cts:and-query-options(${1:\\$query as cts:and-query})","trigger":"cts:and-query-options","description":"($query)"},{"content":"cts:and-query-queries(${1:\\$query as cts:and-query})","trigger":"cts:and-query-queries","description":"($query)"},{"content":"cts:approx-center(${1:\\$region as cts:region})","trigger":"cts:approx-center","description":"($region)"},{"content":"cts:approx-center(${1:\\$region as cts:region}, ${2:\\$options as xs:string*})","trigger":"cts:approx-center","description":"($region,$options)"},{"content":"cts:arc-intersection(${1:\\$p1 as cts:point}, ${2:\\$p2 as cts:point}, ${3:\\$q1 as cts:point}, ${4:\\$q2 as cts:point})","trigger":"cts:arc-intersection","description":"($p1,$p2,$q1,$q2)"},{"content":"cts:arc-intersection(${1:\\$p1 as cts:point}, ${2:\\$p2 as cts:point}, ${3:\\$q1 as cts:point}, ${4:\\$q2 as cts:point}, ${5:\\$options as xs:string*})","trigger":"cts:arc-intersection","description":"($p1,$p2,$q1,$q2,$options)"},{"content":"cts:avg(${1:\\$arg as xs:anyAtomicType*})","trigger":"cts:avg","description":"($arg)"},{"content":"cts:avg-aggregate(${1:\\$range-index as cts:reference})","trigger":"cts:avg-aggregate","description":"($range-index)"},{"content":"cts:avg-aggregate(${1:\\$range-index as cts:reference}, ${2:\\$options as xs:string*})","trigger":"cts:avg-aggregate","description":"($range-index,$options)"},{"content":"cts:avg-aggregate(${1:\\$range-index as cts:reference}, ${2:\\$options as xs:string*}, ${3:\\$query as cts:query?})","trigger":"cts:avg-aggregate","description":"($range-index,$options,$query)"},{"content":"cts:avg-aggregate(${1:\\$range-index as cts:reference}, ${2:\\$options as xs:string*}, ${3:\\$query as cts:query?}, ${4:\\$forest-ids as xs:unsignedLong*})","trigger":"cts:avg-aggregate","description":"($range-index,$options,$query,$forest-ids)"},{"content":"cts:bearing(${1:\\$p1 as cts:point}, ${2:\\$p2 as cts:point})","trigger":"cts:bearing","description":"($p1,$p2)"},{"content":"cts:bearing(${1:\\$p1 as cts:point}, ${2:\\$p2 as cts:point}, ${3:\\$options as xs:string*})","trigger":"cts:bearing","description":"($p1,$p2,$options)"},{"content":"cts:boost-query(${1:\\$matching-query as cts:query}, ${2:\\$boosting-query as cts:query})","trigger":"cts:boost-query","description":"($matching-query,$boosting-query)"},{"content":"cts:boost-query-boosting-query(${1:\\$query as cts:boost-query})","trigger":"cts:boost-query-boosting-query","description":"($query)"},{"content":"cts:boost-query-matching-query(${1:\\$query as cts:boost-query})","trigger":"cts:boost-query-matching-query","description":"($query)"},{"content":"cts:bounding-boxes(${1:\\$region as cts:region})","trigger":"cts:bounding-boxes","description":"($region)"},{"content":"cts:bounding-boxes(${1:\\$region as cts:region}, ${2:\\$options as xs:string*})","trigger":"cts:bounding-boxes","description":"($region,$options)"},{"content":"cts:box(${1:\\$south as xs:float}, ${2:\\$west as xs:float}, ${3:\\$north as xs:float}, ${4:\\$east as xs:float})","trigger":"cts:box","description":"($south,$west,$north,$east)"},{"content":"cts:box-east(${1:\\$box as cts:box})","trigger":"cts:box-east","description":"($box)"},{"content":"cts:box-intersects(${1:\\$box as cts:box}, ${2:\\$region as cts:region*})","trigger":"cts:box-intersects","description":"($box,$region)"},{"content":"cts:box-intersects(${1:\\$box as cts:box}, ${2:\\$region as cts:region*}, ${3:\\$options as xs:string*})","trigger":"cts:box-intersects","description":"($box,$region,$options)"},{"content":"cts:box-north(${1:\\$box as cts:box})","trigger":"cts:box-north","description":"($box)"},{"content":"cts:box-south(${1:\\$box as cts:box})","trigger":"cts:box-south","description":"($box)"},{"content":"cts:box-west(${1:\\$box as cts:box})","trigger":"cts:box-west","description":"($box)"},{"content":"cts:circle(${1:\\$radius as xs:double}, ${2:\\$center as cts:point})","trigger":"cts:circle","description":"($radius,$center)"},{"content":"cts:circle-center(${1:\\$circle as cts:circle})","trigger":"cts:circle-center","description":"($circle)"},{"content":"cts:circle-intersects(${1:\\$circle as cts:circle}, ${2:\\$region as cts:region*})","trigger":"cts:circle-intersects","description":"($circle,$region)"},{"content":"cts:circle-intersects(${1:\\$circle as cts:circle}, ${2:\\$region as cts:region*}, ${3:\\$options as xs:string*})","trigger":"cts:circle-intersects","description":"($circle,$region,$options)"},{"content":"cts:circle-radius(${1:\\$circle as cts:circle})","trigger":"cts:circle-radius","description":"($circle)"},{"content":"cts:classify(${1:\\$data-nodes as node()*}, ${2:\\$classifier as element(cts:classifier)})","trigger":"cts:classify","description":"($data-nodes,$classifier)"},{"content":"cts:classify(${1:\\$data-nodes as node()*}, ${2:\\$classifier as element(cts:classifier)}, ${3:\\$options as (element()|map:map)?})","trigger":"cts:classify","description":"($data-nodes,$classifier,$options)"},{"content":"cts:classify(${1:\\$data-nodes as node()*}, ${2:\\$classifier as element(cts:classifier)}, ${3:\\$options as (element()|map:map)?}, ${4:\\$training-nodes as node()*})","trigger":"cts:classify","description":"($data-nodes,$classifier,$options,$training-nodes)"},{"content":"cts:cluster(${1:\\$nodes as node()*})","trigger":"cts:cluster","description":"($nodes)"},{"content":"cts:cluster(${1:\\$nodes as node()*}, ${2:\\$options as (element()|map:map)?})","trigger":"cts:cluster","description":"($nodes,$options)"},{"content":"cts:collection-match(${1:\\$pattern as xs:string})","trigger":"cts:collection-match","description":"($pattern)"},{"content":"cts:collection-match(${1:\\$pattern as xs:string}, ${2:\\$options as xs:string*})","trigger":"cts:collection-match","description":"($pattern,$options)"},{"content":"cts:collection-match(${1:\\$pattern as xs:string}, ${2:\\$options as xs:string*}, ${3:\\$query as cts:query?})","trigger":"cts:collection-match","description":"($pattern,$options,$query)"},{"content":"cts:collection-match(${1:\\$pattern as xs:string}, ${2:\\$options as xs:string*}, ${3:\\$query as cts:query?}, ${4:\\$quality-weight as xs:double?})","trigger":"cts:collection-match","description":"($pattern,$options,$query,$quality-weight)"},{"content":"cts:collection-match(${1:\\$pattern as xs:string}, ${2:\\$options as xs:string*}, ${3:\\$query as cts:query?}, ${4:\\$quality-weight as xs:double?}, ${5:\\$forest-ids as xs:unsignedLong*})","trigger":"cts:collection-match","description":"($pattern,$options,$query,$quality-weight,$forest-ids)"},{"content":"cts:collection-query(${1:\\$uris as xs:string*})","trigger":"cts:collection-query","description":"($uris)"},{"content":"cts:collection-query-uris(${1:\\$query as cts:collection-query})","trigger":"cts:collection-query-uris","description":"($query)"},{"content":"cts:collection-reference(${1:\\$options as xs:string*})","trigger":"cts:collection-reference","description":"($options)"},{"content":"cts:collection-reference()","trigger":"cts:collection-reference"},{"content":"cts:collections(${1:\\$start as xs:string?})","trigger":"cts:collections","description":"($start)"},{"content":"cts:collections(${1:\\$start as xs:string?}, ${2:\\$options as xs:string*})","trigger":"cts:collections","description":"($start,$options)"},{"content":"cts:collections(${1:\\$start as xs:string?}, ${2:\\$options as xs:string*}, ${3:\\$query as cts:query?})","trigger":"cts:collections","description":"($start,$options,$query)"},{"content":"cts:collections(${1:\\$start as xs:string?}, ${2:\\$options as xs:string*}, ${3:\\$query as cts:query?}, ${4:\\$quality-weight as xs:double?})","trigger":"cts:collections","description":"($start,$options,$query,$quality-weight)"},{"content":"cts:collections(${1:\\$start as xs:string?}, ${2:\\$options as xs:string*}, ${3:\\$query as cts:query?}, ${4:\\$quality-weight as xs:double?}, ${5:\\$forest-ids as xs:unsignedLong*})","trigger":"cts:collections","description":"($start,$options,$query,$quality-weight,$forest-ids)"},{"content":"cts:collections()","trigger":"cts:collections"},{"content":"cts:complex-polygon(${1:\\$outer as cts:polygon}, ${2:\\$inner as cts:polygon*})","trigger":"cts:complex-polygon","description":"($outer,$inner)"},{"content":"cts:complex-polygon-contains(${1:\\$complex-polygon as cts:complex-polygon}, ${2:\\$region as cts:region*})","trigger":"cts:complex-polygon-contains","description":"($complex-polygon,$region)"},{"content":"cts:complex-polygon-contains(${1:\\$complex-polygon as cts:complex-polygon}, ${2:\\$region as cts:region*}, ${3:\\$options as xs:string*})","trigger":"cts:complex-polygon-contains","description":"($complex-polygon,$region,$options)"},{"content":"cts:complex-polygon-inner(${1:\\$complexPolygon as cts:complex-polygon})","trigger":"cts:complex-polygon-inner","description":"($complexPolygon)"},{"content":"cts:complex-polygon-intersects(${1:\\$complex-polygon as cts:complex-polygon}, ${2:\\$region as cts:region*})","trigger":"cts:complex-polygon-intersects","description":"($complex-polygon,$region)"},{"content":"cts:complex-polygon-intersects(${1:\\$complex-polygon as cts:complex-polygon}, ${2:\\$region as cts:region*}, ${3:\\$options as xs:string*})","trigger":"cts:complex-polygon-intersects","description":"($complex-polygon,$region,$options)"},{"content":"cts:complex-polygon-outer(${1:\\$complexPolygon as cts:complex-polygon})","trigger":"cts:complex-polygon-outer","description":"($complexPolygon)"},{"content":"cts:confidence(${1:\\$node as node()})","trigger":"cts:confidence","description":"($node)"},{"content":"cts:confidence()","trigger":"cts:confidence"},{"content":"cts:confidence-order(${1:\\$options as xs:string*})","trigger":"cts:confidence-order","description":"($options)"},{"content":"cts:confidence-order()","trigger":"cts:confidence-order"},{"content":"cts:contains(${1:\\$nodes as item()*}, ${2:\\$query as cts:query})","trigger":"cts:contains","description":"($nodes,$query)"},{"content":"cts:correlation(${1:\\$value1 as cts:reference}, ${2:\\$value2 as cts:reference})","trigger":"cts:correlation","description":"($value1,$value2)"},{"content":"cts:correlation(${1:\\$value1 as cts:reference}, ${2:\\$value2 as cts:reference}, ${3:\\$options as xs:string*})","trigger":"cts:correlation","description":"($value1,$value2,$options)"},{"content":"cts:correlation(${1:\\$value1 as cts:reference}, ${2:\\$value2 as cts:reference}, ${3:\\$options as xs:string*}, ${4:\\$query as cts:query?})","trigger":"cts:correlation","description":"($value1,$value2,$options,$query)"},{"content":"cts:correlation(${1:\\$value1 as cts:reference}, ${2:\\$value2 as cts:reference}, ${3:\\$options as xs:string*}, ${4:\\$query as cts:query?}, ${5:\\$forest-ids as xs:unsignedLong*})","trigger":"cts:correlation","description":"($value1,$value2,$options,$query,$forest-ids)"},{"content":"cts:count(${1:\\$arg as item()*})","trigger":"cts:count","description":"($arg)"},{"content":"cts:count(${1:\\$arg as item()*}, ${2:\\$maximum as xs:double})","trigger":"cts:count","description":"($arg,$maximum)"},{"content":"cts:count-aggregate(${1:\\$range-index as cts:reference})","trigger":"cts:count-aggregate","description":"($range-index)"},{"content":"cts:count-aggregate(${1:\\$range-index as cts:reference}, ${2:\\$options as xs:string*})","trigger":"cts:count-aggregate","description":"($range-index,$options)"},{"content":"cts:count-aggregate(${1:\\$range-index as cts:reference}, ${2:\\$options as xs:string*}, ${3:\\$query as cts:query?})","trigger":"cts:count-aggregate","description":"($range-index,$options,$query)"},{"content":"cts:count-aggregate(${1:\\$range-index as cts:reference}, ${2:\\$options as xs:string*}, ${3:\\$query as cts:query?}, ${4:\\$forest-ids as xs:unsignedLong*})","trigger":"cts:count-aggregate","description":"($range-index,$options,$query,$forest-ids)"},{"content":"cts:covariance(${1:\\$value1 as cts:reference}, ${2:\\$value2 as cts:reference})","trigger":"cts:covariance","description":"($value1,$value2)"},{"content":"cts:covariance(${1:\\$value1 as cts:reference}, ${2:\\$value2 as cts:reference}, ${3:\\$options as xs:string*})","trigger":"cts:covariance","description":"($value1,$value2,$options)"},{"content":"cts:covariance(${1:\\$value1 as cts:reference}, ${2:\\$value2 as cts:reference}, ${3:\\$options as xs:string*}, ${4:\\$query as cts:query?})","trigger":"cts:covariance","description":"($value1,$value2,$options,$query)"},{"content":"cts:covariance(${1:\\$value1 as cts:reference}, ${2:\\$value2 as cts:reference}, ${3:\\$options as xs:string*}, ${4:\\$query as cts:query?}, ${5:\\$forest-ids as xs:unsignedLong*})","trigger":"cts:covariance","description":"($value1,$value2,$options,$query,$forest-ids)"},{"content":"cts:covariance-p(${1:\\$value1 as cts:reference}, ${2:\\$value2 as cts:reference})","trigger":"cts:covariance-p","description":"($value1,$value2)"},{"content":"cts:covariance-p(${1:\\$value1 as cts:reference}, ${2:\\$value2 as cts:reference}, ${3:\\$options as xs:string*})","trigger":"cts:covariance-p","description":"($value1,$value2,$options)"},{"content":"cts:covariance-p(${1:\\$value1 as cts:reference}, ${2:\\$value2 as cts:reference}, ${3:\\$options as xs:string*}, ${4:\\$query as cts:query?})","trigger":"cts:covariance-p","description":"($value1,$value2,$options,$query)"},{"content":"cts:covariance-p(${1:\\$value1 as cts:reference}, ${2:\\$value2 as cts:reference}, ${3:\\$options as xs:string*}, ${4:\\$query as cts:query?}, ${5:\\$forest-ids as xs:unsignedLong*})","trigger":"cts:covariance-p","description":"($value1,$value2,$options,$query,$forest-ids)"},{"content":"cts:deregister(${1:\\$id as xs:unsignedLong})","trigger":"cts:deregister","description":"($id)"},{"content":"cts:destination(${1:\\$p as cts:point}, ${2:\\$bearing as xs:double}, ${3:\\$distance as xs:double})","trigger":"cts:destination","description":"($p,$bearing,$distance)"},{"content":"cts:destination(${1:\\$p as cts:point}, ${2:\\$bearing as xs:double}, ${3:\\$distance as xs:double}, ${4:\\$options as xs:string*})","trigger":"cts:destination","description":"($p,$bearing,$distance,$options)"},{"content":"cts:directory-query(${1:\\$uris as xs:string*})","trigger":"cts:directory-query","description":"($uris)"},{"content":"cts:directory-query(${1:\\$uris as xs:string*}, ${2:\\$depth as xs:string?})","trigger":"cts:directory-query","description":"($uris,$depth)"},{"content":"cts:directory-query-depth(${1:\\$query as cts:directory-query})","trigger":"cts:directory-query-depth","description":"($query)"},{"content":"cts:directory-query-uris(${1:\\$query as cts:directory-query})","trigger":"cts:directory-query-uris","description":"($query)"},{"content":"cts:distance(${1:\\$p1 as cts:point}, ${2:\\$p2 as cts:point})","trigger":"cts:distance","description":"($p1,$p2)"},{"content":"cts:distance(${1:\\$p1 as cts:point}, ${2:\\$p2 as cts:point}, ${3:\\$options as xs:string*})","trigger":"cts:distance","description":"($p1,$p2,$options)"},{"content":"cts:distinctive-terms(${1:\\$nodes as node()*})","trigger":"cts:distinctive-terms","description":"($nodes)"},{"content":"cts:distinctive-terms(${1:\\$nodes as node()*}, ${2:\\$options as element()?})","trigger":"cts:distinctive-terms","description":"($nodes,$options)"},{"content":"cts:document-fragment-query(${1:\\$query as cts:query})","trigger":"cts:document-fragment-query","description":"($query)"},{"content":"cts:document-fragment-query-query(${1:\\$query as cts:document-fragment-query})","trigger":"cts:document-fragment-query-query","description":"($query)"},{"content":"cts:document-order(${1:\\$options as xs:string*})","trigger":"cts:document-order","description":"($options)"},{"content":"cts:document-order()","trigger":"cts:document-order"},{"content":"cts:document-query(${1:\\$uris as xs:string*})","trigger":"cts:document-query","description":"($uris)"},{"content":"cts:document-query-uris(${1:\\$query as cts:document-query})","trigger":"cts:document-query-uris","description":"($query)"},{"content":"cts:element-attribute-pair-geospatial-boxes(${1:\\$parent-element-names as xs:QName*}, ${2:\\$latitude-names as xs:QName*}, ${3:\\$longitude-names as xs:QName*})","trigger":"cts:element-attribute-pair-geospatial-boxes","description":"($parent-element-names,$latitude-names,$longitude-names)"},{"content":"cts:element-attribute-pair-geospatial-boxes(${1:\\$parent-element-names as xs:QName*}, ${2:\\$latitude-names as xs:QName*}, ${3:\\$longitude-names as xs:QName*}, ${4:\\$latitude-bounds as xs:double*})","trigger":"cts:element-attribute-pair-geospatial-boxes","description":"($parent-element-names,$latitude-names,$longitude-names,$latitude-bounds)"},{"content":"cts:element-attribute-pair-geospatial-boxes(${1:\\$parent-element-names as xs:QName*}, ${2:\\$latitude-names as xs:QName*}, ${3:\\$longitude-names as xs:QName*}, ${4:\\$latitude-bounds as xs:double*}, ${5:\\$longitude-bounds as xs:double*})","trigger":"cts:element-attribute-pair-geospatial-boxes","description":"($parent-element-names,$latitude-names,$longitude-names,$latitude-bounds,$longitude-bounds)"},{"content":"cts:element-attribute-pair-geospatial-boxes(${1:\\$parent-element-names as xs:QName*}, ${2:\\$latitude-names as xs:QName*}, ${3:\\$longitude-names as xs:QName*}, ${4:\\$latitude-bounds as xs:double*}, ${5:\\$longitude-bounds as xs:double*}, ${6:\\$options as xs:string*})","trigger":"cts:element-attribute-pair-geospatial-boxes","description":"($parent-element-names,$latitude-names,$longitude-names,$latitude-bounds,$longitude-bounds,$options)"},{"content":"cts:element-attribute-pair-geospatial-boxes(${1:\\$parent-element-names as xs:QName*}, ${2:\\$latitude-names as xs:QName*}, ${3:\\$longitude-names as xs:QName*}, ${4:\\$latitude-bounds as xs:double*}, ${5:\\$longitude-bounds as xs:double*}, ${6:\\$options as xs:string*}, ${7:\\$query as cts:query?})","trigger":"cts:element-attribute-pair-geospatial-boxes","description":"($parent-element-names,$latitude-names,$longitude-names,$latitude-bounds,$longitude-bounds,$options,$query)"},{"content":"cts:element-attribute-pair-geospatial-boxes(${1:\\$parent-element-names as xs:QName*}, ${2:\\$latitude-names as xs:QName*}, ${3:\\$longitude-names as xs:QName*}, ${4:\\$latitude-bounds as xs:double*}, ${5:\\$longitude-bounds as xs:double*}, ${6:\\$options as xs:string*}, ${7:\\$query as cts:query?}, ${8:\\$quality-weight as xs:double?})","trigger":"cts:element-attribute-pair-geospatial-boxes","description":"($parent-element-names,$latitude-names,$longitude-names,$latitude-bounds,$longitude-bounds,$options,$query,$quality-weight)"},{"content":"cts:element-attribute-pair-geospatial-boxes(${1:\\$parent-element-names as xs:QName*}, ${2:\\$latitude-names as xs:QName*}, ${3:\\$longitude-names as xs:QName*}, ${4:\\$latitude-bounds as xs:double*}, ${5:\\$longitude-bounds as xs:double*}, ${6:\\$options as xs:string*}, ${7:\\$query as cts:query?}, ${8:\\$quality-weight as xs:double?}, ${9:\\$forest-ids as xs:unsignedLong*})","trigger":"cts:element-attribute-pair-geospatial-boxes","description":"($parent-element-names,$latitude-names,$longitude-names,$latitude-bounds,$longitude-bounds,$options,$query,$quality-weight,$forest-ids)"},{"content":"cts:element-attribute-pair-geospatial-query(${1:\\$element-name as xs:QName*}, ${2:\\$latitude-attribute-names as xs:QName*}, ${3:\\$longitude-attribute-names as xs:QName*}, ${4:\\$regions as cts:region*})","trigger":"cts:element-attribute-pair-geospatial-query","description":"($element-name,$latitude-attribute-names,$longitude-attribute-names,$regions)"},{"content":"cts:element-attribute-pair-geospatial-query(${1:\\$element-name as xs:QName*}, ${2:\\$latitude-attribute-names as xs:QName*}, ${3:\\$longitude-attribute-names as xs:QName*}, ${4:\\$regions as cts:region*}, ${5:\\$options as xs:string*})","trigger":"cts:element-attribute-pair-geospatial-query","description":"($element-name,$latitude-attribute-names,$longitude-attribute-names,$regions,$options)"},{"content":"cts:element-attribute-pair-geospatial-query(${1:\\$element-name as xs:QName*}, ${2:\\$latitude-attribute-names as xs:QName*}, ${3:\\$longitude-attribute-names as xs:QName*}, ${4:\\$regions as cts:region*}, ${5:\\$options as xs:string*}, ${6:\\$weight as xs:double?})","trigger":"cts:element-attribute-pair-geospatial-query","description":"($element-name,$latitude-attribute-names,$longitude-attribute-names,$regions,$options,$weight)"},{"content":"cts:element-attribute-pair-geospatial-query-element-name(${1:\\$query as cts:element-attribute-pair-geospatial-query})","trigger":"cts:element-attribute-pair-geospatial-query-element-name","description":"($query)"},{"content":"cts:element-attribute-pair-geospatial-query-latitude-name(${1:\\$query as cts:element-attribute-pair-geospatial-query})","trigger":"cts:element-attribute-pair-geospatial-query-latitude-name","description":"($query)"},{"content":"cts:element-attribute-pair-geospatial-query-longitude-name(${1:\\$query as cts:element-attribute-pair-geospatial-query})","trigger":"cts:element-attribute-pair-geospatial-query-longitude-name","description":"($query)"},{"content":"cts:element-attribute-pair-geospatial-query-options(${1:\\$query as cts:element-attribute-pair-geospatial-query})","trigger":"cts:element-attribute-pair-geospatial-query-options","description":"($query)"},{"content":"cts:element-attribute-pair-geospatial-query-region(${1:\\$query as cts:element-attribute-pair-geospatial-query})","trigger":"cts:element-attribute-pair-geospatial-query-region","description":"($query)"},{"content":"cts:element-attribute-pair-geospatial-query-weight(${1:\\$query as cts:element-attribute-pair-geospatial-query})","trigger":"cts:element-attribute-pair-geospatial-query-weight","description":"($query)"},{"content":"cts:element-attribute-pair-geospatial-value-match(${1:\\$element-names as xs:QName*}, ${2:\\$latitude-names as xs:QName*}, ${3:\\$longitude-names as xs:QName*}, ${4:\\$pattern as xs:anyAtomicType})","trigger":"cts:element-attribute-pair-geospatial-value-match","description":"($element-names,$latitude-names,$longitude-names,$pattern)"},{"content":"cts:element-attribute-pair-geospatial-value-match(${1:\\$element-names as xs:QName*}, ${2:\\$latitude-names as xs:QName*}, ${3:\\$longitude-names as xs:QName*}, ${4:\\$pattern as xs:anyAtomicType}, ${5:\\$options as xs:string*})","trigger":"cts:element-attribute-pair-geospatial-value-match","description":"($element-names,$latitude-names,$longitude-names,$pattern,$options)"},{"content":"cts:element-attribute-pair-geospatial-value-match(${1:\\$element-names as xs:QName*}, ${2:\\$latitude-names as xs:QName*}, ${3:\\$longitude-names as xs:QName*}, ${4:\\$pattern as xs:anyAtomicType}, ${5:\\$options as xs:string*}, ${6:\\$query as cts:query?})","trigger":"cts:element-attribute-pair-geospatial-value-match","description":"($element-names,$latitude-names,$longitude-names,$pattern,$options,$query)"},{"content":"cts:element-attribute-pair-geospatial-value-match(${1:\\$element-names as xs:QName*}, ${2:\\$latitude-names as xs:QName*}, ${3:\\$longitude-names as xs:QName*}, ${4:\\$pattern as xs:anyAtomicType}, ${5:\\$options as xs:string*}, ${6:\\$query as cts:query?}, ${7:\\$quality-weight as xs:double?})","trigger":"cts:element-attribute-pair-geospatial-value-match","description":"($element-names,$latitude-names,$longitude-names,$pattern,$options,$query,$quality-weight)"},{"content":"cts:element-attribute-pair-geospatial-value-match(${1:\\$element-names as xs:QName*}, ${2:\\$latitude-names as xs:QName*}, ${3:\\$longitude-names as xs:QName*}, ${4:\\$pattern as xs:anyAtomicType}, ${5:\\$options as xs:string*}, ${6:\\$query as cts:query?}, ${7:\\$quality-weight as xs:double?}, ${8:\\$forest-ids as xs:unsignedLong*})","trigger":"cts:element-attribute-pair-geospatial-value-match","description":"($element-names,$latitude-names,$longitude-names,$pattern,$options,$query,$quality-weight,$forest-ids)"},{"content":"cts:element-attribute-pair-geospatial-values(${1:\\$element-names as xs:QName*}, ${2:\\$latitude-names as xs:QName*}, ${3:\\$longitude-names as xs:QName*})","trigger":"cts:element-attribute-pair-geospatial-values","description":"($element-names,$latitude-names,$longitude-names)"},{"content":"cts:element-attribute-pair-geospatial-values(${1:\\$element-names as xs:QName*}, ${2:\\$latitude-names as xs:QName*}, ${3:\\$longitude-names as xs:QName*}, ${4:\\$start as cts:point?})","trigger":"cts:element-attribute-pair-geospatial-values","description":"($element-names,$latitude-names,$longitude-names,$start)"},{"content":"cts:element-attribute-pair-geospatial-values(${1:\\$element-names as xs:QName*}, ${2:\\$latitude-names as xs:QName*}, ${3:\\$longitude-names as xs:QName*}, ${4:\\$start as cts:point?}, ${5:\\$options as xs:string*})","trigger":"cts:element-attribute-pair-geospatial-values","description":"($element-names,$latitude-names,$longitude-names,$start,$options)"},{"content":"cts:element-attribute-pair-geospatial-values(${1:\\$element-names as xs:QName*}, ${2:\\$latitude-names as xs:QName*}, ${3:\\$longitude-names as xs:QName*}, ${4:\\$start as cts:point?}, ${5:\\$options as xs:string*}, ${6:\\$query as cts:query?})","trigger":"cts:element-attribute-pair-geospatial-values","description":"($element-names,$latitude-names,$longitude-names,$start,$options,$query)"},{"content":"cts:element-attribute-pair-geospatial-values(${1:\\$element-names as xs:QName*}, ${2:\\$latitude-names as xs:QName*}, ${3:\\$longitude-names as xs:QName*}, ${4:\\$start as cts:point?}, ${5:\\$options as xs:string*}, ${6:\\$query as cts:query?}, ${7:\\$quality-weight as xs:double?})","trigger":"cts:element-attribute-pair-geospatial-values","description":"($element-names,$latitude-names,$longitude-names,$start,$options,$query,$quality-weight)"},{"content":"cts:element-attribute-pair-geospatial-values(${1:\\$element-names as xs:QName*}, ${2:\\$latitude-names as xs:QName*}, ${3:\\$longitude-names as xs:QName*}, ${4:\\$start as cts:point?}, ${5:\\$options as xs:string*}, ${6:\\$query as cts:query?}, ${7:\\$quality-weight as xs:double?}, ${8:\\$forest-ids as xs:unsignedLong*})","trigger":"cts:element-attribute-pair-geospatial-values","description":"($element-names,$latitude-names,$longitude-names,$start,$options,$query,$quality-weight,$forest-ids)"},{"content":"cts:element-attribute-range-query(${1:\\$element-name as xs:QName*}, ${2:\\$attribute-name as xs:QName*}, ${3:\\$operator as xs:string}, ${4:\\$value as xs:anyAtomicType*})","trigger":"cts:element-attribute-range-query","description":"($element-name,$attribute-name,$operator,$value)"},{"content":"cts:element-attribute-range-query(${1:\\$element-name as xs:QName*}, ${2:\\$attribute-name as xs:QName*}, ${3:\\$operator as xs:string}, ${4:\\$value as xs:anyAtomicType*}, ${5:\\$options as xs:string*})","trigger":"cts:element-attribute-range-query","description":"($element-name,$attribute-name,$operator,$value,$options)"},{"content":"cts:element-attribute-range-query(${1:\\$element-name as xs:QName*}, ${2:\\$attribute-name as xs:QName*}, ${3:\\$operator as xs:string}, ${4:\\$value as xs:anyAtomicType*}, ${5:\\$options as xs:string*}, ${6:\\$weight as xs:double?})","trigger":"cts:element-attribute-range-query","description":"($element-name,$attribute-name,$operator,$value,$options,$weight)"},{"content":"cts:element-attribute-range-query-attribute-name(${1:\\$query as cts:element-attribute-range-query})","trigger":"cts:element-attribute-range-query-attribute-name","description":"($query)"},{"content":"cts:element-attribute-range-query-element-name(${1:\\$query as cts:element-attribute-range-query})","trigger":"cts:element-attribute-range-query-element-name","description":"($query)"},{"content":"cts:element-attribute-range-query-operator(${1:\\$query as cts:element-attribute-range-query})","trigger":"cts:element-attribute-range-query-operator","description":"($query)"},{"content":"cts:element-attribute-range-query-options(${1:\\$query as cts:element-attribute-range-query})","trigger":"cts:element-attribute-range-query-options","description":"($query)"},{"content":"cts:element-attribute-range-query-value(${1:\\$query as cts:element-attribute-range-query})","trigger":"cts:element-attribute-range-query-value","description":"($query)"},{"content":"cts:element-attribute-range-query-weight(${1:\\$query as cts:element-attribute-range-query})","trigger":"cts:element-attribute-range-query-weight","description":"($query)"},{"content":"cts:element-attribute-reference(${1:\\$element as xs:QName}, ${2:\\$attribute as xs:QName})","trigger":"cts:element-attribute-reference","description":"($element,$attribute)"},{"content":"cts:element-attribute-reference(${1:\\$element as xs:QName}, ${2:\\$attribute as xs:QName}, ${3:\\$options as xs:string*})","trigger":"cts:element-attribute-reference","description":"($element,$attribute,$options)"},{"content":"cts:element-attribute-value-co-occurrences(${1:\\$element-name-1 as xs:QName}, ${2:\\$attribute-name-1 as xs:QName?}, ${3:\\$element-name-2 as xs:QName}, ${4:\\$attribute-name-2 as xs:QName?})","trigger":"cts:element-attribute-value-co-occurrences","description":"($element-name-1,$attribute-name-1,$element-name-2,$attribute-name-2)"},{"content":"cts:element-attribute-value-co-occurrences(${1:\\$element-name-1 as xs:QName}, ${2:\\$attribute-name-1 as xs:QName?}, ${3:\\$element-name-2 as xs:QName}, ${4:\\$attribute-name-2 as xs:QName?}, ${5:\\$options as xs:string*})","trigger":"cts:element-attribute-value-co-occurrences","description":"($element-name-1,$attribute-name-1,$element-name-2,$attribute-name-2,$options)"},{"content":"cts:element-attribute-value-co-occurrences(${1:\\$element-name-1 as xs:QName}, ${2:\\$attribute-name-1 as xs:QName?}, ${3:\\$element-name-2 as xs:QName}, ${4:\\$attribute-name-2 as xs:QName?}, ${5:\\$options as xs:string*}, ${6:\\$query as cts:query?})","trigger":"cts:element-attribute-value-co-occurrences","description":"($element-name-1,$attribute-name-1,$element-name-2,$attribute-name-2,$options,$query)"},{"content":"cts:element-attribute-value-co-occurrences(${1:\\$element-name-1 as xs:QName}, ${2:\\$attribute-name-1 as xs:QName?}, ${3:\\$element-name-2 as xs:QName}, ${4:\\$attribute-name-2 as xs:QName?}, ${5:\\$options as xs:string*}, ${6:\\$query as cts:query?}, ${7:\\$quality-weight as xs:double?})","trigger":"cts:element-attribute-value-co-occurrences","description":"($element-name-1,$attribute-name-1,$element-name-2,$attribute-name-2,$options,$query,$quality-weight)"},{"content":"cts:element-attribute-value-co-occurrences(${1:\\$element-name-1 as xs:QName}, ${2:\\$attribute-name-1 as xs:QName?}, ${3:\\$element-name-2 as xs:QName}, ${4:\\$attribute-name-2 as xs:QName?}, ${5:\\$options as xs:string*}, ${6:\\$query as cts:query?}, ${7:\\$quality-weight as xs:double?}, ${8:\\$forest-ids as xs:unsignedLong*})","trigger":"cts:element-attribute-value-co-occurrences","description":"($element-name-1,$attribute-name-1,$element-name-2,$attribute-name-2,$options,$query,$quality-weight,$forest-ids)"},{"content":"cts:element-attribute-value-geospatial-co-occurrences(${1:\\$element-name-1 as xs:QName}, ${2:\\$attribute-name-1 as xs:QName?}, ${3:\\$geo-element-name as xs:QName})","trigger":"cts:element-attribute-value-geospatial-co-occurrences","description":"($element-name-1,$attribute-name-1,$geo-element-name)"},{"content":"cts:element-attribute-value-geospatial-co-occurrences(${1:\\$element-name-1 as xs:QName}, ${2:\\$attribute-name-1 as xs:QName?}, ${3:\\$geo-element-name as xs:QName}, ${4:\\$child-name-1 as xs:QName?})","trigger":"cts:element-attribute-value-geospatial-co-occurrences","description":"($element-name-1,$attribute-name-1,$geo-element-name,$child-name-1)"},{"content":"cts:element-attribute-value-geospatial-co-occurrences(${1:\\$element-name-1 as xs:QName}, ${2:\\$attribute-name-1 as xs:QName?}, ${3:\\$geo-element-name as xs:QName}, ${4:\\$child-name-1 as xs:QName?}, ${5:\\$child-name-2 as xs:QName?})","trigger":"cts:element-attribute-value-geospatial-co-occurrences","description":"($element-name-1,$attribute-name-1,$geo-element-name,$child-name-1,$child-name-2)"},{"content":"cts:element-attribute-value-geospatial-co-occurrences(${1:\\$element-name-1 as xs:QName}, ${2:\\$attribute-name-1 as xs:QName?}, ${3:\\$geo-element-name as xs:QName}, ${4:\\$child-name-1 as xs:QName?}, ${5:\\$child-name-2 as xs:QName?}, ${6:\\$options as xs:string*})","trigger":"cts:element-attribute-value-geospatial-co-occurrences","description":"($element-name-1,$attribute-name-1,$geo-element-name,$child-name-1,$child-name-2,$options)"},{"content":"cts:element-attribute-value-geospatial-co-occurrences(${1:\\$element-name-1 as xs:QName}, ${2:\\$attribute-name-1 as xs:QName?}, ${3:\\$geo-element-name as xs:QName}, ${4:\\$child-name-1 as xs:QName?}, ${5:\\$child-name-2 as xs:QName?}, ${6:\\$options as xs:string*}, ${7:\\$query as cts:query?})","trigger":"cts:element-attribute-value-geospatial-co-occurrences","description":"($element-name-1,$attribute-name-1,$geo-element-name,$child-name-1,$child-name-2,$options,$query)"},{"content":"cts:element-attribute-value-geospatial-co-occurrences(${1:\\$element-name-1 as xs:QName}, ${2:\\$attribute-name-1 as xs:QName?}, ${3:\\$geo-element-name as xs:QName}, ${4:\\$child-name-1 as xs:QName?}, ${5:\\$child-name-2 as xs:QName?}, ${6:\\$options as xs:string*}, ${7:\\$query as cts:query?}, ${8:\\$quality-weight as xs:double?})","trigger":"cts:element-attribute-value-geospatial-co-occurrences","description":"($element-name-1,$attribute-name-1,$geo-element-name,$child-name-1,$child-name-2,$options,$query,$quality-weight)"},{"content":"cts:element-attribute-value-geospatial-co-occurrences(${1:\\$element-name-1 as xs:QName}, ${2:\\$attribute-name-1 as xs:QName?}, ${3:\\$geo-element-name as xs:QName}, ${4:\\$child-name-1 as xs:QName?}, ${5:\\$child-name-2 as xs:QName?}, ${6:\\$options as xs:string*}, ${7:\\$query as cts:query?}, ${8:\\$quality-weight as xs:double?}, ${9:\\$forest-ids as xs:unsignedLong*})","trigger":"cts:element-attribute-value-geospatial-co-occurrences","description":"($element-name-1,$attribute-name-1,$geo-element-name,$child-name-1,$child-name-2,$options,$query,$quality-weight,$forest-ids)"},{"content":"cts:element-attribute-value-match(${1:\\$element-names as xs:QName*}, ${2:\\$attribute-names as xs:QName*}, ${3:\\$pattern as xs:anyAtomicType})","trigger":"cts:element-attribute-value-match","description":"($element-names,$attribute-names,$pattern)"},{"content":"cts:element-attribute-value-match(${1:\\$element-names as xs:QName*}, ${2:\\$attribute-names as xs:QName*}, ${3:\\$pattern as xs:anyAtomicType}, ${4:\\$options as xs:string*})","trigger":"cts:element-attribute-value-match","description":"($element-names,$attribute-names,$pattern,$options)"},{"content":"cts:element-attribute-value-match(${1:\\$element-names as xs:QName*}, ${2:\\$attribute-names as xs:QName*}, ${3:\\$pattern as xs:anyAtomicType}, ${4:\\$options as xs:string*}, ${5:\\$query as cts:query?})","trigger":"cts:element-attribute-value-match","description":"($element-names,$attribute-names,$pattern,$options,$query)"},{"content":"cts:element-attribute-value-match(${1:\\$element-names as xs:QName*}, ${2:\\$attribute-names as xs:QName*}, ${3:\\$pattern as xs:anyAtomicType}, ${4:\\$options as xs:string*}, ${5:\\$query as cts:query?}, ${6:\\$quality-weight as xs:double?})","trigger":"cts:element-attribute-value-match","description":"($element-names,$attribute-names,$pattern,$options,$query,$quality-weight)"},{"content":"cts:element-attribute-value-match(${1:\\$element-names as xs:QName*}, ${2:\\$attribute-names as xs:QName*}, ${3:\\$pattern as xs:anyAtomicType}, ${4:\\$options as xs:string*}, ${5:\\$query as cts:query?}, ${6:\\$quality-weight as xs:double?}, ${7:\\$forest-ids as xs:unsignedLong*})","trigger":"cts:element-attribute-value-match","description":"($element-names,$attribute-names,$pattern,$options,$query,$quality-weight,$forest-ids)"},{"content":"cts:element-attribute-value-query(${1:\\$element-name as xs:QName*}, ${2:\\$attribute-name as xs:QName*}, ${3:\\$text as xs:string*})","trigger":"cts:element-attribute-value-query","description":"($element-name,$attribute-name,$text)"},{"content":"cts:element-attribute-value-query(${1:\\$element-name as xs:QName*}, ${2:\\$attribute-name as xs:QName*}, ${3:\\$text as xs:string*}, ${4:\\$options as xs:string*})","trigger":"cts:element-attribute-value-query","description":"($element-name,$attribute-name,$text,$options)"},{"content":"cts:element-attribute-value-query(${1:\\$element-name as xs:QName*}, ${2:\\$attribute-name as xs:QName*}, ${3:\\$text as xs:string*}, ${4:\\$options as xs:string*}, ${5:\\$weight as xs:double?})","trigger":"cts:element-attribute-value-query","description":"($element-name,$attribute-name,$text,$options,$weight)"},{"content":"cts:element-attribute-value-query-attribute-name(${1:\\$query as cts:element-attribute-value-query})","trigger":"cts:element-attribute-value-query-attribute-name","description":"($query)"},{"content":"cts:element-attribute-value-query-element-name(${1:\\$query as cts:element-attribute-value-query})","trigger":"cts:element-attribute-value-query-element-name","description":"($query)"},{"content":"cts:element-attribute-value-query-options(${1:\\$query as cts:element-attribute-value-query})","trigger":"cts:element-attribute-value-query-options","description":"($query)"},{"content":"cts:element-attribute-value-query-text(${1:\\$query as cts:element-attribute-value-query})","trigger":"cts:element-attribute-value-query-text","description":"($query)"},{"content":"cts:element-attribute-value-query-weight(${1:\\$query as cts:element-attribute-value-query})","trigger":"cts:element-attribute-value-query-weight","description":"($query)"},{"content":"cts:element-attribute-value-ranges(${1:\\$element-names as xs:QName*}, ${2:\\$attribute-names as xs:QName*})","trigger":"cts:element-attribute-value-ranges","description":"($element-names,$attribute-names)"},{"content":"cts:element-attribute-value-ranges(${1:\\$element-names as xs:QName*}, ${2:\\$attribute-names as xs:QName*}, ${3:\\$bounds as xs:anyAtomicType*})","trigger":"cts:element-attribute-value-ranges","description":"($element-names,$attribute-names,$bounds)"},{"content":"cts:element-attribute-value-ranges(${1:\\$element-names as xs:QName*}, ${2:\\$attribute-names as xs:QName*}, ${3:\\$bounds as xs:anyAtomicType*}, ${4:\\$options as xs:string*})","trigger":"cts:element-attribute-value-ranges","description":"($element-names,$attribute-names,$bounds,$options)"},{"content":"cts:element-attribute-value-ranges(${1:\\$element-names as xs:QName*}, ${2:\\$attribute-names as xs:QName*}, ${3:\\$bounds as xs:anyAtomicType*}, ${4:\\$options as xs:string*}, ${5:\\$query as cts:query?})","trigger":"cts:element-attribute-value-ranges","description":"($element-names,$attribute-names,$bounds,$options,$query)"},{"content":"cts:element-attribute-value-ranges(${1:\\$element-names as xs:QName*}, ${2:\\$attribute-names as xs:QName*}, ${3:\\$bounds as xs:anyAtomicType*}, ${4:\\$options as xs:string*}, ${5:\\$query as cts:query?}, ${6:\\$quality-weight as xs:double?})","trigger":"cts:element-attribute-value-ranges","description":"($element-names,$attribute-names,$bounds,$options,$query,$quality-weight)"},{"content":"cts:element-attribute-value-ranges(${1:\\$element-names as xs:QName*}, ${2:\\$attribute-names as xs:QName*}, ${3:\\$bounds as xs:anyAtomicType*}, ${4:\\$options as xs:string*}, ${5:\\$query as cts:query?}, ${6:\\$quality-weight as xs:double?}, ${7:\\$forest-ids as xs:unsignedLong*})","trigger":"cts:element-attribute-value-ranges","description":"($element-names,$attribute-names,$bounds,$options,$query,$quality-weight,$forest-ids)"},{"content":"cts:element-attribute-values(${1:\\$element-names as xs:QName*}, ${2:\\$attribute-names as xs:QName*})","trigger":"cts:element-attribute-values","description":"($element-names,$attribute-names)"},{"content":"cts:element-attribute-values(${1:\\$element-names as xs:QName*}, ${2:\\$attribute-names as xs:QName*}, ${3:\\$start as xs:anyAtomicType?})","trigger":"cts:element-attribute-values","description":"($element-names,$attribute-names,$start)"},{"content":"cts:element-attribute-values(${1:\\$element-names as xs:QName*}, ${2:\\$attribute-names as xs:QName*}, ${3:\\$start as xs:anyAtomicType?}, ${4:\\$options as xs:string*})","trigger":"cts:element-attribute-values","description":"($element-names,$attribute-names,$start,$options)"},{"content":"cts:element-attribute-values(${1:\\$element-names as xs:QName*}, ${2:\\$attribute-names as xs:QName*}, ${3:\\$start as xs:anyAtomicType?}, ${4:\\$options as xs:string*}, ${5:\\$query as cts:query?})","trigger":"cts:element-attribute-values","description":"($element-names,$attribute-names,$start,$options,$query)"},{"content":"cts:element-attribute-values(${1:\\$element-names as xs:QName*}, ${2:\\$attribute-names as xs:QName*}, ${3:\\$start as xs:anyAtomicType?}, ${4:\\$options as xs:string*}, ${5:\\$query as cts:query?}, ${6:\\$quality-weight as xs:double?})","trigger":"cts:element-attribute-values","description":"($element-names,$attribute-names,$start,$options,$query,$quality-weight)"},{"content":"cts:element-attribute-values(${1:\\$element-names as xs:QName*}, ${2:\\$attribute-names as xs:QName*}, ${3:\\$start as xs:anyAtomicType?}, ${4:\\$options as xs:string*}, ${5:\\$query as cts:query?}, ${6:\\$quality-weight as xs:double?}, ${7:\\$forest-ids as xs:unsignedLong*})","trigger":"cts:element-attribute-values","description":"($element-names,$attribute-names,$start,$options,$query,$quality-weight,$forest-ids)"},{"content":"cts:element-attribute-word-match(${1:\\$element-names as xs:QName*}, ${2:\\$attribute-names as xs:QName*}, ${3:\\$pattern as xs:string})","trigger":"cts:element-attribute-word-match","description":"($element-names,$attribute-names,$pattern)"},{"content":"cts:element-attribute-word-match(${1:\\$element-names as xs:QName*}, ${2:\\$attribute-names as xs:QName*}, ${3:\\$pattern as xs:string}, ${4:\\$options as xs:string*})","trigger":"cts:element-attribute-word-match","description":"($element-names,$attribute-names,$pattern,$options)"},{"content":"cts:element-attribute-word-match(${1:\\$element-names as xs:QName*}, ${2:\\$attribute-names as xs:QName*}, ${3:\\$pattern as xs:string}, ${4:\\$options as xs:string*}, ${5:\\$query as cts:query?})","trigger":"cts:element-attribute-word-match","description":"($element-names,$attribute-names,$pattern,$options,$query)"},{"content":"cts:element-attribute-word-match(${1:\\$element-names as xs:QName*}, ${2:\\$attribute-names as xs:QName*}, ${3:\\$pattern as xs:string}, ${4:\\$options as xs:string*}, ${5:\\$query as cts:query?}, ${6:\\$quality-weight as xs:double?})","trigger":"cts:element-attribute-word-match","description":"($element-names,$attribute-names,$pattern,$options,$query,$quality-weight)"},{"content":"cts:element-attribute-word-match(${1:\\$element-names as xs:QName*}, ${2:\\$attribute-names as xs:QName*}, ${3:\\$pattern as xs:string}, ${4:\\$options as xs:string*}, ${5:\\$query as cts:query?}, ${6:\\$quality-weight as xs:double?}, ${7:\\$forest-ids as xs:unsignedLong*})","trigger":"cts:element-attribute-word-match","description":"($element-names,$attribute-names,$pattern,$options,$query,$quality-weight,$forest-ids)"},{"content":"cts:element-attribute-word-query(${1:\\$element-name as xs:QName*}, ${2:\\$attribute-name as xs:QName*}, ${3:\\$text as xs:string*})","trigger":"cts:element-attribute-word-query","description":"($element-name,$attribute-name,$text)"},{"content":"cts:element-attribute-word-query(${1:\\$element-name as xs:QName*}, ${2:\\$attribute-name as xs:QName*}, ${3:\\$text as xs:string*}, ${4:\\$options as xs:string*})","trigger":"cts:element-attribute-word-query","description":"($element-name,$attribute-name,$text,$options)"},{"content":"cts:element-attribute-word-query(${1:\\$element-name as xs:QName*}, ${2:\\$attribute-name as xs:QName*}, ${3:\\$text as xs:string*}, ${4:\\$options as xs:string*}, ${5:\\$weight as xs:double?})","trigger":"cts:element-attribute-word-query","description":"($element-name,$attribute-name,$text,$options,$weight)"},{"content":"cts:element-attribute-word-query-attribute-name(${1:\\$query as cts:element-attribute-word-query})","trigger":"cts:element-attribute-word-query-attribute-name","description":"($query)"},{"content":"cts:element-attribute-word-query-element-name(${1:\\$query as cts:element-attribute-word-query})","trigger":"cts:element-attribute-word-query-element-name","description":"($query)"},{"content":"cts:element-attribute-word-query-options(${1:\\$query as cts:element-attribute-word-query})","trigger":"cts:element-attribute-word-query-options","description":"($query)"},{"content":"cts:element-attribute-word-query-text(${1:\\$query as cts:element-attribute-word-query})","trigger":"cts:element-attribute-word-query-text","description":"($query)"},{"content":"cts:element-attribute-word-query-weight(${1:\\$query as cts:element-attribute-word-query})","trigger":"cts:element-attribute-word-query-weight","description":"($query)"},{"content":"cts:element-attribute-words(${1:\\$element-names as xs:QName*}, ${2:\\$attribute-names as xs:QName*})","trigger":"cts:element-attribute-words","description":"($element-names,$attribute-names)"},{"content":"cts:element-attribute-words(${1:\\$element-names as xs:QName*}, ${2:\\$attribute-names as xs:QName*}, ${3:\\$start as xs:string?})","trigger":"cts:element-attribute-words","description":"($element-names,$attribute-names,$start)"},{"content":"cts:element-attribute-words(${1:\\$element-names as xs:QName*}, ${2:\\$attribute-names as xs:QName*}, ${3:\\$start as xs:string?}, ${4:\\$options as xs:string*})","trigger":"cts:element-attribute-words","description":"($element-names,$attribute-names,$start,$options)"},{"content":"cts:element-attribute-words(${1:\\$element-names as xs:QName*}, ${2:\\$attribute-names as xs:QName*}, ${3:\\$start as xs:string?}, ${4:\\$options as xs:string*}, ${5:\\$query as cts:query?})","trigger":"cts:element-attribute-words","description":"($element-names,$attribute-names,$start,$options,$query)"},{"content":"cts:element-attribute-words(${1:\\$element-names as xs:QName*}, ${2:\\$attribute-names as xs:QName*}, ${3:\\$start as xs:string?}, ${4:\\$options as xs:string*}, ${5:\\$query as cts:query?}, ${6:\\$quality-weight as xs:double?})","trigger":"cts:element-attribute-words","description":"($element-names,$attribute-names,$start,$options,$query,$quality-weight)"},{"content":"cts:element-attribute-words(${1:\\$element-names as xs:QName*}, ${2:\\$attribute-names as xs:QName*}, ${3:\\$start as xs:string?}, ${4:\\$options as xs:string*}, ${5:\\$query as cts:query?}, ${6:\\$quality-weight as xs:double?}, ${7:\\$forest-ids as xs:unsignedLong*})","trigger":"cts:element-attribute-words","description":"($element-names,$attribute-names,$start,$options,$query,$quality-weight,$forest-ids)"},{"content":"cts:element-child-geospatial-boxes(${1:\\$parent-element-names as xs:QName*}, ${2:\\$child-element-names as xs:QName*})","trigger":"cts:element-child-geospatial-boxes","description":"($parent-element-names,$child-element-names)"},{"content":"cts:element-child-geospatial-boxes(${1:\\$parent-element-names as xs:QName*}, ${2:\\$child-element-names as xs:QName*}, ${3:\\$latitude-bounds as xs:double*})","trigger":"cts:element-child-geospatial-boxes","description":"($parent-element-names,$child-element-names,$latitude-bounds)"},{"content":"cts:element-child-geospatial-boxes(${1:\\$parent-element-names as xs:QName*}, ${2:\\$child-element-names as xs:QName*}, ${3:\\$latitude-bounds as xs:double*}, ${4:\\$longitude-bounds as xs:double*})","trigger":"cts:element-child-geospatial-boxes","description":"($parent-element-names,$child-element-names,$latitude-bounds,$longitude-bounds)"},{"content":"cts:element-child-geospatial-boxes(${1:\\$parent-element-names as xs:QName*}, ${2:\\$child-element-names as xs:QName*}, ${3:\\$latitude-bounds as xs:double*}, ${4:\\$longitude-bounds as xs:double*}, ${5:\\$options as xs:string*})","trigger":"cts:element-child-geospatial-boxes","description":"($parent-element-names,$child-element-names,$latitude-bounds,$longitude-bounds,$options)"},{"content":"cts:element-child-geospatial-boxes(${1:\\$parent-element-names as xs:QName*}, ${2:\\$child-element-names as xs:QName*}, ${3:\\$latitude-bounds as xs:double*}, ${4:\\$longitude-bounds as xs:double*}, ${5:\\$options as xs:string*}, ${6:\\$query as cts:query?})","trigger":"cts:element-child-geospatial-boxes","description":"($parent-element-names,$child-element-names,$latitude-bounds,$longitude-bounds,$options,$query)"},{"content":"cts:element-child-geospatial-boxes(${1:\\$parent-element-names as xs:QName*}, ${2:\\$child-element-names as xs:QName*}, ${3:\\$latitude-bounds as xs:double*}, ${4:\\$longitude-bounds as xs:double*}, ${5:\\$options as xs:string*}, ${6:\\$query as cts:query?}, ${7:\\$quality-weight as xs:double?})","trigger":"cts:element-child-geospatial-boxes","description":"($parent-element-names,$child-element-names,$latitude-bounds,$longitude-bounds,$options,$query,$quality-weight)"},{"content":"cts:element-child-geospatial-boxes(${1:\\$parent-element-names as xs:QName*}, ${2:\\$child-element-names as xs:QName*}, ${3:\\$latitude-bounds as xs:double*}, ${4:\\$longitude-bounds as xs:double*}, ${5:\\$options as xs:string*}, ${6:\\$query as cts:query?}, ${7:\\$quality-weight as xs:double?}, ${8:\\$forest-ids as xs:unsignedLong*})","trigger":"cts:element-child-geospatial-boxes","description":"($parent-element-names,$child-element-names,$latitude-bounds,$longitude-bounds,$options,$query,$quality-weight,$forest-ids)"},{"content":"cts:element-child-geospatial-query(${1:\\$parent-element-name as xs:QName*}, ${2:\\$child-element-names as xs:QName*}, ${3:\\$regions as cts:region*})","trigger":"cts:element-child-geospatial-query","description":"($parent-element-name,$child-element-names,$regions)"},{"content":"cts:element-child-geospatial-query(${1:\\$parent-element-name as xs:QName*}, ${2:\\$child-element-names as xs:QName*}, ${3:\\$regions as cts:region*}, ${4:\\$options as xs:string*})","trigger":"cts:element-child-geospatial-query","description":"($parent-element-name,$child-element-names,$regions,$options)"},{"content":"cts:element-child-geospatial-query(${1:\\$parent-element-name as xs:QName*}, ${2:\\$child-element-names as xs:QName*}, ${3:\\$regions as cts:region*}, ${4:\\$options as xs:string*}, ${5:\\$weight as xs:double?})","trigger":"cts:element-child-geospatial-query","description":"($parent-element-name,$child-element-names,$regions,$options,$weight)"},{"content":"cts:element-child-geospatial-query-child-name(${1:\\$query as cts:element-child-geospatial-query})","trigger":"cts:element-child-geospatial-query-child-name","description":"($query)"},{"content":"cts:element-child-geospatial-query-element-name(${1:\\$query as cts:element-child-geospatial-query})","trigger":"cts:element-child-geospatial-query-element-name","description":"($query)"},{"content":"cts:element-child-geospatial-query-options(${1:\\$query as cts:element-child-geospatial-query})","trigger":"cts:element-child-geospatial-query-options","description":"($query)"},{"content":"cts:element-child-geospatial-query-region(${1:\\$query as cts:element-child-geospatial-query})","trigger":"cts:element-child-geospatial-query-region","description":"($query)"},{"content":"cts:element-child-geospatial-query-weight(${1:\\$query as cts:element-child-geospatial-query})","trigger":"cts:element-child-geospatial-query-weight","description":"($query)"},{"content":"cts:element-child-geospatial-value-match(${1:\\$element-names as xs:QName*}, ${2:\\$child-names as xs:QName*}, ${3:\\$pattern as xs:anyAtomicType})","trigger":"cts:element-child-geospatial-value-match","description":"($element-names,$child-names,$pattern)"},{"content":"cts:element-child-geospatial-value-match(${1:\\$element-names as xs:QName*}, ${2:\\$child-names as xs:QName*}, ${3:\\$pattern as xs:anyAtomicType}, ${4:\\$options as xs:string*})","trigger":"cts:element-child-geospatial-value-match","description":"($element-names,$child-names,$pattern,$options)"},{"content":"cts:element-child-geospatial-value-match(${1:\\$element-names as xs:QName*}, ${2:\\$child-names as xs:QName*}, ${3:\\$pattern as xs:anyAtomicType}, ${4:\\$options as xs:string*}, ${5:\\$query as cts:query?})","trigger":"cts:element-child-geospatial-value-match","description":"($element-names,$child-names,$pattern,$options,$query)"},{"content":"cts:element-child-geospatial-value-match(${1:\\$element-names as xs:QName*}, ${2:\\$child-names as xs:QName*}, ${3:\\$pattern as xs:anyAtomicType}, ${4:\\$options as xs:string*}, ${5:\\$query as cts:query?}, ${6:\\$quality-weight as xs:double?})","trigger":"cts:element-child-geospatial-value-match","description":"($element-names,$child-names,$pattern,$options,$query,$quality-weight)"},{"content":"cts:element-child-geospatial-value-match(${1:\\$element-names as xs:QName*}, ${2:\\$child-names as xs:QName*}, ${3:\\$pattern as xs:anyAtomicType}, ${4:\\$options as xs:string*}, ${5:\\$query as cts:query?}, ${6:\\$quality-weight as xs:double?}, ${7:\\$forest-ids as xs:unsignedLong*})","trigger":"cts:element-child-geospatial-value-match","description":"($element-names,$child-names,$pattern,$options,$query,$quality-weight,$forest-ids)"},{"content":"cts:element-child-geospatial-values(${1:\\$element-names as xs:QName*}, ${2:\\$child-names as xs:QName*})","trigger":"cts:element-child-geospatial-values","description":"($element-names,$child-names)"},{"content":"cts:element-child-geospatial-values(${1:\\$element-names as xs:QName*}, ${2:\\$child-names as xs:QName*}, ${3:\\$start as cts:point?})","trigger":"cts:element-child-geospatial-values","description":"($element-names,$child-names,$start)"},{"content":"cts:element-child-geospatial-values(${1:\\$element-names as xs:QName*}, ${2:\\$child-names as xs:QName*}, ${3:\\$start as cts:point?}, ${4:\\$options as xs:string*})","trigger":"cts:element-child-geospatial-values","description":"($element-names,$child-names,$start,$options)"},{"content":"cts:element-child-geospatial-values(${1:\\$element-names as xs:QName*}, ${2:\\$child-names as xs:QName*}, ${3:\\$start as cts:point?}, ${4:\\$options as xs:string*}, ${5:\\$query as cts:query?})","trigger":"cts:element-child-geospatial-values","description":"($element-names,$child-names,$start,$options,$query)"},{"content":"cts:element-child-geospatial-values(${1:\\$element-names as xs:QName*}, ${2:\\$child-names as xs:QName*}, ${3:\\$start as cts:point?}, ${4:\\$options as xs:string*}, ${5:\\$query as cts:query?}, ${6:\\$quality-weight as xs:double?})","trigger":"cts:element-child-geospatial-values","description":"($element-names,$child-names,$start,$options,$query,$quality-weight)"},{"content":"cts:element-child-geospatial-values(${1:\\$element-names as xs:QName*}, ${2:\\$child-names as xs:QName*}, ${3:\\$start as cts:point?}, ${4:\\$options as xs:string*}, ${5:\\$query as cts:query?}, ${6:\\$quality-weight as xs:double?}, ${7:\\$forest-ids as xs:unsignedLong*})","trigger":"cts:element-child-geospatial-values","description":"($element-names,$child-names,$start,$options,$query,$quality-weight,$forest-ids)"},{"content":"cts:element-geospatial-boxes(${1:\\$element-names as xs:QName*})","trigger":"cts:element-geospatial-boxes","description":"($element-names)"},{"content":"cts:element-geospatial-boxes(${1:\\$element-names as xs:QName*}, ${2:\\$latitude-bounds as xs:double*})","trigger":"cts:element-geospatial-boxes","description":"($element-names,$latitude-bounds)"},{"content":"cts:element-geospatial-boxes(${1:\\$element-names as xs:QName*}, ${2:\\$latitude-bounds as xs:double*}, ${3:\\$longitude-bounds as xs:double*})","trigger":"cts:element-geospatial-boxes","description":"($element-names,$latitude-bounds,$longitude-bounds)"},{"content":"cts:element-geospatial-boxes(${1:\\$element-names as xs:QName*}, ${2:\\$latitude-bounds as xs:double*}, ${3:\\$longitude-bounds as xs:double*}, ${4:\\$options as xs:string*})","trigger":"cts:element-geospatial-boxes","description":"($element-names,$latitude-bounds,$longitude-bounds,$options)"},{"content":"cts:element-geospatial-boxes(${1:\\$element-names as xs:QName*}, ${2:\\$latitude-bounds as xs:double*}, ${3:\\$longitude-bounds as xs:double*}, ${4:\\$options as xs:string*}, ${5:\\$query as cts:query?})","trigger":"cts:element-geospatial-boxes","description":"($element-names,$latitude-bounds,$longitude-bounds,$options,$query)"},{"content":"cts:element-geospatial-boxes(${1:\\$element-names as xs:QName*}, ${2:\\$latitude-bounds as xs:double*}, ${3:\\$longitude-bounds as xs:double*}, ${4:\\$options as xs:string*}, ${5:\\$query as cts:query?}, ${6:\\$quality-weight as xs:double?})","trigger":"cts:element-geospatial-boxes","description":"($element-names,$latitude-bounds,$longitude-bounds,$options,$query,$quality-weight)"},{"content":"cts:element-geospatial-boxes(${1:\\$element-names as xs:QName*}, ${2:\\$latitude-bounds as xs:double*}, ${3:\\$longitude-bounds as xs:double*}, ${4:\\$options as xs:string*}, ${5:\\$query as cts:query?}, ${6:\\$quality-weight as xs:double?}, ${7:\\$forest-ids as xs:unsignedLong*})","trigger":"cts:element-geospatial-boxes","description":"($element-names,$latitude-bounds,$longitude-bounds,$options,$query,$quality-weight,$forest-ids)"},{"content":"cts:element-geospatial-query(${1:\\$element-name as xs:QName*}, ${2:\\$regions as cts:region*})","trigger":"cts:element-geospatial-query","description":"($element-name,$regions)"},{"content":"cts:element-geospatial-query(${1:\\$element-name as xs:QName*}, ${2:\\$regions as cts:region*}, ${3:\\$options as xs:string*})","trigger":"cts:element-geospatial-query","description":"($element-name,$regions,$options)"},{"content":"cts:element-geospatial-query(${1:\\$element-name as xs:QName*}, ${2:\\$regions as cts:region*}, ${3:\\$options as xs:string*}, ${4:\\$weight as xs:double?})","trigger":"cts:element-geospatial-query","description":"($element-name,$regions,$options,$weight)"},{"content":"cts:element-geospatial-query-element-name(${1:\\$query as cts:element-geospatial-query})","trigger":"cts:element-geospatial-query-element-name","description":"($query)"},{"content":"cts:element-geospatial-query-options(${1:\\$query as cts:element-geospatial-query})","trigger":"cts:element-geospatial-query-options","description":"($query)"},{"content":"cts:element-geospatial-query-region(${1:\\$query as cts:element-geospatial-query})","trigger":"cts:element-geospatial-query-region","description":"($query)"},{"content":"cts:element-geospatial-query-weight(${1:\\$query as cts:element-geospatial-query})","trigger":"cts:element-geospatial-query-weight","description":"($query)"},{"content":"cts:element-geospatial-value-match(${1:\\$element-names as xs:QName*}, ${2:\\$pattern as xs:anyAtomicType})","trigger":"cts:element-geospatial-value-match","description":"($element-names,$pattern)"},{"content":"cts:element-geospatial-value-match(${1:\\$element-names as xs:QName*}, ${2:\\$pattern as xs:anyAtomicType}, ${3:\\$options as xs:string*})","trigger":"cts:element-geospatial-value-match","description":"($element-names,$pattern,$options)"},{"content":"cts:element-geospatial-value-match(${1:\\$element-names as xs:QName*}, ${2:\\$pattern as xs:anyAtomicType}, ${3:\\$options as xs:string*}, ${4:\\$query as cts:query?})","trigger":"cts:element-geospatial-value-match","description":"($element-names,$pattern,$options,$query)"},{"content":"cts:element-geospatial-value-match(${1:\\$element-names as xs:QName*}, ${2:\\$pattern as xs:anyAtomicType}, ${3:\\$options as xs:string*}, ${4:\\$query as cts:query?}, ${5:\\$quality-weight as xs:double?})","trigger":"cts:element-geospatial-value-match","description":"($element-names,$pattern,$options,$query,$quality-weight)"},{"content":"cts:element-geospatial-value-match(${1:\\$element-names as xs:QName*}, ${2:\\$pattern as xs:anyAtomicType}, ${3:\\$options as xs:string*}, ${4:\\$query as cts:query?}, ${5:\\$quality-weight as xs:double?}, ${6:\\$forest-ids as xs:unsignedLong*})","trigger":"cts:element-geospatial-value-match","description":"($element-names,$pattern,$options,$query,$quality-weight,$forest-ids)"},{"content":"cts:element-geospatial-values(${1:\\$element-names as xs:QName*})","trigger":"cts:element-geospatial-values","description":"($element-names)"},{"content":"cts:element-geospatial-values(${1:\\$element-names as xs:QName*}, ${2:\\$start as cts:point?})","trigger":"cts:element-geospatial-values","description":"($element-names,$start)"},{"content":"cts:element-geospatial-values(${1:\\$element-names as xs:QName*}, ${2:\\$start as cts:point?}, ${3:\\$options as xs:string*})","trigger":"cts:element-geospatial-values","description":"($element-names,$start,$options)"},{"content":"cts:element-geospatial-values(${1:\\$element-names as xs:QName*}, ${2:\\$start as cts:point?}, ${3:\\$options as xs:string*}, ${4:\\$query as cts:query?})","trigger":"cts:element-geospatial-values","description":"($element-names,$start,$options,$query)"},{"content":"cts:element-geospatial-values(${1:\\$element-names as xs:QName*}, ${2:\\$start as cts:point?}, ${3:\\$options as xs:string*}, ${4:\\$query as cts:query?}, ${5:\\$quality-weight as xs:double?})","trigger":"cts:element-geospatial-values","description":"($element-names,$start,$options,$query,$quality-weight)"},{"content":"cts:element-geospatial-values(${1:\\$element-names as xs:QName*}, ${2:\\$start as cts:point?}, ${3:\\$options as xs:string*}, ${4:\\$query as cts:query?}, ${5:\\$quality-weight as xs:double?}, ${6:\\$forest-ids as xs:unsignedLong*})","trigger":"cts:element-geospatial-values","description":"($element-names,$start,$options,$query,$quality-weight,$forest-ids)"},{"content":"cts:element-pair-geospatial-boxes(${1:\\$parent-element-names as xs:QName*}, ${2:\\$latitude-names as xs:QName*}, ${3:\\$longitude-names as xs:QName*})","trigger":"cts:element-pair-geospatial-boxes","description":"($parent-element-names,$latitude-names,$longitude-names)"},{"content":"cts:element-pair-geospatial-boxes(${1:\\$parent-element-names as xs:QName*}, ${2:\\$latitude-names as xs:QName*}, ${3:\\$longitude-names as xs:QName*}, ${4:\\$latitude-bounds as xs:double*})","trigger":"cts:element-pair-geospatial-boxes","description":"($parent-element-names,$latitude-names,$longitude-names,$latitude-bounds)"},{"content":"cts:element-pair-geospatial-boxes(${1:\\$parent-element-names as xs:QName*}, ${2:\\$latitude-names as xs:QName*}, ${3:\\$longitude-names as xs:QName*}, ${4:\\$latitude-bounds as xs:double*}, ${5:\\$longitude-bounds as xs:double*})","trigger":"cts:element-pair-geospatial-boxes","description":"($parent-element-names,$latitude-names,$longitude-names,$latitude-bounds,$longitude-bounds)"},{"content":"cts:element-pair-geospatial-boxes(${1:\\$parent-element-names as xs:QName*}, ${2:\\$latitude-names as xs:QName*}, ${3:\\$longitude-names as xs:QName*}, ${4:\\$latitude-bounds as xs:double*}, ${5:\\$longitude-bounds as xs:double*}, ${6:\\$options as xs:string*})","trigger":"cts:element-pair-geospatial-boxes","description":"($parent-element-names,$latitude-names,$longitude-names,$latitude-bounds,$longitude-bounds,$options)"},{"content":"cts:element-pair-geospatial-boxes(${1:\\$parent-element-names as xs:QName*}, ${2:\\$latitude-names as xs:QName*}, ${3:\\$longitude-names as xs:QName*}, ${4:\\$latitude-bounds as xs:double*}, ${5:\\$longitude-bounds as xs:double*}, ${6:\\$options as xs:string*}, ${7:\\$query as cts:query?})","trigger":"cts:element-pair-geospatial-boxes","description":"($parent-element-names,$latitude-names,$longitude-names,$latitude-bounds,$longitude-bounds,$options,$query)"},{"content":"cts:element-pair-geospatial-boxes(${1:\\$parent-element-names as xs:QName*}, ${2:\\$latitude-names as xs:QName*}, ${3:\\$longitude-names as xs:QName*}, ${4:\\$latitude-bounds as xs:double*}, ${5:\\$longitude-bounds as xs:double*}, ${6:\\$options as xs:string*}, ${7:\\$query as cts:query?}, ${8:\\$quality-weight as xs:double?})","trigger":"cts:element-pair-geospatial-boxes","description":"($parent-element-names,$latitude-names,$longitude-names,$latitude-bounds,$longitude-bounds,$options,$query,$quality-weight)"},{"content":"cts:element-pair-geospatial-boxes(${1:\\$parent-element-names as xs:QName*}, ${2:\\$latitude-names as xs:QName*}, ${3:\\$longitude-names as xs:QName*}, ${4:\\$latitude-bounds as xs:double*}, ${5:\\$longitude-bounds as xs:double*}, ${6:\\$options as xs:string*}, ${7:\\$query as cts:query?}, ${8:\\$quality-weight as xs:double?}, ${9:\\$forest-ids as xs:unsignedLong*})","trigger":"cts:element-pair-geospatial-boxes","description":"($parent-element-names,$latitude-names,$longitude-names,$latitude-bounds,$longitude-bounds,$options,$query,$quality-weight,$forest-ids)"},{"content":"cts:element-pair-geospatial-query(${1:\\$element-name as xs:QName*}, ${2:\\$latitude-element-names as xs:QName*}, ${3:\\$longitude-element-names as xs:QName*}, ${4:\\$regions as cts:region*})","trigger":"cts:element-pair-geospatial-query","description":"($element-name,$latitude-element-names,$longitude-element-names,$regions)"},{"content":"cts:element-pair-geospatial-query(${1:\\$element-name as xs:QName*}, ${2:\\$latitude-element-names as xs:QName*}, ${3:\\$longitude-element-names as xs:QName*}, ${4:\\$regions as cts:region*}, ${5:\\$options as xs:string*})","trigger":"cts:element-pair-geospatial-query","description":"($element-name,$latitude-element-names,$longitude-element-names,$regions,$options)"},{"content":"cts:element-pair-geospatial-query(${1:\\$element-name as xs:QName*}, ${2:\\$latitude-element-names as xs:QName*}, ${3:\\$longitude-element-names as xs:QName*}, ${4:\\$regions as cts:region*}, ${5:\\$options as xs:string*}, ${6:\\$weight as xs:double?})","trigger":"cts:element-pair-geospatial-query","description":"($element-name,$latitude-element-names,$longitude-element-names,$regions,$options,$weight)"},{"content":"cts:element-pair-geospatial-query-element-name(${1:\\$query as cts:element-pair-geospatial-query})","trigger":"cts:element-pair-geospatial-query-element-name","description":"($query)"},{"content":"cts:element-pair-geospatial-query-latitude-name(${1:\\$query as cts:element-pair-geospatial-query})","trigger":"cts:element-pair-geospatial-query-latitude-name","description":"($query)"},{"content":"cts:element-pair-geospatial-query-longitude-name(${1:\\$query as cts:element-pair-geospatial-query})","trigger":"cts:element-pair-geospatial-query-longitude-name","description":"($query)"},{"content":"cts:element-pair-geospatial-query-options(${1:\\$query as cts:element-pair-geospatial-query})","trigger":"cts:element-pair-geospatial-query-options","description":"($query)"},{"content":"cts:element-pair-geospatial-query-region(${1:\\$query as cts:element-pair-geospatial-query})","trigger":"cts:element-pair-geospatial-query-region","description":"($query)"},{"content":"cts:element-pair-geospatial-query-weight(${1:\\$query as cts:element-pair-geospatial-query})","trigger":"cts:element-pair-geospatial-query-weight","description":"($query)"},{"content":"cts:element-pair-geospatial-value-match(${1:\\$element-names as xs:QName*}, ${2:\\$latitude-names as xs:QName*}, ${3:\\$longitude-names as xs:QName*}, ${4:\\$pattern as xs:anyAtomicType})","trigger":"cts:element-pair-geospatial-value-match","description":"($element-names,$latitude-names,$longitude-names,$pattern)"},{"content":"cts:element-pair-geospatial-value-match(${1:\\$element-names as xs:QName*}, ${2:\\$latitude-names as xs:QName*}, ${3:\\$longitude-names as xs:QName*}, ${4:\\$pattern as xs:anyAtomicType}, ${5:\\$options as xs:string*})","trigger":"cts:element-pair-geospatial-value-match","description":"($element-names,$latitude-names,$longitude-names,$pattern,$options)"},{"content":"cts:element-pair-geospatial-value-match(${1:\\$element-names as xs:QName*}, ${2:\\$latitude-names as xs:QName*}, ${3:\\$longitude-names as xs:QName*}, ${4:\\$pattern as xs:anyAtomicType}, ${5:\\$options as xs:string*}, ${6:\\$query as cts:query?})","trigger":"cts:element-pair-geospatial-value-match","description":"($element-names,$latitude-names,$longitude-names,$pattern,$options,$query)"},{"content":"cts:element-pair-geospatial-value-match(${1:\\$element-names as xs:QName*}, ${2:\\$latitude-names as xs:QName*}, ${3:\\$longitude-names as xs:QName*}, ${4:\\$pattern as xs:anyAtomicType}, ${5:\\$options as xs:string*}, ${6:\\$query as cts:query?}, ${7:\\$quality-weight as xs:double?})","trigger":"cts:element-pair-geospatial-value-match","description":"($element-names,$latitude-names,$longitude-names,$pattern,$options,$query,$quality-weight)"},{"content":"cts:element-pair-geospatial-value-match(${1:\\$element-names as xs:QName*}, ${2:\\$latitude-names as xs:QName*}, ${3:\\$longitude-names as xs:QName*}, ${4:\\$pattern as xs:anyAtomicType}, ${5:\\$options as xs:string*}, ${6:\\$query as cts:query?}, ${7:\\$quality-weight as xs:double?}, ${8:\\$forest-ids as xs:unsignedLong*})","trigger":"cts:element-pair-geospatial-value-match","description":"($element-names,$latitude-names,$longitude-names,$pattern,$options,$query,$quality-weight,$forest-ids)"},{"content":"cts:element-pair-geospatial-values(${1:\\$element-names as xs:QName*}, ${2:\\$latitude-names as xs:QName*}, ${3:\\$longitude-names as xs:QName*})","trigger":"cts:element-pair-geospatial-values","description":"($element-names,$latitude-names,$longitude-names)"},{"content":"cts:element-pair-geospatial-values(${1:\\$element-names as xs:QName*}, ${2:\\$latitude-names as xs:QName*}, ${3:\\$longitude-names as xs:QName*}, ${4:\\$start as cts:point?})","trigger":"cts:element-pair-geospatial-values","description":"($element-names,$latitude-names,$longitude-names,$start)"},{"content":"cts:element-pair-geospatial-values(${1:\\$element-names as xs:QName*}, ${2:\\$latitude-names as xs:QName*}, ${3:\\$longitude-names as xs:QName*}, ${4:\\$start as cts:point?}, ${5:\\$options as xs:string*})","trigger":"cts:element-pair-geospatial-values","description":"($element-names,$latitude-names,$longitude-names,$start,$options)"},{"content":"cts:element-pair-geospatial-values(${1:\\$element-names as xs:QName*}, ${2:\\$latitude-names as xs:QName*}, ${3:\\$longitude-names as xs:QName*}, ${4:\\$start as cts:point?}, ${5:\\$options as xs:string*}, ${6:\\$query as cts:query?})","trigger":"cts:element-pair-geospatial-values","description":"($element-names,$latitude-names,$longitude-names,$start,$options,$query)"},{"content":"cts:element-pair-geospatial-values(${1:\\$element-names as xs:QName*}, ${2:\\$latitude-names as xs:QName*}, ${3:\\$longitude-names as xs:QName*}, ${4:\\$start as cts:point?}, ${5:\\$options as xs:string*}, ${6:\\$query as cts:query?}, ${7:\\$quality-weight as xs:double?})","trigger":"cts:element-pair-geospatial-values","description":"($element-names,$latitude-names,$longitude-names,$start,$options,$query,$quality-weight)"},{"content":"cts:element-pair-geospatial-values(${1:\\$element-names as xs:QName*}, ${2:\\$latitude-names as xs:QName*}, ${3:\\$longitude-names as xs:QName*}, ${4:\\$start as cts:point?}, ${5:\\$options as xs:string*}, ${6:\\$query as cts:query?}, ${7:\\$quality-weight as xs:double?}, ${8:\\$forest-ids as xs:unsignedLong*})","trigger":"cts:element-pair-geospatial-values","description":"($element-names,$latitude-names,$longitude-names,$start,$options,$query,$quality-weight,$forest-ids)"},{"content":"cts:element-query(${1:\\$element-name as xs:QName*}, ${2:\\$query as cts:query})","trigger":"cts:element-query","description":"($element-name,$query)"},{"content":"cts:element-query-element-name(${1:\\$query as cts:element-query})","trigger":"cts:element-query-element-name","description":"($query)"},{"content":"cts:element-query-query(${1:\\$query as cts:element-query})","trigger":"cts:element-query-query","description":"($query)"},{"content":"cts:element-range-query(${1:\\$element-name as xs:QName*}, ${2:\\$operator as xs:string}, ${3:\\$value as xs:anyAtomicType*})","trigger":"cts:element-range-query","description":"($element-name,$operator,$value)"},{"content":"cts:element-range-query(${1:\\$element-name as xs:QName*}, ${2:\\$operator as xs:string}, ${3:\\$value as xs:anyAtomicType*}, ${4:\\$options as xs:string*})","trigger":"cts:element-range-query","description":"($element-name,$operator,$value,$options)"},{"content":"cts:element-range-query(${1:\\$element-name as xs:QName*}, ${2:\\$operator as xs:string}, ${3:\\$value as xs:anyAtomicType*}, ${4:\\$options as xs:string*}, ${5:\\$weight as xs:double?})","trigger":"cts:element-range-query","description":"($element-name,$operator,$value,$options,$weight)"},{"content":"cts:element-range-query-element-name(${1:\\$query as cts:element-range-query})","trigger":"cts:element-range-query-element-name","description":"($query)"},{"content":"cts:element-range-query-operator(${1:\\$query as cts:element-range-query})","trigger":"cts:element-range-query-operator","description":"($query)"},{"content":"cts:element-range-query-options(${1:\\$query as cts:element-range-query})","trigger":"cts:element-range-query-options","description":"($query)"},{"content":"cts:element-range-query-value(${1:\\$query as cts:element-range-query})","trigger":"cts:element-range-query-value","description":"($query)"},{"content":"cts:element-range-query-weight(${1:\\$query as cts:element-range-query})","trigger":"cts:element-range-query-weight","description":"($query)"},{"content":"cts:element-reference(${1:\\$element as xs:QName})","trigger":"cts:element-reference","description":"($element)"},{"content":"cts:element-reference(${1:\\$element as xs:QName}, ${2:\\$options as xs:string*})","trigger":"cts:element-reference","description":"($element,$options)"},{"content":"cts:element-value-co-occurrences(${1:\\$element-name-1 as xs:QName}, ${2:\\$element-name-2 as xs:QName})","trigger":"cts:element-value-co-occurrences","description":"($element-name-1,$element-name-2)"},{"content":"cts:element-value-co-occurrences(${1:\\$element-name-1 as xs:QName}, ${2:\\$element-name-2 as xs:QName}, ${3:\\$options as xs:string*})","trigger":"cts:element-value-co-occurrences","description":"($element-name-1,$element-name-2,$options)"},{"content":"cts:element-value-co-occurrences(${1:\\$element-name-1 as xs:QName}, ${2:\\$element-name-2 as xs:QName}, ${3:\\$options as xs:string*}, ${4:\\$query as cts:query?})","trigger":"cts:element-value-co-occurrences","description":"($element-name-1,$element-name-2,$options,$query)"},{"content":"cts:element-value-co-occurrences(${1:\\$element-name-1 as xs:QName}, ${2:\\$element-name-2 as xs:QName}, ${3:\\$options as xs:string*}, ${4:\\$query as cts:query?}, ${5:\\$quality-weight as xs:double?})","trigger":"cts:element-value-co-occurrences","description":"($element-name-1,$element-name-2,$options,$query,$quality-weight)"},{"content":"cts:element-value-co-occurrences(${1:\\$element-name-1 as xs:QName}, ${2:\\$element-name-2 as xs:QName}, ${3:\\$options as xs:string*}, ${4:\\$query as cts:query?}, ${5:\\$quality-weight as xs:double?}, ${6:\\$forest-ids as xs:unsignedLong*})","trigger":"cts:element-value-co-occurrences","description":"($element-name-1,$element-name-2,$options,$query,$quality-weight,$forest-ids)"},{"content":"cts:element-value-geospatial-co-occurrences(${1:\\$element-name-1 as xs:QName}, ${2:\\$geo-element-name as xs:QName})","trigger":"cts:element-value-geospatial-co-occurrences","description":"($element-name-1,$geo-element-name)"},{"content":"cts:element-value-geospatial-co-occurrences(${1:\\$element-name-1 as xs:QName}, ${2:\\$geo-element-name as xs:QName}, ${3:\\$child-name-1 as xs:QName?})","trigger":"cts:element-value-geospatial-co-occurrences","description":"($element-name-1,$geo-element-name,$child-name-1)"},{"content":"cts:element-value-geospatial-co-occurrences(${1:\\$element-name-1 as xs:QName}, ${2:\\$geo-element-name as xs:QName}, ${3:\\$child-name-1 as xs:QName?}, ${4:\\$child-name-2 as xs:QName?})","trigger":"cts:element-value-geospatial-co-occurrences","description":"($element-name-1,$geo-element-name,$child-name-1,$child-name-2)"},{"content":"cts:element-value-geospatial-co-occurrences(${1:\\$element-name-1 as xs:QName}, ${2:\\$geo-element-name as xs:QName}, ${3:\\$child-name-1 as xs:QName?}, ${4:\\$child-name-2 as xs:QName?}, ${5:\\$options as xs:string*})","trigger":"cts:element-value-geospatial-co-occurrences","description":"($element-name-1,$geo-element-name,$child-name-1,$child-name-2,$options)"},{"content":"cts:element-value-geospatial-co-occurrences(${1:\\$element-name-1 as xs:QName}, ${2:\\$geo-element-name as xs:QName}, ${3:\\$child-name-1 as xs:QName?}, ${4:\\$child-name-2 as xs:QName?}, ${5:\\$options as xs:string*}, ${6:\\$query as cts:query?})","trigger":"cts:element-value-geospatial-co-occurrences","description":"($element-name-1,$geo-element-name,$child-name-1,$child-name-2,$options,$query)"},{"content":"cts:element-value-geospatial-co-occurrences(${1:\\$element-name-1 as xs:QName}, ${2:\\$geo-element-name as xs:QName}, ${3:\\$child-name-1 as xs:QName?}, ${4:\\$child-name-2 as xs:QName?}, ${5:\\$options as xs:string*}, ${6:\\$query as cts:query?}, ${7:\\$quality-weight as xs:double?})","trigger":"cts:element-value-geospatial-co-occurrences","description":"($element-name-1,$geo-element-name,$child-name-1,$child-name-2,$options,$query,$quality-weight)"},{"content":"cts:element-value-geospatial-co-occurrences(${1:\\$element-name-1 as xs:QName}, ${2:\\$geo-element-name as xs:QName}, ${3:\\$child-name-1 as xs:QName?}, ${4:\\$child-name-2 as xs:QName?}, ${5:\\$options as xs:string*}, ${6:\\$query as cts:query?}, ${7:\\$quality-weight as xs:double?}, ${8:\\$forest-ids as xs:unsignedLong*})","trigger":"cts:element-value-geospatial-co-occurrences","description":"($element-name-1,$geo-element-name,$child-name-1,$child-name-2,$options,$query,$quality-weight,$forest-ids)"},{"content":"cts:element-value-match(${1:\\$element-names as xs:QName*}, ${2:\\$pattern as xs:anyAtomicType})","trigger":"cts:element-value-match","description":"($element-names,$pattern)"},{"content":"cts:element-value-match(${1:\\$element-names as xs:QName*}, ${2:\\$pattern as xs:anyAtomicType}, ${3:\\$options as xs:string*})","trigger":"cts:element-value-match","description":"($element-names,$pattern,$options)"},{"content":"cts:element-value-match(${1:\\$element-names as xs:QName*}, ${2:\\$pattern as xs:anyAtomicType}, ${3:\\$options as xs:string*}, ${4:\\$query as cts:query?})","trigger":"cts:element-value-match","description":"($element-names,$pattern,$options,$query)"},{"content":"cts:element-value-match(${1:\\$element-names as xs:QName*}, ${2:\\$pattern as xs:anyAtomicType}, ${3:\\$options as xs:string*}, ${4:\\$query as cts:query?}, ${5:\\$quality-weight as xs:double?})","trigger":"cts:element-value-match","description":"($element-names,$pattern,$options,$query,$quality-weight)"},{"content":"cts:element-value-match(${1:\\$element-names as xs:QName*}, ${2:\\$pattern as xs:anyAtomicType}, ${3:\\$options as xs:string*}, ${4:\\$query as cts:query?}, ${5:\\$quality-weight as xs:double?}, ${6:\\$forest-ids as xs:unsignedLong*})","trigger":"cts:element-value-match","description":"($element-names,$pattern,$options,$query,$quality-weight,$forest-ids)"},{"content":"cts:element-value-query(${1:\\$element-name as xs:QName*}, ${2:\\$text as xs:string*})","trigger":"cts:element-value-query","description":"($element-name,$text)"},{"content":"cts:element-value-query(${1:\\$element-name as xs:QName*}, ${2:\\$text as xs:string*}, ${3:\\$options as xs:string*})","trigger":"cts:element-value-query","description":"($element-name,$text,$options)"},{"content":"cts:element-value-query(${1:\\$element-name as xs:QName*}, ${2:\\$text as xs:string*}, ${3:\\$options as xs:string*}, ${4:\\$weight as xs:double?})","trigger":"cts:element-value-query","description":"($element-name,$text,$options,$weight)"},{"content":"cts:element-value-query-element-name(${1:\\$query as cts:element-value-query})","trigger":"cts:element-value-query-element-name","description":"($query)"},{"content":"cts:element-value-query-options(${1:\\$query as cts:element-value-query})","trigger":"cts:element-value-query-options","description":"($query)"},{"content":"cts:element-value-query-text(${1:\\$query as cts:element-value-query})","trigger":"cts:element-value-query-text","description":"($query)"},{"content":"cts:element-value-query-weight(${1:\\$query as cts:element-value-query})","trigger":"cts:element-value-query-weight","description":"($query)"},{"content":"cts:element-value-ranges(${1:\\$element-names as xs:QName*})","trigger":"cts:element-value-ranges","description":"($element-names)"},{"content":"cts:element-value-ranges(${1:\\$element-names as xs:QName*}, ${2:\\$bounds as xs:anyAtomicType*})","trigger":"cts:element-value-ranges","description":"($element-names,$bounds)"},{"content":"cts:element-value-ranges(${1:\\$element-names as xs:QName*}, ${2:\\$bounds as xs:anyAtomicType*}, ${3:\\$options as xs:string*})","trigger":"cts:element-value-ranges","description":"($element-names,$bounds,$options)"},{"content":"cts:element-value-ranges(${1:\\$element-names as xs:QName*}, ${2:\\$bounds as xs:anyAtomicType*}, ${3:\\$options as xs:string*}, ${4:\\$query as cts:query?})","trigger":"cts:element-value-ranges","description":"($element-names,$bounds,$options,$query)"},{"content":"cts:element-value-ranges(${1:\\$element-names as xs:QName*}, ${2:\\$bounds as xs:anyAtomicType*}, ${3:\\$options as xs:string*}, ${4:\\$query as cts:query?}, ${5:\\$quality-weight as xs:double?})","trigger":"cts:element-value-ranges","description":"($element-names,$bounds,$options,$query,$quality-weight)"},{"content":"cts:element-value-ranges(${1:\\$element-names as xs:QName*}, ${2:\\$bounds as xs:anyAtomicType*}, ${3:\\$options as xs:string*}, ${4:\\$query as cts:query?}, ${5:\\$quality-weight as xs:double?}, ${6:\\$forest-ids as xs:unsignedLong*})","trigger":"cts:element-value-ranges","description":"($element-names,$bounds,$options,$query,$quality-weight,$forest-ids)"},{"content":"cts:element-values(${1:\\$element-names as xs:QName*})","trigger":"cts:element-values","description":"($element-names)"},{"content":"cts:element-values(${1:\\$element-names as xs:QName*}, ${2:\\$start as xs:anyAtomicType?})","trigger":"cts:element-values","description":"($element-names,$start)"},{"content":"cts:element-values(${1:\\$element-names as xs:QName*}, ${2:\\$start as xs:anyAtomicType?}, ${3:\\$options as xs:string*})","trigger":"cts:element-values","description":"($element-names,$start,$options)"},{"content":"cts:element-values(${1:\\$element-names as xs:QName*}, ${2:\\$start as xs:anyAtomicType?}, ${3:\\$options as xs:string*}, ${4:\\$query as cts:query?})","trigger":"cts:element-values","description":"($element-names,$start,$options,$query)"},{"content":"cts:element-values(${1:\\$element-names as xs:QName*}, ${2:\\$start as xs:anyAtomicType?}, ${3:\\$options as xs:string*}, ${4:\\$query as cts:query?}, ${5:\\$quality-weight as xs:double?})","trigger":"cts:element-values","description":"($element-names,$start,$options,$query,$quality-weight)"},{"content":"cts:element-values(${1:\\$element-names as xs:QName*}, ${2:\\$start as xs:anyAtomicType?}, ${3:\\$options as xs:string*}, ${4:\\$query as cts:query?}, ${5:\\$quality-weight as xs:double?}, ${6:\\$forest-ids as xs:unsignedLong*})","trigger":"cts:element-values","description":"($element-names,$start,$options,$query,$quality-weight,$forest-ids)"},{"content":"cts:element-walk(${1:\\$node as node()}, ${2:\\$element as xs:QName*}, ${3:\\$expr as item()*})","trigger":"cts:element-walk","description":"($node,$element,$expr)"},{"content":"cts:element-word-match(${1:\\$element-names as xs:QName*}, ${2:\\$pattern as xs:string?})","trigger":"cts:element-word-match","description":"($element-names,$pattern)"},{"content":"cts:element-word-match(${1:\\$element-names as xs:QName*}, ${2:\\$pattern as xs:string?}, ${3:\\$options as xs:string*})","trigger":"cts:element-word-match","description":"($element-names,$pattern,$options)"},{"content":"cts:element-word-match(${1:\\$element-names as xs:QName*}, ${2:\\$pattern as xs:string?}, ${3:\\$options as xs:string*}, ${4:\\$query as cts:query?})","trigger":"cts:element-word-match","description":"($element-names,$pattern,$options,$query)"},{"content":"cts:element-word-match(${1:\\$element-names as xs:QName*}, ${2:\\$pattern as xs:string?}, ${3:\\$options as xs:string*}, ${4:\\$query as cts:query?}, ${5:\\$quality-weight as xs:double?})","trigger":"cts:element-word-match","description":"($element-names,$pattern,$options,$query,$quality-weight)"},{"content":"cts:element-word-match(${1:\\$element-names as xs:QName*}, ${2:\\$pattern as xs:string?}, ${3:\\$options as xs:string*}, ${4:\\$query as cts:query?}, ${5:\\$quality-weight as xs:double?}, ${6:\\$forest-ids as xs:unsignedLong*})","trigger":"cts:element-word-match","description":"($element-names,$pattern,$options,$query,$quality-weight,$forest-ids)"},{"content":"cts:element-word-query(${1:\\$element-name as xs:QName*}, ${2:\\$text as xs:string*})","trigger":"cts:element-word-query","description":"($element-name,$text)"},{"content":"cts:element-word-query(${1:\\$element-name as xs:QName*}, ${2:\\$text as xs:string*}, ${3:\\$options as xs:string*})","trigger":"cts:element-word-query","description":"($element-name,$text,$options)"},{"content":"cts:element-word-query(${1:\\$element-name as xs:QName*}, ${2:\\$text as xs:string*}, ${3:\\$options as xs:string*}, ${4:\\$weight as xs:double?})","trigger":"cts:element-word-query","description":"($element-name,$text,$options,$weight)"},{"content":"cts:element-word-query-element-name(${1:\\$query as cts:element-word-query})","trigger":"cts:element-word-query-element-name","description":"($query)"},{"content":"cts:element-word-query-options(${1:\\$query as cts:element-word-query})","trigger":"cts:element-word-query-options","description":"($query)"},{"content":"cts:element-word-query-text(${1:\\$query as cts:element-word-query})","trigger":"cts:element-word-query-text","description":"($query)"},{"content":"cts:element-word-query-weight(${1:\\$query as cts:element-word-query})","trigger":"cts:element-word-query-weight","description":"($query)"},{"content":"cts:element-words(${1:\\$element-names as xs:QName*})","trigger":"cts:element-words","description":"($element-names)"},{"content":"cts:element-words(${1:\\$element-names as xs:QName*}, ${2:\\$start as xs:string?})","trigger":"cts:element-words","description":"($element-names,$start)"},{"content":"cts:element-words(${1:\\$element-names as xs:QName*}, ${2:\\$start as xs:string?}, ${3:\\$options as xs:string*})","trigger":"cts:element-words","description":"($element-names,$start,$options)"},{"content":"cts:element-words(${1:\\$element-names as xs:QName*}, ${2:\\$start as xs:string?}, ${3:\\$options as xs:string*}, ${4:\\$query as cts:query?})","trigger":"cts:element-words","description":"($element-names,$start,$options,$query)"},{"content":"cts:element-words(${1:\\$element-names as xs:QName*}, ${2:\\$start as xs:string?}, ${3:\\$options as xs:string*}, ${4:\\$query as cts:query?}, ${5:\\$quality-weight as xs:double?})","trigger":"cts:element-words","description":"($element-names,$start,$options,$query,$quality-weight)"},{"content":"cts:element-words(${1:\\$element-names as xs:QName*}, ${2:\\$start as xs:string?}, ${3:\\$options as xs:string*}, ${4:\\$query as cts:query?}, ${5:\\$quality-weight as xs:double?}, ${6:\\$forest-ids as xs:unsignedLong*})","trigger":"cts:element-words","description":"($element-names,$start,$options,$query,$quality-weight,$forest-ids)"},{"content":"cts:field-range-query(${1:\\$field-name as xs:string*}, ${2:\\$operator as xs:string}, ${3:\\$value as xs:anyAtomicType*})","trigger":"cts:field-range-query","description":"($field-name,$operator,$value)"},{"content":"cts:field-range-query(${1:\\$field-name as xs:string*}, ${2:\\$operator as xs:string}, ${3:\\$value as xs:anyAtomicType*}, ${4:\\$options as xs:string*})","trigger":"cts:field-range-query","description":"($field-name,$operator,$value,$options)"},{"content":"cts:field-range-query(${1:\\$field-name as xs:string*}, ${2:\\$operator as xs:string}, ${3:\\$value as xs:anyAtomicType*}, ${4:\\$options as xs:string*}, ${5:\\$weight as xs:double?})","trigger":"cts:field-range-query","description":"($field-name,$operator,$value,$options,$weight)"},{"content":"cts:field-range-query-field-name(${1:\\$query as cts:field-range-query})","trigger":"cts:field-range-query-field-name","description":"($query)"},{"content":"cts:field-range-query-operator(${1:\\$query as cts:field-range-query})","trigger":"cts:field-range-query-operator","description":"($query)"},{"content":"cts:field-range-query-options(${1:\\$query as cts:field-range-query})","trigger":"cts:field-range-query-options","description":"($query)"},{"content":"cts:field-range-query-value(${1:\\$query as cts:field-range-query})","trigger":"cts:field-range-query-value","description":"($query)"},{"content":"cts:field-range-query-weight(${1:\\$query as cts:field-range-query})","trigger":"cts:field-range-query-weight","description":"($query)"},{"content":"cts:field-reference(${1:\\$field as xs:string})","trigger":"cts:field-reference","description":"($field)"},{"content":"cts:field-reference(${1:\\$field as xs:string}, ${2:\\$options as xs:string*})","trigger":"cts:field-reference","description":"($field,$options)"},{"content":"cts:field-value-co-occurrences(${1:\\$field-name-1 as xs:string}, ${2:\\$field-name-2 as xs:string})","trigger":"cts:field-value-co-occurrences","description":"($field-name-1,$field-name-2)"},{"content":"cts:field-value-co-occurrences(${1:\\$field-name-1 as xs:string}, ${2:\\$field-name-2 as xs:string}, ${3:\\$options as xs:string*})","trigger":"cts:field-value-co-occurrences","description":"($field-name-1,$field-name-2,$options)"},{"content":"cts:field-value-co-occurrences(${1:\\$field-name-1 as xs:string}, ${2:\\$field-name-2 as xs:string}, ${3:\\$options as xs:string*}, ${4:\\$query as cts:query?})","trigger":"cts:field-value-co-occurrences","description":"($field-name-1,$field-name-2,$options,$query)"},{"content":"cts:field-value-co-occurrences(${1:\\$field-name-1 as xs:string}, ${2:\\$field-name-2 as xs:string}, ${3:\\$options as xs:string*}, ${4:\\$query as cts:query?}, ${5:\\$quality-weight as xs:double?})","trigger":"cts:field-value-co-occurrences","description":"($field-name-1,$field-name-2,$options,$query,$quality-weight)"},{"content":"cts:field-value-co-occurrences(${1:\\$field-name-1 as xs:string}, ${2:\\$field-name-2 as xs:string}, ${3:\\$options as xs:string*}, ${4:\\$query as cts:query?}, ${5:\\$quality-weight as xs:double?}, ${6:\\$forest-ids as xs:unsignedLong*})","trigger":"cts:field-value-co-occurrences","description":"($field-name-1,$field-name-2,$options,$query,$quality-weight,$forest-ids)"},{"content":"cts:field-value-match(${1:\\$field-names as xs:string*}, ${2:\\$pattern as xs:anyAtomicType})","trigger":"cts:field-value-match","description":"($field-names,$pattern)"},{"content":"cts:field-value-match(${1:\\$field-names as xs:string*}, ${2:\\$pattern as xs:anyAtomicType}, ${3:\\$options as xs:string*})","trigger":"cts:field-value-match","description":"($field-names,$pattern,$options)"},{"content":"cts:field-value-match(${1:\\$field-names as xs:string*}, ${2:\\$pattern as xs:anyAtomicType}, ${3:\\$options as xs:string*}, ${4:\\$query as cts:query?})","trigger":"cts:field-value-match","description":"($field-names,$pattern,$options,$query)"},{"content":"cts:field-value-match(${1:\\$field-names as xs:string*}, ${2:\\$pattern as xs:anyAtomicType}, ${3:\\$options as xs:string*}, ${4:\\$query as cts:query?}, ${5:\\$quality-weight as xs:double?})","trigger":"cts:field-value-match","description":"($field-names,$pattern,$options,$query,$quality-weight)"},{"content":"cts:field-value-match(${1:\\$field-names as xs:string*}, ${2:\\$pattern as xs:anyAtomicType}, ${3:\\$options as xs:string*}, ${4:\\$query as cts:query?}, ${5:\\$quality-weight as xs:double?}, ${6:\\$forest-ids as xs:unsignedLong*})","trigger":"cts:field-value-match","description":"($field-names,$pattern,$options,$query,$quality-weight,$forest-ids)"},{"content":"cts:field-value-query(${1:\\$field-name as xs:string*}, ${2:\\$text as xs:anyAtomicType*})","trigger":"cts:field-value-query","description":"($field-name,$text)"},{"content":"cts:field-value-query(${1:\\$field-name as xs:string*}, ${2:\\$text as xs:anyAtomicType*}, ${3:\\$options as xs:string*})","trigger":"cts:field-value-query","description":"($field-name,$text,$options)"},{"content":"cts:field-value-query(${1:\\$field-name as xs:string*}, ${2:\\$text as xs:anyAtomicType*}, ${3:\\$options as xs:string*}, ${4:\\$weight as xs:double?})","trigger":"cts:field-value-query","description":"($field-name,$text,$options,$weight)"},{"content":"cts:field-value-query-field-name(${1:\\$query as cts:field-value-query})","trigger":"cts:field-value-query-field-name","description":"($query)"},{"content":"cts:field-value-query-options(${1:\\$query as cts:field-value-query})","trigger":"cts:field-value-query-options","description":"($query)"},{"content":"cts:field-value-query-text(${1:\\$query as cts:field-value-query})","trigger":"cts:field-value-query-text","description":"($query)"},{"content":"cts:field-value-query-weight(${1:\\$query as cts:field-value-query})","trigger":"cts:field-value-query-weight","description":"($query)"},{"content":"cts:field-value-ranges(${1:\\$field-names as xs:string*})","trigger":"cts:field-value-ranges","description":"($field-names)"},{"content":"cts:field-value-ranges(${1:\\$field-names as xs:string*}, ${2:\\$bounds as xs:anyAtomicType*})","trigger":"cts:field-value-ranges","description":"($field-names,$bounds)"},{"content":"cts:field-value-ranges(${1:\\$field-names as xs:string*}, ${2:\\$bounds as xs:anyAtomicType*}, ${3:\\$options as xs:string*})","trigger":"cts:field-value-ranges","description":"($field-names,$bounds,$options)"},{"content":"cts:field-value-ranges(${1:\\$field-names as xs:string*}, ${2:\\$bounds as xs:anyAtomicType*}, ${3:\\$options as xs:string*}, ${4:\\$query as cts:query?})","trigger":"cts:field-value-ranges","description":"($field-names,$bounds,$options,$query)"},{"content":"cts:field-value-ranges(${1:\\$field-names as xs:string*}, ${2:\\$bounds as xs:anyAtomicType*}, ${3:\\$options as xs:string*}, ${4:\\$query as cts:query?}, ${5:\\$quality-weight as xs:double?})","trigger":"cts:field-value-ranges","description":"($field-names,$bounds,$options,$query,$quality-weight)"},{"content":"cts:field-value-ranges(${1:\\$field-names as xs:string*}, ${2:\\$bounds as xs:anyAtomicType*}, ${3:\\$options as xs:string*}, ${4:\\$query as cts:query?}, ${5:\\$quality-weight as xs:double?}, ${6:\\$forest-ids as xs:unsignedLong*})","trigger":"cts:field-value-ranges","description":"($field-names,$bounds,$options,$query,$quality-weight,$forest-ids)"},{"content":"cts:field-values(${1:\\$field-names as xs:string*})","trigger":"cts:field-values","description":"($field-names)"},{"content":"cts:field-values(${1:\\$field-names as xs:string*}, ${2:\\$start as xs:anyAtomicType?})","trigger":"cts:field-values","description":"($field-names,$start)"},{"content":"cts:field-values(${1:\\$field-names as xs:string*}, ${2:\\$start as xs:anyAtomicType?}, ${3:\\$options as xs:string*})","trigger":"cts:field-values","description":"($field-names,$start,$options)"},{"content":"cts:field-values(${1:\\$field-names as xs:string*}, ${2:\\$start as xs:anyAtomicType?}, ${3:\\$options as xs:string*}, ${4:\\$query as cts:query?})","trigger":"cts:field-values","description":"($field-names,$start,$options,$query)"},{"content":"cts:field-values(${1:\\$field-names as xs:string*}, ${2:\\$start as xs:anyAtomicType?}, ${3:\\$options as xs:string*}, ${4:\\$query as cts:query?}, ${5:\\$quality-weight as xs:double?})","trigger":"cts:field-values","description":"($field-names,$start,$options,$query,$quality-weight)"},{"content":"cts:field-values(${1:\\$field-names as xs:string*}, ${2:\\$start as xs:anyAtomicType?}, ${3:\\$options as xs:string*}, ${4:\\$query as cts:query?}, ${5:\\$quality-weight as xs:double?}, ${6:\\$forest-ids as xs:unsignedLong*})","trigger":"cts:field-values","description":"($field-names,$start,$options,$query,$quality-weight,$forest-ids)"},{"content":"cts:field-word-match(${1:\\$field-names as xs:string*}, ${2:\\$pattern as xs:string})","trigger":"cts:field-word-match","description":"($field-names,$pattern)"},{"content":"cts:field-word-match(${1:\\$field-names as xs:string*}, ${2:\\$pattern as xs:string}, ${3:\\$options as xs:string*})","trigger":"cts:field-word-match","description":"($field-names,$pattern,$options)"},{"content":"cts:field-word-match(${1:\\$field-names as xs:string*}, ${2:\\$pattern as xs:string}, ${3:\\$options as xs:string*}, ${4:\\$query as cts:query?})","trigger":"cts:field-word-match","description":"($field-names,$pattern,$options,$query)"},{"content":"cts:field-word-match(${1:\\$field-names as xs:string*}, ${2:\\$pattern as xs:string}, ${3:\\$options as xs:string*}, ${4:\\$query as cts:query?}, ${5:\\$quality-weight as xs:double?})","trigger":"cts:field-word-match","description":"($field-names,$pattern,$options,$query,$quality-weight)"},{"content":"cts:field-word-match(${1:\\$field-names as xs:string*}, ${2:\\$pattern as xs:string}, ${3:\\$options as xs:string*}, ${4:\\$query as cts:query?}, ${5:\\$quality-weight as xs:double?}, ${6:\\$forest-ids as xs:unsignedLong*})","trigger":"cts:field-word-match","description":"($field-names,$pattern,$options,$query,$quality-weight,$forest-ids)"},{"content":"cts:field-word-query(${1:\\$field-name as xs:string*}, ${2:\\$text as xs:string*})","trigger":"cts:field-word-query","description":"($field-name,$text)"},{"content":"cts:field-word-query(${1:\\$field-name as xs:string*}, ${2:\\$text as xs:string*}, ${3:\\$options as xs:string*})","trigger":"cts:field-word-query","description":"($field-name,$text,$options)"},{"content":"cts:field-word-query(${1:\\$field-name as xs:string*}, ${2:\\$text as xs:string*}, ${3:\\$options as xs:string*}, ${4:\\$weight as xs:double?})","trigger":"cts:field-word-query","description":"($field-name,$text,$options,$weight)"},{"content":"cts:field-word-query-field-name(${1:\\$query as cts:field-word-query})","trigger":"cts:field-word-query-field-name","description":"($query)"},{"content":"cts:field-word-query-options(${1:\\$query as cts:field-word-query})","trigger":"cts:field-word-query-options","description":"($query)"},{"content":"cts:field-word-query-text(${1:\\$query as cts:field-word-query})","trigger":"cts:field-word-query-text","description":"($query)"},{"content":"cts:field-word-query-weight(${1:\\$query as cts:field-word-query})","trigger":"cts:field-word-query-weight","description":"($query)"},{"content":"cts:field-words(${1:\\$field-names as xs:string*})","trigger":"cts:field-words","description":"($field-names)"},{"content":"cts:field-words(${1:\\$field-names as xs:string*}, ${2:\\$start as xs:string?})","trigger":"cts:field-words","description":"($field-names,$start)"},{"content":"cts:field-words(${1:\\$field-names as xs:string*}, ${2:\\$start as xs:string?}, ${3:\\$options as xs:string*})","trigger":"cts:field-words","description":"($field-names,$start,$options)"},{"content":"cts:field-words(${1:\\$field-names as xs:string*}, ${2:\\$start as xs:string?}, ${3:\\$options as xs:string*}, ${4:\\$query as cts:query?})","trigger":"cts:field-words","description":"($field-names,$start,$options,$query)"},{"content":"cts:field-words(${1:\\$field-names as xs:string*}, ${2:\\$start as xs:string?}, ${3:\\$options as xs:string*}, ${4:\\$query as cts:query?}, ${5:\\$quality-weight as xs:double?})","trigger":"cts:field-words","description":"($field-names,$start,$options,$query,$quality-weight)"},{"content":"cts:field-words(${1:\\$field-names as xs:string*}, ${2:\\$start as xs:string?}, ${3:\\$options as xs:string*}, ${4:\\$query as cts:query?}, ${5:\\$quality-weight as xs:double?}, ${6:\\$forest-ids as xs:unsignedLong*})","trigger":"cts:field-words","description":"($field-names,$start,$options,$query,$quality-weight,$forest-ids)"},{"content":"cts:fitness(${1:\\$node as node()})","trigger":"cts:fitness","description":"($node)"},{"content":"cts:fitness()","trigger":"cts:fitness"},{"content":"cts:fitness-order(${1:\\$options as xs:string*})","trigger":"cts:fitness-order","description":"($options)"},{"content":"cts:fitness-order()","trigger":"cts:fitness-order"},{"content":"cts:frequency(${1:\\$value as item()})","trigger":"cts:frequency","description":"($value)"},{"content":"cts:geospatial-attribute-pair-reference(${1:\\$element as xs:QName}, ${2:\\$lat as xs:QName}, ${3:\\$long as xs:QName})","trigger":"cts:geospatial-attribute-pair-reference","description":"($element,$lat,$long)"},{"content":"cts:geospatial-attribute-pair-reference(${1:\\$element as xs:QName}, ${2:\\$lat as xs:QName}, ${3:\\$long as xs:QName}, ${4:\\$options as xs:string*})","trigger":"cts:geospatial-attribute-pair-reference","description":"($element,$lat,$long,$options)"},{"content":"cts:geospatial-boxes(${1:\\$geo-indexes as cts:reference*})","trigger":"cts:geospatial-boxes","description":"($geo-indexes)"},{"content":"cts:geospatial-boxes(${1:\\$geo-indexes as cts:reference*}, ${2:\\$latitude-bounds as xs:double*})","trigger":"cts:geospatial-boxes","description":"($geo-indexes,$latitude-bounds)"},{"content":"cts:geospatial-boxes(${1:\\$geo-indexes as cts:reference*}, ${2:\\$latitude-bounds as xs:double*}, ${3:\\$longitude-bounds as xs:double*})","trigger":"cts:geospatial-boxes","description":"($geo-indexes,$latitude-bounds,$longitude-bounds)"},{"content":"cts:geospatial-boxes(${1:\\$geo-indexes as cts:reference*}, ${2:\\$latitude-bounds as xs:double*}, ${3:\\$longitude-bounds as xs:double*}, ${4:\\$options as xs:string*})","trigger":"cts:geospatial-boxes","description":"($geo-indexes,$latitude-bounds,$longitude-bounds,$options)"},{"content":"cts:geospatial-boxes(${1:\\$geo-indexes as cts:reference*}, ${2:\\$latitude-bounds as xs:double*}, ${3:\\$longitude-bounds as xs:double*}, ${4:\\$options as xs:string*}, ${5:\\$query as cts:query?})","trigger":"cts:geospatial-boxes","description":"($geo-indexes,$latitude-bounds,$longitude-bounds,$options,$query)"},{"content":"cts:geospatial-boxes(${1:\\$geo-indexes as cts:reference*}, ${2:\\$latitude-bounds as xs:double*}, ${3:\\$longitude-bounds as xs:double*}, ${4:\\$options as xs:string*}, ${5:\\$query as cts:query?}, ${6:\\$quality-weight as xs:double?})","trigger":"cts:geospatial-boxes","description":"($geo-indexes,$latitude-bounds,$longitude-bounds,$options,$query,$quality-weight)"},{"content":"cts:geospatial-boxes(${1:\\$geo-indexes as cts:reference*}, ${2:\\$latitude-bounds as xs:double*}, ${3:\\$longitude-bounds as xs:double*}, ${4:\\$options as xs:string*}, ${5:\\$query as cts:query?}, ${6:\\$quality-weight as xs:double?}, ${7:\\$forest-ids as xs:unsignedLong*})","trigger":"cts:geospatial-boxes","description":"($geo-indexes,$latitude-bounds,$longitude-bounds,$options,$query,$quality-weight,$forest-ids)"},{"content":"cts:geospatial-co-occurrences(${1:\\$geo-element-name-1 as xs:QName}, ${2:\\$child-1-name-1 as xs:QName?}, ${3:\\$child-1-name-2 as xs:QName?}, ${4:\\$geo-element-name-2 as xs:QName})","trigger":"cts:geospatial-co-occurrences","description":"($geo-element-name-1,$child-1-name-1,$child-1-name-2,$geo-element-name-2)"},{"content":"cts:geospatial-co-occurrences(${1:\\$geo-element-name-1 as xs:QName}, ${2:\\$child-1-name-1 as xs:QName?}, ${3:\\$child-1-name-2 as xs:QName?}, ${4:\\$geo-element-name-2 as xs:QName}, ${5:\\$child-2-name-1 as xs:QName?})","trigger":"cts:geospatial-co-occurrences","description":"($geo-element-name-1,$child-1-name-1,$child-1-name-2,$geo-element-name-2,$child-2-name-1)"},{"content":"cts:geospatial-co-occurrences(${1:\\$geo-element-name-1 as xs:QName}, ${2:\\$child-1-name-1 as xs:QName?}, ${3:\\$child-1-name-2 as xs:QName?}, ${4:\\$geo-element-name-2 as xs:QName}, ${5:\\$child-2-name-1 as xs:QName?}, ${6:\\$child-2-name-2 as xs:QName?})","trigger":"cts:geospatial-co-occurrences","description":"($geo-element-name-1,$child-1-name-1,$child-1-name-2,$geo-element-name-2,$child-2-name-1,$child-2-name-2)"},{"content":"cts:geospatial-co-occurrences(${1:\\$geo-element-name-1 as xs:QName}, ${2:\\$child-1-name-1 as xs:QName?}, ${3:\\$child-1-name-2 as xs:QName?}, ${4:\\$geo-element-name-2 as xs:QName}, ${5:\\$child-2-name-1 as xs:QName?}, ${6:\\$child-2-name-2 as xs:QName?}, ${7:\\$options as xs:string*})","trigger":"cts:geospatial-co-occurrences","description":"($geo-element-name-1,$child-1-name-1,$child-1-name-2,$geo-element-name-2,$child-2-name-1,$child-2-name-2,$options)"},{"content":"cts:geospatial-co-occurrences(${1:\\$geo-element-name-1 as xs:QName}, ${2:\\$child-1-name-1 as xs:QName?}, ${3:\\$child-1-name-2 as xs:QName?}, ${4:\\$geo-element-name-2 as xs:QName}, ${5:\\$child-2-name-1 as xs:QName?}, ${6:\\$child-2-name-2 as xs:QName?}, ${7:\\$options as xs:string*}, ${8:\\$query as cts:query?})","trigger":"cts:geospatial-co-occurrences","description":"($geo-element-name-1,$child-1-name-1,$child-1-name-2,$geo-element-name-2,$child-2-name-1,$child-2-name-2,$options,$query)"},{"content":"cts:geospatial-co-occurrences(${1:\\$geo-element-name-1 as xs:QName}, ${2:\\$child-1-name-1 as xs:QName?}, ${3:\\$child-1-name-2 as xs:QName?}, ${4:\\$geo-element-name-2 as xs:QName}, ${5:\\$child-2-name-1 as xs:QName?}, ${6:\\$child-2-name-2 as xs:QName?}, ${7:\\$options as xs:string*}, ${8:\\$query as cts:query?}, ${9:\\$quality-weight as xs:double?})","trigger":"cts:geospatial-co-occurrences","description":"($geo-element-name-1,$child-1-name-1,$child-1-name-2,$geo-element-name-2,$child-2-name-1,$child-2-name-2,$options,$query,$quality-weight)"},{"content":"cts:geospatial-co-occurrences(${1:\\$geo-element-name-1 as xs:QName}, ${2:\\$child-1-name-1 as xs:QName?}, ${3:\\$child-1-name-2 as xs:QName?}, ${4:\\$geo-element-name-2 as xs:QName}, ${5:\\$child-2-name-1 as xs:QName?}, ${6:\\$child-2-name-2 as xs:QName?}, ${7:\\$options as xs:string*}, ${8:\\$query as cts:query?}, ${9:\\$quality-weight as xs:double?}, ${10:\\$forest-ids as xs:unsignedLong*})","trigger":"cts:geospatial-co-occurrences","description":"($geo-element-name-1,$child-1-name-1,$child-1-name-2,$geo-element-name-2,$child-2-name-1,$child-2-name-2,$options,$query,$quality-weight,$forest-ids)"},{"content":"cts:geospatial-element-child-reference(${1:\\$element as xs:QName}, ${2:\\$child as xs:QName})","trigger":"cts:geospatial-element-child-reference","description":"($element,$child)"},{"content":"cts:geospatial-element-child-reference(${1:\\$element as xs:QName}, ${2:\\$child as xs:QName}, ${3:\\$options as xs:string*})","trigger":"cts:geospatial-element-child-reference","description":"($element,$child,$options)"},{"content":"cts:geospatial-element-pair-reference(${1:\\$element as xs:QName}, ${2:\\$lat as xs:QName}, ${3:\\$long as xs:QName})","trigger":"cts:geospatial-element-pair-reference","description":"($element,$lat,$long)"},{"content":"cts:geospatial-element-pair-reference(${1:\\$element as xs:QName}, ${2:\\$lat as xs:QName}, ${3:\\$long as xs:QName}, ${4:\\$options as xs:string*})","trigger":"cts:geospatial-element-pair-reference","description":"($element,$lat,$long,$options)"},{"content":"cts:geospatial-element-reference(${1:\\$element as xs:QName})","trigger":"cts:geospatial-element-reference","description":"($element)"},{"content":"cts:geospatial-element-reference(${1:\\$element as xs:QName}, ${2:\\$options as xs:string*})","trigger":"cts:geospatial-element-reference","description":"($element,$options)"},{"content":"cts:geospatial-json-property-child-reference(${1:\\$property as xs:string}, ${2:\\$child as xs:string})","trigger":"cts:geospatial-json-property-child-reference","description":"($property,$child)"},{"content":"cts:geospatial-json-property-child-reference(${1:\\$property as xs:string}, ${2:\\$child as xs:string}, ${3:\\$options as xs:string*})","trigger":"cts:geospatial-json-property-child-reference","description":"($property,$child,$options)"},{"content":"cts:geospatial-json-property-pair-reference(${1:\\$property as xs:string}, ${2:\\$lat as xs:string}, ${3:\\$long as xs:string})","trigger":"cts:geospatial-json-property-pair-reference","description":"($property,$lat,$long)"},{"content":"cts:geospatial-json-property-pair-reference(${1:\\$property as xs:string}, ${2:\\$lat as xs:string}, ${3:\\$long as xs:string}, ${4:\\$options as xs:string*})","trigger":"cts:geospatial-json-property-pair-reference","description":"($property,$lat,$long,$options)"},{"content":"cts:geospatial-json-property-reference(${1:\\$property as xs:string})","trigger":"cts:geospatial-json-property-reference","description":"($property)"},{"content":"cts:geospatial-json-property-reference(${1:\\$property as xs:string}, ${2:\\$options as xs:string*})","trigger":"cts:geospatial-json-property-reference","description":"($property,$options)"},{"content":"cts:geospatial-path-reference(${1:\\$path-expression as xs:string})","trigger":"cts:geospatial-path-reference","description":"($path-expression)"},{"content":"cts:geospatial-path-reference(${1:\\$path-expression as xs:string}, ${2:\\$options as xs:string*})","trigger":"cts:geospatial-path-reference","description":"($path-expression,$options)"},{"content":"cts:highlight(${1:\\$node as node()}, ${2:\\$query as cts:query}, ${3:\\$expr as item()*})","trigger":"cts:highlight","description":"($node,$query,$expr)"},{"content":"cts:index-order(${1:\\$index as cts:reference})","trigger":"cts:index-order","description":"($index)"},{"content":"cts:index-order(${1:\\$index as cts:reference}, ${2:\\$options as xs:string*})","trigger":"cts:index-order","description":"($index,$options)"},{"content":"cts:json-property-child-geospatial-query(${1:\\$parent-property-name as xs:string*}, ${2:\\$child-property-names as xs:string*}, ${3:\\$regions as cts:region*})","trigger":"cts:json-property-child-geospatial-query","description":"($parent-property-name,$child-property-names,$regions)"},{"content":"cts:json-property-child-geospatial-query(${1:\\$parent-property-name as xs:string*}, ${2:\\$child-property-names as xs:string*}, ${3:\\$regions as cts:region*}, ${4:\\$options as xs:string*})","trigger":"cts:json-property-child-geospatial-query","description":"($parent-property-name,$child-property-names,$regions,$options)"},{"content":"cts:json-property-child-geospatial-query(${1:\\$parent-property-name as xs:string*}, ${2:\\$child-property-names as xs:string*}, ${3:\\$regions as cts:region*}, ${4:\\$options as xs:string*}, ${5:\\$weight as xs:double?})","trigger":"cts:json-property-child-geospatial-query","description":"($parent-property-name,$child-property-names,$regions,$options,$weight)"},{"content":"cts:json-property-child-geospatial-query-child-name(${1:\\$query as cts:json-property-child-geospatial-query})","trigger":"cts:json-property-child-geospatial-query-child-name","description":"($query)"},{"content":"cts:json-property-child-geospatial-query-options(${1:\\$query as cts:json-property-child-geospatial-query})","trigger":"cts:json-property-child-geospatial-query-options","description":"($query)"},{"content":"cts:json-property-child-geospatial-query-property-name(${1:\\$query as cts:json-property-child-geospatial-query})","trigger":"cts:json-property-child-geospatial-query-property-name","description":"($query)"},{"content":"cts:json-property-child-geospatial-query-region(${1:\\$query as cts:json-property-child-geospatial-query})","trigger":"cts:json-property-child-geospatial-query-region","description":"($query)"},{"content":"cts:json-property-child-geospatial-query-weight(${1:\\$query as cts:json-property-child-geospatial-query})","trigger":"cts:json-property-child-geospatial-query-weight","description":"($query)"},{"content":"cts:json-property-geospatial-query(${1:\\$property-name as xs:string*}, ${2:\\$regions as cts:region*})","trigger":"cts:json-property-geospatial-query","description":"($property-name,$regions)"},{"content":"cts:json-property-geospatial-query(${1:\\$property-name as xs:string*}, ${2:\\$regions as cts:region*}, ${3:\\$options as xs:string*})","trigger":"cts:json-property-geospatial-query","description":"($property-name,$regions,$options)"},{"content":"cts:json-property-geospatial-query(${1:\\$property-name as xs:string*}, ${2:\\$regions as cts:region*}, ${3:\\$options as xs:string*}, ${4:\\$weight as xs:double?})","trigger":"cts:json-property-geospatial-query","description":"($property-name,$regions,$options,$weight)"},{"content":"cts:json-property-geospatial-query-options(${1:\\$query as cts:json-property-geospatial-query})","trigger":"cts:json-property-geospatial-query-options","description":"($query)"},{"content":"cts:json-property-geospatial-query-property-name(${1:\\$query as cts:json-property-geospatial-query})","trigger":"cts:json-property-geospatial-query-property-name","description":"($query)"},{"content":"cts:json-property-geospatial-query-region(${1:\\$query as cts:json-property-geospatial-query})","trigger":"cts:json-property-geospatial-query-region","description":"($query)"},{"content":"cts:json-property-geospatial-query-weight(${1:\\$query as cts:json-property-geospatial-query})","trigger":"cts:json-property-geospatial-query-weight","description":"($query)"},{"content":"cts:json-property-pair-geospatial-query(${1:\\$property-name as xs:string*}, ${2:\\$latitude-property-names as xs:string*}, ${3:\\$longitude-property-names as xs:string*}, ${4:\\$regions as cts:region*})","trigger":"cts:json-property-pair-geospatial-query","description":"($property-name,$latitude-property-names,$longitude-property-names,$regions)"},{"content":"cts:json-property-pair-geospatial-query(${1:\\$property-name as xs:string*}, ${2:\\$latitude-property-names as xs:string*}, ${3:\\$longitude-property-names as xs:string*}, ${4:\\$regions as cts:region*}, ${5:\\$options as xs:string*})","trigger":"cts:json-property-pair-geospatial-query","description":"($property-name,$latitude-property-names,$longitude-property-names,$regions,$options)"},{"content":"cts:json-property-pair-geospatial-query(${1:\\$property-name as xs:string*}, ${2:\\$latitude-property-names as xs:string*}, ${3:\\$longitude-property-names as xs:string*}, ${4:\\$regions as cts:region*}, ${5:\\$options as xs:string*}, ${6:\\$weight as xs:double?})","trigger":"cts:json-property-pair-geospatial-query","description":"($property-name,$latitude-property-names,$longitude-property-names,$regions,$options,$weight)"},{"content":"cts:json-property-pair-geospatial-query-latitude-name(${1:\\$query as cts:json-property-pair-geospatial-query})","trigger":"cts:json-property-pair-geospatial-query-latitude-name","description":"($query)"},{"content":"cts:json-property-pair-geospatial-query-longitude-name(${1:\\$query as cts:json-property-pair-geospatial-query})","trigger":"cts:json-property-pair-geospatial-query-longitude-name","description":"($query)"},{"content":"cts:json-property-pair-geospatial-query-options(${1:\\$query as cts:json-property-pair-geospatial-query})","trigger":"cts:json-property-pair-geospatial-query-options","description":"($query)"},{"content":"cts:json-property-pair-geospatial-query-property-name(${1:\\$query as cts:json-property-pair-geospatial-query})","trigger":"cts:json-property-pair-geospatial-query-property-name","description":"($query)"},{"content":"cts:json-property-pair-geospatial-query-region(${1:\\$query as cts:json-property-pair-geospatial-query})","trigger":"cts:json-property-pair-geospatial-query-region","description":"($query)"},{"content":"cts:json-property-pair-geospatial-query-weight(${1:\\$query as cts:json-property-pair-geospatial-query})","trigger":"cts:json-property-pair-geospatial-query-weight","description":"($query)"},{"content":"cts:json-property-range-query(${1:\\$property-name as xs:string*}, ${2:\\$operator as xs:string}, ${3:\\$value as xs:anyAtomicType*})","trigger":"cts:json-property-range-query","description":"($property-name,$operator,$value)"},{"content":"cts:json-property-range-query(${1:\\$property-name as xs:string*}, ${2:\\$operator as xs:string}, ${3:\\$value as xs:anyAtomicType*}, ${4:\\$options as xs:string*})","trigger":"cts:json-property-range-query","description":"($property-name,$operator,$value,$options)"},{"content":"cts:json-property-range-query(${1:\\$property-name as xs:string*}, ${2:\\$operator as xs:string}, ${3:\\$value as xs:anyAtomicType*}, ${4:\\$options as xs:string*}, ${5:\\$weight as xs:double?})","trigger":"cts:json-property-range-query","description":"($property-name,$operator,$value,$options,$weight)"},{"content":"cts:json-property-range-query-operator(${1:\\$query as cts:json-property-range-query})","trigger":"cts:json-property-range-query-operator","description":"($query)"},{"content":"cts:json-property-range-query-options(${1:\\$query as cts:json-property-range-query})","trigger":"cts:json-property-range-query-options","description":"($query)"},{"content":"cts:json-property-range-query-property-name(${1:\\$query as cts:json-property-range-query})","trigger":"cts:json-property-range-query-property-name","description":"($query)"},{"content":"cts:json-property-range-query-value(${1:\\$query as cts:json-property-range-query})","trigger":"cts:json-property-range-query-value","description":"($query)"},{"content":"cts:json-property-range-query-weight(${1:\\$query as cts:json-property-range-query})","trigger":"cts:json-property-range-query-weight","description":"($query)"},{"content":"cts:json-property-reference(${1:\\$property as xs:string})","trigger":"cts:json-property-reference","description":"($property)"},{"content":"cts:json-property-reference(${1:\\$property as xs:string}, ${2:\\$options as xs:string*})","trigger":"cts:json-property-reference","description":"($property,$options)"},{"content":"cts:json-property-scope-query(${1:\\$property-name as xs:string*}, ${2:\\$query as cts:query})","trigger":"cts:json-property-scope-query","description":"($property-name,$query)"},{"content":"cts:json-property-scope-query-property-name(${1:\\$query as cts:json-property-scope-query})","trigger":"cts:json-property-scope-query-property-name","description":"($query)"},{"content":"cts:json-property-scope-query-query(${1:\\$query as cts:json-property-scope-query})","trigger":"cts:json-property-scope-query-query","description":"($query)"},{"content":"cts:json-property-value-query(${1:\\$property-name as xs:string*}, ${2:\\$value as xs:anyAtomicType*})","trigger":"cts:json-property-value-query","description":"($property-name,$value)"},{"content":"cts:json-property-value-query(${1:\\$property-name as xs:string*}, ${2:\\$value as xs:anyAtomicType*}, ${3:\\$options as xs:string*})","trigger":"cts:json-property-value-query","description":"($property-name,$value,$options)"},{"content":"cts:json-property-value-query(${1:\\$property-name as xs:string*}, ${2:\\$value as xs:anyAtomicType*}, ${3:\\$options as xs:string*}, ${4:\\$weight as xs:double?})","trigger":"cts:json-property-value-query","description":"($property-name,$value,$options,$weight)"},{"content":"cts:json-property-value-query-options(${1:\\$query as cts:json-property-value-query})","trigger":"cts:json-property-value-query-options","description":"($query)"},{"content":"cts:json-property-value-query-property-name(${1:\\$query as cts:json-property-value-query})","trigger":"cts:json-property-value-query-property-name","description":"($query)"},{"content":"cts:json-property-value-query-value(${1:\\$query as cts:json-property-value-query})","trigger":"cts:json-property-value-query-value","description":"($query)"},{"content":"cts:json-property-value-query-weight(${1:\\$query as cts:json-property-value-query})","trigger":"cts:json-property-value-query-weight","description":"($query)"},{"content":"cts:json-property-word-match(${1:\\$property-names as xs:string*}, ${2:\\$pattern as xs:string?})","trigger":"cts:json-property-word-match","description":"($property-names,$pattern)"},{"content":"cts:json-property-word-match(${1:\\$property-names as xs:string*}, ${2:\\$pattern as xs:string?}, ${3:\\$options as xs:string*})","trigger":"cts:json-property-word-match","description":"($property-names,$pattern,$options)"},{"content":"cts:json-property-word-match(${1:\\$property-names as xs:string*}, ${2:\\$pattern as xs:string?}, ${3:\\$options as xs:string*}, ${4:\\$query as cts:query?})","trigger":"cts:json-property-word-match","description":"($property-names,$pattern,$options,$query)"},{"content":"cts:json-property-word-match(${1:\\$property-names as xs:string*}, ${2:\\$pattern as xs:string?}, ${3:\\$options as xs:string*}, ${4:\\$query as cts:query?}, ${5:\\$quality-weight as xs:double?})","trigger":"cts:json-property-word-match","description":"($property-names,$pattern,$options,$query,$quality-weight)"},{"content":"cts:json-property-word-match(${1:\\$property-names as xs:string*}, ${2:\\$pattern as xs:string?}, ${3:\\$options as xs:string*}, ${4:\\$query as cts:query?}, ${5:\\$quality-weight as xs:double?}, ${6:\\$forest-ids as xs:unsignedLong*})","trigger":"cts:json-property-word-match","description":"($property-names,$pattern,$options,$query,$quality-weight,$forest-ids)"},{"content":"cts:json-property-word-query(${1:\\$property-name as xs:string*}, ${2:\\$text as xs:string*})","trigger":"cts:json-property-word-query","description":"($property-name,$text)"},{"content":"cts:json-property-word-query(${1:\\$property-name as xs:string*}, ${2:\\$text as xs:string*}, ${3:\\$options as xs:string*})","trigger":"cts:json-property-word-query","description":"($property-name,$text,$options)"},{"content":"cts:json-property-word-query(${1:\\$property-name as xs:string*}, ${2:\\$text as xs:string*}, ${3:\\$options as xs:string*}, ${4:\\$weight as xs:double?})","trigger":"cts:json-property-word-query","description":"($property-name,$text,$options,$weight)"},{"content":"cts:json-property-word-query-options(${1:\\$query as cts:json-property-word-query})","trigger":"cts:json-property-word-query-options","description":"($query)"},{"content":"cts:json-property-word-query-property-name(${1:\\$query as cts:json-property-word-query})","trigger":"cts:json-property-word-query-property-name","description":"($query)"},{"content":"cts:json-property-word-query-text(${1:\\$query as cts:json-property-word-query})","trigger":"cts:json-property-word-query-text","description":"($query)"},{"content":"cts:json-property-word-query-weight(${1:\\$query as cts:json-property-word-query})","trigger":"cts:json-property-word-query-weight","description":"($query)"},{"content":"cts:json-property-words(${1:\\$property-names as xs:string*})","trigger":"cts:json-property-words","description":"($property-names)"},{"content":"cts:json-property-words(${1:\\$property-names as xs:string*}, ${2:\\$start as xs:string?})","trigger":"cts:json-property-words","description":"($property-names,$start)"},{"content":"cts:json-property-words(${1:\\$property-names as xs:string*}, ${2:\\$start as xs:string?}, ${3:\\$options as xs:string*})","trigger":"cts:json-property-words","description":"($property-names,$start,$options)"},{"content":"cts:json-property-words(${1:\\$property-names as xs:string*}, ${2:\\$start as xs:string?}, ${3:\\$options as xs:string*}, ${4:\\$query as cts:query?})","trigger":"cts:json-property-words","description":"($property-names,$start,$options,$query)"},{"content":"cts:json-property-words(${1:\\$property-names as xs:string*}, ${2:\\$start as xs:string?}, ${3:\\$options as xs:string*}, ${4:\\$query as cts:query?}, ${5:\\$quality-weight as xs:double?})","trigger":"cts:json-property-words","description":"($property-names,$start,$options,$query,$quality-weight)"},{"content":"cts:json-property-words(${1:\\$property-names as xs:string*}, ${2:\\$start as xs:string?}, ${3:\\$options as xs:string*}, ${4:\\$query as cts:query?}, ${5:\\$quality-weight as xs:double?}, ${6:\\$forest-ids as xs:unsignedLong*})","trigger":"cts:json-property-words","description":"($property-names,$start,$options,$query,$quality-weight,$forest-ids)"},{"content":"cts:linear-model(${1:\\$values as cts:reference*})","trigger":"cts:linear-model","description":"($values)"},{"content":"cts:linear-model(${1:\\$values as cts:reference*}, ${2:\\$options as xs:string*})","trigger":"cts:linear-model","description":"($values,$options)"},{"content":"cts:linear-model(${1:\\$values as cts:reference*}, ${2:\\$options as xs:string*}, ${3:\\$query as cts:query?})","trigger":"cts:linear-model","description":"($values,$options,$query)"},{"content":"cts:linear-model(${1:\\$values as cts:reference*}, ${2:\\$options as xs:string*}, ${3:\\$query as cts:query?}, ${4:\\$forest-ids as xs:unsignedLong*})","trigger":"cts:linear-model","description":"($values,$options,$query,$forest-ids)"},{"content":"cts:linestring(${1:\\$vertices as cts:point*})","trigger":"cts:linestring","description":"($vertices)"},{"content":"cts:linestring-vertices(${1:\\$linestring as cts:linestring})","trigger":"cts:linestring-vertices","description":"($linestring)"},{"content":"cts:locks-fragment-query(${1:\\$query as cts:query})","trigger":"cts:locks-fragment-query","description":"($query)"},{"content":"cts:locks-fragment-query-query(${1:\\$query as cts:locks-fragment-query})","trigger":"cts:locks-fragment-query-query","description":"($query)"},{"content":"cts:lsqt-query(${1:\\$temporal-collection as xs:string})","trigger":"cts:lsqt-query","description":"($temporal-collection)"},{"content":"cts:lsqt-query(${1:\\$temporal-collection as xs:string}, ${2:\\$timestamp as xs:dateTime?})","trigger":"cts:lsqt-query","description":"($temporal-collection,$timestamp)"},{"content":"cts:lsqt-query(${1:\\$temporal-collection as xs:string}, ${2:\\$timestamp as xs:dateTime?}, ${3:\\$options as xs:string*})","trigger":"cts:lsqt-query","description":"($temporal-collection,$timestamp,$options)"},{"content":"cts:lsqt-query(${1:\\$temporal-collection as xs:string}, ${2:\\$timestamp as xs:dateTime?}, ${3:\\$options as xs:string*}, ${4:\\$weight as xs:double?})","trigger":"cts:lsqt-query","description":"($temporal-collection,$timestamp,$options,$weight)"},{"content":"cts:lsqt-query-options(${1:\\$query as cts:lsqt-query})","trigger":"cts:lsqt-query-options","description":"($query)"},{"content":"cts:lsqt-query-temporal-collection(${1:\\$query as cts:lsqt-query})","trigger":"cts:lsqt-query-temporal-collection","description":"($query)"},{"content":"cts:lsqt-query-timestamp(${1:\\$query as cts:lsqt-query})","trigger":"cts:lsqt-query-timestamp","description":"($query)"},{"content":"cts:lsqt-query-weight(${1:\\$query as cts:lsqt-query})","trigger":"cts:lsqt-query-weight","description":"($query)"},{"content":"cts:max(${1:\\$range-index as cts:reference})","trigger":"cts:max","description":"($range-index)"},{"content":"cts:max(${1:\\$range-index as cts:reference}, ${2:\\$options as xs:string*})","trigger":"cts:max","description":"($range-index,$options)"},{"content":"cts:max(${1:\\$range-index as cts:reference}, ${2:\\$options as xs:string*}, ${3:\\$query as cts:query?})","trigger":"cts:max","description":"($range-index,$options,$query)"},{"content":"cts:max(${1:\\$range-index as cts:reference}, ${2:\\$options as xs:string*}, ${3:\\$query as cts:query?}, ${4:\\$forest-ids as xs:unsignedLong*})","trigger":"cts:max","description":"($range-index,$options,$query,$forest-ids)"},{"content":"cts:median(${1:\\$arg as xs:double*})","trigger":"cts:median","description":"($arg)"},{"content":"cts:min(${1:\\$range-index as cts:reference})","trigger":"cts:min","description":"($range-index)"},{"content":"cts:min(${1:\\$range-index as cts:reference}, ${2:\\$options as xs:string*})","trigger":"cts:min","description":"($range-index,$options)"},{"content":"cts:min(${1:\\$range-index as cts:reference}, ${2:\\$options as xs:string*}, ${3:\\$query as cts:query?})","trigger":"cts:min","description":"($range-index,$options,$query)"},{"content":"cts:min(${1:\\$range-index as cts:reference}, ${2:\\$options as xs:string*}, ${3:\\$query as cts:query?}, ${4:\\$forest-ids as xs:unsignedLong*})","trigger":"cts:min","description":"($range-index,$options,$query,$forest-ids)"},{"content":"cts:near-query(${1:\\$queries as cts:query*})","trigger":"cts:near-query","description":"($queries)"},{"content":"cts:near-query(${1:\\$queries as cts:query*}, ${2:\\$distance as xs:double?})","trigger":"cts:near-query","description":"($queries,$distance)"},{"content":"cts:near-query(${1:\\$queries as cts:query*}, ${2:\\$distance as xs:double?}, ${3:\\$options as xs:string*})","trigger":"cts:near-query","description":"($queries,$distance,$options)"},{"content":"cts:near-query(${1:\\$queries as cts:query*}, ${2:\\$distance as xs:double?}, ${3:\\$options as xs:string*}, ${4:\\$distance-weight as xs:double?})","trigger":"cts:near-query","description":"($queries,$distance,$options,$distance-weight)"},{"content":"cts:near-query-distance(${1:\\$query as cts:near-query})","trigger":"cts:near-query-distance","description":"($query)"},{"content":"cts:near-query-options(${1:\\$query as cts:near-query})","trigger":"cts:near-query-options","description":"($query)"},{"content":"cts:near-query-queries(${1:\\$query as cts:near-query})","trigger":"cts:near-query-queries","description":"($query)"},{"content":"cts:near-query-weight(${1:\\$query as cts:near-query})","trigger":"cts:near-query-weight","description":"($query)"},{"content":"cts:not-in-query(${1:\\$positive-query as cts:query}, ${2:\\$negative-query as cts:query})","trigger":"cts:not-in-query","description":"($positive-query,$negative-query)"},{"content":"cts:not-in-query-negative-query(${1:\\$query as cts:not-in-query})","trigger":"cts:not-in-query-negative-query","description":"($query)"},{"content":"cts:not-in-query-positive-query(${1:\\$query as cts:not-in-query})","trigger":"cts:not-in-query-positive-query","description":"($query)"},{"content":"cts:not-query(${1:\\$query as cts:query})","trigger":"cts:not-query","description":"($query)"},{"content":"cts:not-query-query(${1:\\$query as cts:not-query})","trigger":"cts:not-query-query","description":"($query)"},{"content":"cts:not-query-weight(${1:\\$query as cts:not-query})","trigger":"cts:not-query-weight","description":"($query)"},{"content":"cts:or-query(${1:\\$queries as cts:query*})","trigger":"cts:or-query","description":"($queries)"},{"content":"cts:or-query-options(${1:\\$query as cts:or-query})","trigger":"cts:or-query-options","description":"($query)"},{"content":"cts:or-query-queries(${1:\\$query as cts:or-query})","trigger":"cts:or-query-queries","description":"($query)"},{"content":"cts:parse-wkt(${1:\\$wtk as xs:string*})","trigger":"cts:parse-wkt","description":"($wtk)"},{"content":"cts:path-geospatial-query(${1:\\$path-expression as xs:string*}, ${2:\\$regions as cts:region*})","trigger":"cts:path-geospatial-query","description":"($path-expression,$regions)"},{"content":"cts:path-geospatial-query(${1:\\$path-expression as xs:string*}, ${2:\\$regions as cts:region*}, ${3:\\$options as xs:string*})","trigger":"cts:path-geospatial-query","description":"($path-expression,$regions,$options)"},{"content":"cts:path-geospatial-query(${1:\\$path-expression as xs:string*}, ${2:\\$regions as cts:region*}, ${3:\\$options as xs:string*}, ${4:\\$weight as xs:double?})","trigger":"cts:path-geospatial-query","description":"($path-expression,$regions,$options,$weight)"},{"content":"cts:path-geospatial-query-options(${1:\\$query as cts:path-geospatial-query})","trigger":"cts:path-geospatial-query-options","description":"($query)"},{"content":"cts:path-geospatial-query-path-expression(${1:\\$query as cts:path-geospatial-query})","trigger":"cts:path-geospatial-query-path-expression","description":"($query)"},{"content":"cts:path-geospatial-query-region(${1:\\$query as cts:path-geospatial-query})","trigger":"cts:path-geospatial-query-region","description":"($query)"},{"content":"cts:path-geospatial-query-weight(${1:\\$query as cts:path-geospatial-query})","trigger":"cts:path-geospatial-query-weight","description":"($query)"},{"content":"cts:path-range-query(${1:\\$path-expression as xs:string*}, ${2:\\$operator as xs:string}, ${3:\\$value as xs:anyAtomicType*})","trigger":"cts:path-range-query","description":"($path-expression,$operator,$value)"},{"content":"cts:path-range-query(${1:\\$path-expression as xs:string*}, ${2:\\$operator as xs:string}, ${3:\\$value as xs:anyAtomicType*}, ${4:\\$options as xs:string*})","trigger":"cts:path-range-query","description":"($path-expression,$operator,$value,$options)"},{"content":"cts:path-range-query(${1:\\$path-expression as xs:string*}, ${2:\\$operator as xs:string}, ${3:\\$value as xs:anyAtomicType*}, ${4:\\$options as xs:string*}, ${5:\\$weight as xs:double?})","trigger":"cts:path-range-query","description":"($path-expression,$operator,$value,$options,$weight)"},{"content":"cts:path-range-query-operator(${1:\\$query as cts:path-range-query})","trigger":"cts:path-range-query-operator","description":"($query)"},{"content":"cts:path-range-query-options(${1:\\$query as cts:path-range-query})","trigger":"cts:path-range-query-options","description":"($query)"},{"content":"cts:path-range-query-path-name(${1:\\$query as cts:path-range-query})","trigger":"cts:path-range-query-path-name","description":"($query)"},{"content":"cts:path-range-query-value(${1:\\$query as cts:path-range-query})","trigger":"cts:path-range-query-value","description":"($query)"},{"content":"cts:path-range-query-weight(${1:\\$query as cts:path-range-query})","trigger":"cts:path-range-query-weight","description":"($query)"},{"content":"cts:path-reference(${1:\\$path-expression as xs:string})","trigger":"cts:path-reference","description":"($path-expression)"},{"content":"cts:path-reference(${1:\\$path-expression as xs:string}, ${2:\\$options as xs:string*})","trigger":"cts:path-reference","description":"($path-expression,$options)"},{"content":"cts:percent-rank(${1:\\$arg as xs:anyAtomicType*}, ${2:\\$value as xs:anyAtomicType})","trigger":"cts:percent-rank","description":"($arg,$value)"},{"content":"cts:percent-rank(${1:\\$arg as xs:anyAtomicType*}, ${2:\\$value as xs:anyAtomicType}, ${3:\\$options as xs:string*})","trigger":"cts:percent-rank","description":"($arg,$value,$options)"},{"content":"cts:percentile(${1:\\$arg as xs:double*}, ${2:\\$p as xs:double*})","trigger":"cts:percentile","description":"($arg,$p)"},{"content":"cts:period(${1:\\$start as xs:dateTime}, ${2:\\$end as xs:dateTime})","trigger":"cts:period","description":"($start,$end)"},{"content":"cts:period-compare(${1:\\$period-1 as cts:period}, ${2:\\$operator as xs:string}, ${3:\\$period-2 as cts:period})","trigger":"cts:period-compare","description":"($period-1,$operator,$period-2)"},{"content":"cts:period-compare-query(${1:\\$axis-1 as xs:string}, ${2:\\$operator as xs:string}, ${3:\\$axis-2 as xs:string})","trigger":"cts:period-compare-query","description":"($axis-1,$operator,$axis-2)"},{"content":"cts:period-compare-query(${1:\\$axis-1 as xs:string}, ${2:\\$operator as xs:string}, ${3:\\$axis-2 as xs:string}, ${4:\\$options as xs:string*})","trigger":"cts:period-compare-query","description":"($axis-1,$operator,$axis-2,$options)"},{"content":"cts:period-compare-query(${1:\\$axis-1 as xs:string}, ${2:\\$operator as xs:string}, ${3:\\$axis-2 as xs:string}, ${4:\\$options as xs:string*}, ${5:\\$weight as xs:double?})","trigger":"cts:period-compare-query","description":"($axis-1,$operator,$axis-2,$options,$weight)"},{"content":"cts:period-compare-query-axis-1(${1:\\$query as cts:period-compare-query})","trigger":"cts:period-compare-query-axis-1","description":"($query)"},{"content":"cts:period-compare-query-axis-2(${1:\\$query as cts:period-compare-query})","trigger":"cts:period-compare-query-axis-2","description":"($query)"},{"content":"cts:period-compare-query-operator(${1:\\$query as cts:period-compare-query})","trigger":"cts:period-compare-query-operator","description":"($query)"},{"content":"cts:period-compare-query-options(${1:\\$query as cts:period-compare-query})","trigger":"cts:period-compare-query-options","description":"($query)"},{"content":"cts:period-compare-query-weight(${1:\\$query as cts:period-compare-query})","trigger":"cts:period-compare-query-weight","description":"($query)"},{"content":"cts:period-range-query(${1:\\$axis-name as xs:string*}, ${2:\\$operator as xs:string})","trigger":"cts:period-range-query","description":"($axis-name,$operator)"},{"content":"cts:period-range-query(${1:\\$axis-name as xs:string*}, ${2:\\$operator as xs:string}, ${3:\\$period as cts:period*})","trigger":"cts:period-range-query","description":"($axis-name,$operator,$period)"},{"content":"cts:period-range-query(${1:\\$axis-name as xs:string*}, ${2:\\$operator as xs:string}, ${3:\\$period as cts:period*}, ${4:\\$options as xs:string*})","trigger":"cts:period-range-query","description":"($axis-name,$operator,$period,$options)"},{"content":"cts:period-range-query-axis(${1:\\$query as cts:period-range-query})","trigger":"cts:period-range-query-axis","description":"($query)"},{"content":"cts:period-range-query-operator(${1:\\$query as cts:period-range-query})","trigger":"cts:period-range-query-operator","description":"($query)"},{"content":"cts:period-range-query-options(${1:\\$query as cts:period-range-query})","trigger":"cts:period-range-query-options","description":"($query)"},{"content":"cts:period-range-query-period(${1:\\$query as cts:period-range-query})","trigger":"cts:period-range-query-period","description":"($query)"},{"content":"cts:period-range-query-weight(${1:\\$query as cts:period-range-query})","trigger":"cts:period-range-query-weight","description":"($query)"},{"content":"cts:point(${1:\\$latitude as xs:float}, ${2:\\$longitude as xs:float})","trigger":"cts:point","description":"($latitude,$longitude)"},{"content":"cts:point-latitude(${1:\\$point as cts:point})","trigger":"cts:point-latitude","description":"($point)"},{"content":"cts:point-longitude(${1:\\$point as cts:point})","trigger":"cts:point-longitude","description":"($point)"},{"content":"cts:polygon(${1:\\$vertices as cts:point*})","trigger":"cts:polygon","description":"($vertices)"},{"content":"cts:polygon-contains(${1:\\$polygon as cts:polygon}, ${2:\\$region as cts:region*})","trigger":"cts:polygon-contains","description":"($polygon,$region)"},{"content":"cts:polygon-contains(${1:\\$polygon as cts:polygon}, ${2:\\$region as cts:region*}, ${3:\\$options as xs:string*})","trigger":"cts:polygon-contains","description":"($polygon,$region,$options)"},{"content":"cts:polygon-intersects(${1:\\$polygon as cts:polygon}, ${2:\\$region as cts:region*})","trigger":"cts:polygon-intersects","description":"($polygon,$region)"},{"content":"cts:polygon-intersects(${1:\\$polygon as cts:polygon}, ${2:\\$region as cts:region*}, ${3:\\$options as xs:string*})","trigger":"cts:polygon-intersects","description":"($polygon,$region,$options)"},{"content":"cts:polygon-vertices(${1:\\$polygon as cts:polygon})","trigger":"cts:polygon-vertices","description":"($polygon)"},{"content":"cts:properties-fragment-query(${1:\\$query as cts:query})","trigger":"cts:properties-fragment-query","description":"($query)"},{"content":"cts:properties-fragment-query-query(${1:\\$query as cts:properties-fragment-query})","trigger":"cts:properties-fragment-query-query","description":"($query)"},{"content":"cts:quality(${1:\\$node as node()})","trigger":"cts:quality","description":"($node)"},{"content":"cts:quality()","trigger":"cts:quality"},{"content":"cts:quality-order(${1:\\$options as xs:string*})","trigger":"cts:quality-order","description":"($options)"},{"content":"cts:quality-order()","trigger":"cts:quality-order"},{"content":"cts:query(${1:\\$query as node()})","trigger":"cts:query","description":"($query)"},{"content":"cts:rank(${1:\\$arg as xs:anyAtomicType*}, ${2:\\$value as xs:anyAtomicType})","trigger":"cts:rank","description":"($arg,$value)"},{"content":"cts:rank(${1:\\$arg as xs:anyAtomicType*}, ${2:\\$value as xs:anyAtomicType}, ${3:\\$options as xs:string*})","trigger":"cts:rank","description":"($arg,$value,$options)"},{"content":"cts:reference-parse(${1:\\$reference as node()})","trigger":"cts:reference-parse","description":"($reference)"},{"content":"cts:reference-scalar-type(${1:\\$index as cts:reference})","trigger":"cts:reference-scalar-type","description":"($index)"},{"content":"cts:region-contains(${1:\\$region as cts:region}, ${2:\\$region as cts:region*})","trigger":"cts:region-contains","description":"($region,$region)"},{"content":"cts:region-contains(${1:\\$region as cts:region}, ${2:\\$region as cts:region*}, ${3:\\$options as xs:string*})","trigger":"cts:region-contains","description":"($region,$region,$options)"},{"content":"cts:region-intersects(${1:\\$target as cts:region}, ${2:\\$region as cts:region*})","trigger":"cts:region-intersects","description":"($target,$region)"},{"content":"cts:region-intersects(${1:\\$target as cts:region}, ${2:\\$region as cts:region*}, ${3:\\$options as xs:string*})","trigger":"cts:region-intersects","description":"($target,$region,$options)"},{"content":"cts:register(${1:\\$query as cts:query})","trigger":"cts:register","description":"($query)"},{"content":"cts:registered-query(${1:\\$ids as xs:unsignedLong*})","trigger":"cts:registered-query","description":"($ids)"},{"content":"cts:registered-query(${1:\\$ids as xs:unsignedLong*}, ${2:\\$options as xs:string*})","trigger":"cts:registered-query","description":"($ids,$options)"},{"content":"cts:registered-query(${1:\\$ids as xs:unsignedLong*}, ${2:\\$options as xs:string*}, ${3:\\$weight as xs:double?})","trigger":"cts:registered-query","description":"($ids,$options,$weight)"},{"content":"cts:registered-query-ids(${1:\\$query as cts:registered-query})","trigger":"cts:registered-query-ids","description":"($query)"},{"content":"cts:registered-query-options(${1:\\$query as cts:registered-query})","trigger":"cts:registered-query-options","description":"($query)"},{"content":"cts:registered-query-weight(${1:\\$query as cts:registered-query})","trigger":"cts:registered-query-weight","description":"($query)"},{"content":"cts:relevance-info(${1:\\$node as node()})","trigger":"cts:relevance-info","description":"($node)"},{"content":"cts:relevance-info()","trigger":"cts:relevance-info"},{"content":"cts:remainder(${1:\\$node as node()})","trigger":"cts:remainder","description":"($node)"},{"content":"cts:remainder()","trigger":"cts:remainder"},{"content":"cts:reverse-query(${1:\\$nodes as node()*})","trigger":"cts:reverse-query","description":"($nodes)"},{"content":"cts:reverse-query(${1:\\$nodes as node()*}, ${2:\\$weight as xs:double?})","trigger":"cts:reverse-query","description":"($nodes,$weight)"},{"content":"cts:reverse-query-nodes(${1:\\$query as cts:reverse-query})","trigger":"cts:reverse-query-nodes","description":"($query)"},{"content":"cts:reverse-query-weight(${1:\\$query as cts:reverse-query})","trigger":"cts:reverse-query-weight","description":"($query)"},{"content":"cts:score(${1:\\$node as node()})","trigger":"cts:score","description":"($node)"},{"content":"cts:score()","trigger":"cts:score"},{"content":"cts:score-order(${1:\\$options as xs:string*})","trigger":"cts:score-order","description":"($options)"},{"content":"cts:score-order()","trigger":"cts:score-order"},{"content":"cts:search(${1:\\$expression as node()*}, ${2:\\$query as cts:query?})","trigger":"cts:search","description":"($expression,$query)"},{"content":"cts:search(${1:\\$expression as node()*}, ${2:\\$query as cts:query?}, ${3:\\$options as (cts:order|xs:string)*})","trigger":"cts:search","description":"($expression,$query,$options)"},{"content":"cts:search(${1:\\$expression as node()*}, ${2:\\$query as cts:query?}, ${3:\\$options as (cts:order|xs:string)*}, ${4:\\$quality-weight as xs:double?})","trigger":"cts:search","description":"($expression,$query,$options,$quality-weight)"},{"content":"cts:search(${1:\\$expression as node()*}, ${2:\\$query as cts:query?}, ${3:\\$options as (cts:order|xs:string)*}, ${4:\\$quality-weight as xs:double?}, ${5:\\$forest-ids as xs:unsignedLong*})","trigger":"cts:search","description":"($expression,$query,$options,$quality-weight,$forest-ids)"},{"content":"cts:shortest-distance(${1:\\$p1 as cts:point}, ${2:\\$region as cts:region+})","trigger":"cts:shortest-distance","description":"($p1,$region)"},{"content":"cts:shortest-distance(${1:\\$p1 as cts:point}, ${2:\\$region as cts:region+}, ${3:\\$options as xs:string*})","trigger":"cts:shortest-distance","description":"($p1,$region,$options)"},{"content":"cts:similar-query(${1:\\$nodes as node()*})","trigger":"cts:similar-query","description":"($nodes)"},{"content":"cts:similar-query(${1:\\$nodes as node()*}, ${2:\\$weight as xs:double?})","trigger":"cts:similar-query","description":"($nodes,$weight)"},{"content":"cts:similar-query(${1:\\$nodes as node()*}, ${2:\\$weight as xs:double?}, ${3:\\$options as element()?})","trigger":"cts:similar-query","description":"($nodes,$weight,$options)"},{"content":"cts:similar-query-nodes(${1:\\$query as cts:similar-query})","trigger":"cts:similar-query-nodes","description":"($query)"},{"content":"cts:similar-query-weight(${1:\\$query as cts:similar-query})","trigger":"cts:similar-query-weight","description":"($query)"},{"content":"cts:stddev(${1:\\$range-index as cts:reference})","trigger":"cts:stddev","description":"($range-index)"},{"content":"cts:stddev(${1:\\$range-index as cts:reference}, ${2:\\$options as xs:string*})","trigger":"cts:stddev","description":"($range-index,$options)"},{"content":"cts:stddev(${1:\\$range-index as cts:reference}, ${2:\\$options as xs:string*}, ${3:\\$query as cts:query?})","trigger":"cts:stddev","description":"($range-index,$options,$query)"},{"content":"cts:stddev(${1:\\$range-index as cts:reference}, ${2:\\$options as xs:string*}, ${3:\\$query as cts:query?}, ${4:\\$forest-ids as xs:unsignedLong*})","trigger":"cts:stddev","description":"($range-index,$options,$query,$forest-ids)"},{"content":"cts:stddev-p(${1:\\$range-index as cts:reference})","trigger":"cts:stddev-p","description":"($range-index)"},{"content":"cts:stddev-p(${1:\\$range-index as cts:reference}, ${2:\\$options as xs:string*})","trigger":"cts:stddev-p","description":"($range-index,$options)"},{"content":"cts:stddev-p(${1:\\$range-index as cts:reference}, ${2:\\$options as xs:string*}, ${3:\\$query as cts:query?})","trigger":"cts:stddev-p","description":"($range-index,$options,$query)"},{"content":"cts:stddev-p(${1:\\$range-index as cts:reference}, ${2:\\$options as xs:string*}, ${3:\\$query as cts:query?}, ${4:\\$forest-ids as xs:unsignedLong*})","trigger":"cts:stddev-p","description":"($range-index,$options,$query,$forest-ids)"},{"content":"cts:stem(${1:\\$text as xs:string})","trigger":"cts:stem","description":"($text)"},{"content":"cts:stem(${1:\\$text as xs:string}, ${2:\\$language as xs:string?})","trigger":"cts:stem","description":"($text,$language)"},{"content":"cts:sum(${1:\\$arg as xs:anyAtomicType*})","trigger":"cts:sum","description":"($arg)"},{"content":"cts:sum(${1:\\$arg as xs:anyAtomicType*}, ${2:\\$zero as xs:anyAtomicType?})","trigger":"cts:sum","description":"($arg,$zero)"},{"content":"cts:sum-aggregate(${1:\\$range-index as cts:reference})","trigger":"cts:sum-aggregate","description":"($range-index)"},{"content":"cts:sum-aggregate(${1:\\$range-index as cts:reference}, ${2:\\$options as xs:string*})","trigger":"cts:sum-aggregate","description":"($range-index,$options)"},{"content":"cts:sum-aggregate(${1:\\$range-index as cts:reference}, ${2:\\$options as xs:string*}, ${3:\\$query as cts:query?})","trigger":"cts:sum-aggregate","description":"($range-index,$options,$query)"},{"content":"cts:sum-aggregate(${1:\\$range-index as cts:reference}, ${2:\\$options as xs:string*}, ${3:\\$query as cts:query?}, ${4:\\$forest-ids as xs:unsignedLong*})","trigger":"cts:sum-aggregate","description":"($range-index,$options,$query,$forest-ids)"},{"content":"cts:thresholds(${1:\\$computed-labels as element(cts:label)*}, ${2:\\$known-labels as element(cts:label)*})","trigger":"cts:thresholds","description":"($computed-labels,$known-labels)"},{"content":"cts:thresholds(${1:\\$computed-labels as element(cts:label)*}, ${2:\\$known-labels as element(cts:label)*}, ${3:\\$recall-weight as xs:double?})","trigger":"cts:thresholds","description":"($computed-labels,$known-labels,$recall-weight)"},{"content":"cts:to-wkt(${1:\\$wtk as cts:region*})","trigger":"cts:to-wkt","description":"($wtk)"},{"content":"cts:tokenize(${1:\\$text as xs:string})","trigger":"cts:tokenize","description":"($text)"},{"content":"cts:tokenize(${1:\\$text as xs:string}, ${2:\\$language as xs:string?})","trigger":"cts:tokenize","description":"($text,$language)"},{"content":"cts:tokenize(${1:\\$text as xs:string}, ${2:\\$language as xs:string?}, ${3:\\$field as xs:string?})","trigger":"cts:tokenize","description":"($text,$language,$field)"},{"content":"cts:train(${1:\\$training-nodes as node()*}, ${2:\\$labels as element(cts:label)*})","trigger":"cts:train","description":"($training-nodes,$labels)"},{"content":"cts:train(${1:\\$training-nodes as node()*}, ${2:\\$labels as element(cts:label)*}, ${3:\\$options as (element()|map:map)?})","trigger":"cts:train","description":"($training-nodes,$labels,$options)"},{"content":"cts:triple-range-query(${1:\\$subject as xs:anyAtomicType*}, ${2:\\$predicate as xs:anyAtomicType*}, ${3:\\$object as xs:anyAtomicType*})","trigger":"cts:triple-range-query","description":"($subject,$predicate,$object)"},{"content":"cts:triple-range-query(${1:\\$subject as xs:anyAtomicType*}, ${2:\\$predicate as xs:anyAtomicType*}, ${3:\\$object as xs:anyAtomicType*}, ${4:\\$operator as xs:string*})","trigger":"cts:triple-range-query","description":"($subject,$predicate,$object,$operator)"},{"content":"cts:triple-range-query(${1:\\$subject as xs:anyAtomicType*}, ${2:\\$predicate as xs:anyAtomicType*}, ${3:\\$object as xs:anyAtomicType*}, ${4:\\$operator as xs:string*}, ${5:\\$options as xs:string*})","trigger":"cts:triple-range-query","description":"($subject,$predicate,$object,$operator,$options)"},{"content":"cts:triple-range-query(${1:\\$subject as xs:anyAtomicType*}, ${2:\\$predicate as xs:anyAtomicType*}, ${3:\\$object as xs:anyAtomicType*}, ${4:\\$operator as xs:string*}, ${5:\\$options as xs:string*}, ${6:\\$weight as xs:double?})","trigger":"cts:triple-range-query","description":"($subject,$predicate,$object,$operator,$options,$weight)"},{"content":"cts:triple-range-query-object(${1:\\$query as cts:triple-range-query})","trigger":"cts:triple-range-query-object","description":"($query)"},{"content":"cts:triple-range-query-operator(${1:\\$query as cts:triple-range-query})","trigger":"cts:triple-range-query-operator","description":"($query)"},{"content":"cts:triple-range-query-options(${1:\\$query as cts:triple-range-query})","trigger":"cts:triple-range-query-options","description":"($query)"},{"content":"cts:triple-range-query-predicate(${1:\\$query as cts:triple-range-query})","trigger":"cts:triple-range-query-predicate","description":"($query)"},{"content":"cts:triple-range-query-subject(${1:\\$query as cts:triple-range-query})","trigger":"cts:triple-range-query-subject","description":"($query)"},{"content":"cts:triple-range-query-weight(${1:\\$query as cts:triple-range-query})","trigger":"cts:triple-range-query-weight","description":"($query)"},{"content":"cts:triples(${1:\\$subject as xs:anyAtomicType*})","trigger":"cts:triples","description":"($subject)"},{"content":"cts:triples(${1:\\$subject as xs:anyAtomicType*}, ${2:\\$predicate as xs:anyAtomicType*})","trigger":"cts:triples","description":"($subject,$predicate)"},{"content":"cts:triples(${1:\\$subject as xs:anyAtomicType*}, ${2:\\$predicate as xs:anyAtomicType*}, ${3:\\$object as xs:anyAtomicType*})","trigger":"cts:triples","description":"($subject,$predicate,$object)"},{"content":"cts:triples(${1:\\$subject as xs:anyAtomicType*}, ${2:\\$predicate as xs:anyAtomicType*}, ${3:\\$object as xs:anyAtomicType*}, ${4:\\$operator as xs:string*})","trigger":"cts:triples","description":"($subject,$predicate,$object,$operator)"},{"content":"cts:triples(${1:\\$subject as xs:anyAtomicType*}, ${2:\\$predicate as xs:anyAtomicType*}, ${3:\\$object as xs:anyAtomicType*}, ${4:\\$operator as xs:string*}, ${5:\\$options as xs:string*})","trigger":"cts:triples","description":"($subject,$predicate,$object,$operator,$options)"},{"content":"cts:triples(${1:\\$subject as xs:anyAtomicType*}, ${2:\\$predicate as xs:anyAtomicType*}, ${3:\\$object as xs:anyAtomicType*}, ${4:\\$operator as xs:string*}, ${5:\\$options as xs:string*}, ${6:\\$query as cts:query?})","trigger":"cts:triples","description":"($subject,$predicate,$object,$operator,$options,$query)"},{"content":"cts:triples(${1:\\$subject as xs:anyAtomicType*}, ${2:\\$predicate as xs:anyAtomicType*}, ${3:\\$object as xs:anyAtomicType*}, ${4:\\$operator as xs:string*}, ${5:\\$options as xs:string*}, ${6:\\$query as cts:query?}, ${7:\\$forest-ids as xs:unsignedLong*})","trigger":"cts:triples","description":"($subject,$predicate,$object,$operator,$options,$query,$forest-ids)"},{"content":"cts:triples()","trigger":"cts:triples"},{"content":"cts:unordered()","trigger":"cts:unordered"},{"content":"cts:uri-match(${1:\\$pattern as xs:string})","trigger":"cts:uri-match","description":"($pattern)"},{"content":"cts:uri-match(${1:\\$pattern as xs:string}, ${2:\\$options as xs:string*})","trigger":"cts:uri-match","description":"($pattern,$options)"},{"content":"cts:uri-match(${1:\\$pattern as xs:string}, ${2:\\$options as xs:string*}, ${3:\\$query as cts:query?})","trigger":"cts:uri-match","description":"($pattern,$options,$query)"},{"content":"cts:uri-match(${1:\\$pattern as xs:string}, ${2:\\$options as xs:string*}, ${3:\\$query as cts:query?}, ${4:\\$quality-weight as xs:double?})","trigger":"cts:uri-match","description":"($pattern,$options,$query,$quality-weight)"},{"content":"cts:uri-match(${1:\\$pattern as xs:string}, ${2:\\$options as xs:string*}, ${3:\\$query as cts:query?}, ${4:\\$quality-weight as xs:double?}, ${5:\\$forest-ids as xs:unsignedLong*})","trigger":"cts:uri-match","description":"($pattern,$options,$query,$quality-weight,$forest-ids)"},{"content":"cts:uri-reference()","trigger":"cts:uri-reference"},{"content":"cts:uris(${1:\\$start as xs:string?})","trigger":"cts:uris","description":"($start)"},{"content":"cts:uris(${1:\\$start as xs:string?}, ${2:\\$options as xs:string*})","trigger":"cts:uris","description":"($start,$options)"},{"content":"cts:uris(${1:\\$start as xs:string?}, ${2:\\$options as xs:string*}, ${3:\\$query as cts:query?})","trigger":"cts:uris","description":"($start,$options,$query)"},{"content":"cts:uris(${1:\\$start as xs:string?}, ${2:\\$options as xs:string*}, ${3:\\$query as cts:query?}, ${4:\\$quality-weight as xs:double?})","trigger":"cts:uris","description":"($start,$options,$query,$quality-weight)"},{"content":"cts:uris(${1:\\$start as xs:string?}, ${2:\\$options as xs:string*}, ${3:\\$query as cts:query?}, ${4:\\$quality-weight as xs:double?}, ${5:\\$forest-ids as xs:unsignedLong*})","trigger":"cts:uris","description":"($start,$options,$query,$quality-weight,$forest-ids)"},{"content":"cts:uris()","trigger":"cts:uris"},{"content":"cts:valid-index-path(${1:\\$string as xs:string}, ${2:\\$ignorens as xs:boolean})","trigger":"cts:valid-index-path","description":"($string,$ignorens)"},{"content":"cts:value-co-occurrences(${1:\\$range-index-1 as cts:reference}, ${2:\\$range-index-2 as cts:reference})","trigger":"cts:value-co-occurrences","description":"($range-index-1,$range-index-2)"},{"content":"cts:value-co-occurrences(${1:\\$range-index-1 as cts:reference}, ${2:\\$range-index-2 as cts:reference}, ${3:\\$options as xs:string*})","trigger":"cts:value-co-occurrences","description":"($range-index-1,$range-index-2,$options)"},{"content":"cts:value-co-occurrences(${1:\\$range-index-1 as cts:reference}, ${2:\\$range-index-2 as cts:reference}, ${3:\\$options as xs:string*}, ${4:\\$query as cts:query?})","trigger":"cts:value-co-occurrences","description":"($range-index-1,$range-index-2,$options,$query)"},{"content":"cts:value-co-occurrences(${1:\\$range-index-1 as cts:reference}, ${2:\\$range-index-2 as cts:reference}, ${3:\\$options as xs:string*}, ${4:\\$query as cts:query?}, ${5:\\$quality-weight as xs:double?})","trigger":"cts:value-co-occurrences","description":"($range-index-1,$range-index-2,$options,$query,$quality-weight)"},{"content":"cts:value-co-occurrences(${1:\\$range-index-1 as cts:reference}, ${2:\\$range-index-2 as cts:reference}, ${3:\\$options as xs:string*}, ${4:\\$query as cts:query?}, ${5:\\$quality-weight as xs:double?}, ${6:\\$forest-ids as xs:unsignedLong*})","trigger":"cts:value-co-occurrences","description":"($range-index-1,$range-index-2,$options,$query,$quality-weight,$forest-ids)"},{"content":"cts:value-match(${1:\\$range-indexes as cts:reference*}, ${2:\\$pattern as xs:anyAtomicType})","trigger":"cts:value-match","description":"($range-indexes,$pattern)"},{"content":"cts:value-match(${1:\\$range-indexes as cts:reference*}, ${2:\\$pattern as xs:anyAtomicType}, ${3:\\$options as xs:string*})","trigger":"cts:value-match","description":"($range-indexes,$pattern,$options)"},{"content":"cts:value-match(${1:\\$range-indexes as cts:reference*}, ${2:\\$pattern as xs:anyAtomicType}, ${3:\\$options as xs:string*}, ${4:\\$query as cts:query?})","trigger":"cts:value-match","description":"($range-indexes,$pattern,$options,$query)"},{"content":"cts:value-match(${1:\\$range-indexes as cts:reference*}, ${2:\\$pattern as xs:anyAtomicType}, ${3:\\$options as xs:string*}, ${4:\\$query as cts:query?}, ${5:\\$quality-weight as xs:double?})","trigger":"cts:value-match","description":"($range-indexes,$pattern,$options,$query,$quality-weight)"},{"content":"cts:value-match(${1:\\$range-indexes as cts:reference*}, ${2:\\$pattern as xs:anyAtomicType}, ${3:\\$options as xs:string*}, ${4:\\$query as cts:query?}, ${5:\\$quality-weight as xs:double?}, ${6:\\$forest-ids as xs:unsignedLong*})","trigger":"cts:value-match","description":"($range-indexes,$pattern,$options,$query,$quality-weight,$forest-ids)"},{"content":"cts:value-ranges(${1:\\$range-indexes as cts:reference*})","trigger":"cts:value-ranges","description":"($range-indexes)"},{"content":"cts:value-ranges(${1:\\$range-indexes as cts:reference*}, ${2:\\$bounds as xs:anyAtomicType*})","trigger":"cts:value-ranges","description":"($range-indexes,$bounds)"},{"content":"cts:value-ranges(${1:\\$range-indexes as cts:reference*}, ${2:\\$bounds as xs:anyAtomicType*}, ${3:\\$options as xs:string*})","trigger":"cts:value-ranges","description":"($range-indexes,$bounds,$options)"},{"content":"cts:value-ranges(${1:\\$range-indexes as cts:reference*}, ${2:\\$bounds as xs:anyAtomicType*}, ${3:\\$options as xs:string*}, ${4:\\$query as cts:query?})","trigger":"cts:value-ranges","description":"($range-indexes,$bounds,$options,$query)"},{"content":"cts:value-ranges(${1:\\$range-indexes as cts:reference*}, ${2:\\$bounds as xs:anyAtomicType*}, ${3:\\$options as xs:string*}, ${4:\\$query as cts:query?}, ${5:\\$quality-weight as xs:double?})","trigger":"cts:value-ranges","description":"($range-indexes,$bounds,$options,$query,$quality-weight)"},{"content":"cts:value-ranges(${1:\\$range-indexes as cts:reference*}, ${2:\\$bounds as xs:anyAtomicType*}, ${3:\\$options as xs:string*}, ${4:\\$query as cts:query?}, ${5:\\$quality-weight as xs:double?}, ${6:\\$forest-ids as xs:unsignedLong*})","trigger":"cts:value-ranges","description":"($range-indexes,$bounds,$options,$query,$quality-weight,$forest-ids)"},{"content":"cts:value-tuples(${1:\\$range-indexes as cts:reference*})","trigger":"cts:value-tuples","description":"($range-indexes)"},{"content":"cts:value-tuples(${1:\\$range-indexes as cts:reference*}, ${2:\\$options as xs:string*})","trigger":"cts:value-tuples","description":"($range-indexes,$options)"},{"content":"cts:value-tuples(${1:\\$range-indexes as cts:reference*}, ${2:\\$options as xs:string*}, ${3:\\$query as cts:query?})","trigger":"cts:value-tuples","description":"($range-indexes,$options,$query)"},{"content":"cts:value-tuples(${1:\\$range-indexes as cts:reference*}, ${2:\\$options as xs:string*}, ${3:\\$query as cts:query?}, ${4:\\$quality-weight as xs:double?})","trigger":"cts:value-tuples","description":"($range-indexes,$options,$query,$quality-weight)"},{"content":"cts:value-tuples(${1:\\$range-indexes as cts:reference*}, ${2:\\$options as xs:string*}, ${3:\\$query as cts:query?}, ${4:\\$quality-weight as xs:double?}, ${5:\\$forest-ids as xs:unsignedLong*})","trigger":"cts:value-tuples","description":"($range-indexes,$options,$query,$quality-weight,$forest-ids)"},{"content":"cts:values(${1:\\$range-indexes as cts:reference*})","trigger":"cts:values","description":"($range-indexes)"},{"content":"cts:values(${1:\\$range-indexes as cts:reference*}, ${2:\\$start as xs:anyAtomicType?})","trigger":"cts:values","description":"($range-indexes,$start)"},{"content":"cts:values(${1:\\$range-indexes as cts:reference*}, ${2:\\$start as xs:anyAtomicType?}, ${3:\\$options as xs:string*})","trigger":"cts:values","description":"($range-indexes,$start,$options)"},{"content":"cts:values(${1:\\$range-indexes as cts:reference*}, ${2:\\$start as xs:anyAtomicType?}, ${3:\\$options as xs:string*}, ${4:\\$query as cts:query?})","trigger":"cts:values","description":"($range-indexes,$start,$options,$query)"},{"content":"cts:values(${1:\\$range-indexes as cts:reference*}, ${2:\\$start as xs:anyAtomicType?}, ${3:\\$options as xs:string*}, ${4:\\$query as cts:query?}, ${5:\\$quality-weight as xs:double?})","trigger":"cts:values","description":"($range-indexes,$start,$options,$query,$quality-weight)"},{"content":"cts:values(${1:\\$range-indexes as cts:reference*}, ${2:\\$start as xs:anyAtomicType?}, ${3:\\$options as xs:string*}, ${4:\\$query as cts:query?}, ${5:\\$quality-weight as xs:double?}, ${6:\\$forest-ids as xs:unsignedLong*})","trigger":"cts:values","description":"($range-indexes,$start,$options,$query,$quality-weight,$forest-ids)"},{"content":"cts:variance(${1:\\$range-index as cts:reference})","trigger":"cts:variance","description":"($range-index)"},{"content":"cts:variance(${1:\\$range-index as cts:reference}, ${2:\\$options as xs:string*})","trigger":"cts:variance","description":"($range-index,$options)"},{"content":"cts:variance(${1:\\$range-index as cts:reference}, ${2:\\$options as xs:string*}, ${3:\\$query as cts:query?})","trigger":"cts:variance","description":"($range-index,$options,$query)"},{"content":"cts:variance(${1:\\$range-index as cts:reference}, ${2:\\$options as xs:string*}, ${3:\\$query as cts:query?}, ${4:\\$forest-ids as xs:unsignedLong*})","trigger":"cts:variance","description":"($range-index,$options,$query,$forest-ids)"},{"content":"cts:variance-p(${1:\\$range-index as cts:reference})","trigger":"cts:variance-p","description":"($range-index)"},{"content":"cts:variance-p(${1:\\$range-index as cts:reference}, ${2:\\$options as xs:string*})","trigger":"cts:variance-p","description":"($range-index,$options)"},{"content":"cts:variance-p(${1:\\$range-index as cts:reference}, ${2:\\$options as xs:string*}, ${3:\\$query as cts:query?})","trigger":"cts:variance-p","description":"($range-index,$options,$query)"},{"content":"cts:variance-p(${1:\\$range-index as cts:reference}, ${2:\\$options as xs:string*}, ${3:\\$query as cts:query?}, ${4:\\$forest-ids as xs:unsignedLong*})","trigger":"cts:variance-p","description":"($range-index,$options,$query,$forest-ids)"},{"content":"cts:walk(${1:\\$node as node()}, ${2:\\$query as cts:query}, ${3:\\$expr as item()*})","trigger":"cts:walk","description":"($node,$query,$expr)"},{"content":"cts:word-match(${1:\\$pattern as xs:string})","trigger":"cts:word-match","description":"($pattern)"},{"content":"cts:word-match(${1:\\$pattern as xs:string}, ${2:\\$options as xs:string*})","trigger":"cts:word-match","description":"($pattern,$options)"},{"content":"cts:word-match(${1:\\$pattern as xs:string}, ${2:\\$options as xs:string*}, ${3:\\$query as cts:query?})","trigger":"cts:word-match","description":"($pattern,$options,$query)"},{"content":"cts:word-match(${1:\\$pattern as xs:string}, ${2:\\$options as xs:string*}, ${3:\\$query as cts:query?}, ${4:\\$quality-weight as xs:double?})","trigger":"cts:word-match","description":"($pattern,$options,$query,$quality-weight)"},{"content":"cts:word-match(${1:\\$pattern as xs:string}, ${2:\\$options as xs:string*}, ${3:\\$query as cts:query?}, ${4:\\$quality-weight as xs:double?}, ${5:\\$forest-ids as xs:unsignedLong*})","trigger":"cts:word-match","description":"($pattern,$options,$query,$quality-weight,$forest-ids)"},{"content":"cts:word-query(${1:\\$text as xs:string*})","trigger":"cts:word-query","description":"($text)"},{"content":"cts:word-query(${1:\\$text as xs:string*}, ${2:\\$options as xs:string*})","trigger":"cts:word-query","description":"($text,$options)"},{"content":"cts:word-query(${1:\\$text as xs:string*}, ${2:\\$options as xs:string*}, ${3:\\$weight as xs:double?})","trigger":"cts:word-query","description":"($text,$options,$weight)"},{"content":"cts:word-query-options(${1:\\$query as cts:word-query})","trigger":"cts:word-query-options","description":"($query)"},{"content":"cts:word-query-text(${1:\\$query as cts:word-query})","trigger":"cts:word-query-text","description":"($query)"},{"content":"cts:word-query-weight(${1:\\$query as cts:word-query})","trigger":"cts:word-query-weight","description":"($query)"},{"content":"cts:words(${1:\\$start as xs:string?})","trigger":"cts:words","description":"($start)"},{"content":"cts:words(${1:\\$start as xs:string?}, ${2:\\$options as xs:string*})","trigger":"cts:words","description":"($start,$options)"},{"content":"cts:words(${1:\\$start as xs:string?}, ${2:\\$options as xs:string*}, ${3:\\$query as cts:query?})","trigger":"cts:words","description":"($start,$options,$query)"},{"content":"cts:words(${1:\\$start as xs:string?}, ${2:\\$options as xs:string*}, ${3:\\$query as cts:query?}, ${4:\\$quality-weight as xs:double?})","trigger":"cts:words","description":"($start,$options,$query,$quality-weight)"},{"content":"cts:words(${1:\\$start as xs:string?}, ${2:\\$options as xs:string*}, ${3:\\$query as cts:query?}, ${4:\\$quality-weight as xs:double?}, ${5:\\$forest-ids as xs:unsignedLong*})","trigger":"cts:words","description":"($start,$options,$query,$quality-weight,$forest-ids)"},{"content":"cts:words()","trigger":"cts:words"},{"content":"cvt:basename(${1:\\$uri as xs:string})","trigger":"cvt:basename","description":"($uri)"},{"content":"cvt:basepath(${1:\\$uri as xs:string})","trigger":"cvt:basepath","description":"($uri)"},{"content":"cvt:destination-uri(${1:\\$uri as xs:string}, ${2:\\$extension as xs:string})","trigger":"cvt:destination-uri","description":"($uri,$extension)"},{"content":"cvt:part-uri(${1:\\$uri as xs:string}, ${2:\\$part as xs:string})","trigger":"cvt:part-uri","description":"($uri,$part)"},{"content":"cvt:save-converted-documents(${1:\\$source-uri as xs:string}, ${2:\\$destination-uri as xs:string}, ${3:\\$manifest as element()}, ${4:\\$docs as document-node()*})","trigger":"cvt:save-converted-documents","description":"($source-uri,$destination-uri,$manifest,$docs)"},{"content":"cvt:save-converted-documents(${1:\\$source-uri as xs:string}, ${2:\\$destination-uri as xs:string}, ${3:\\$manifest as element()}, ${4:\\$docs as document-node()*}, ${5:\\$destination-collections as xs:string*})","trigger":"cvt:save-converted-documents","description":"($source-uri,$destination-uri,$manifest,$docs,$destination-collections)"},{"content":"dbg:attach(${1:\\$request-id as xs:unsignedLong})","trigger":"dbg:attach","description":"($request-id)"},{"content":"dbg:attached(${1:\\$server as xs:unsignedLong})","trigger":"dbg:attached","description":"($server)"},{"content":"dbg:attached()","trigger":"dbg:attached"},{"content":"dbg:break(${1:\\$request as xs:unsignedLong})","trigger":"dbg:break","description":"($request)"},{"content":"dbg:break(${1:\\$request as xs:unsignedLong}, ${2:\\$expression as xs:unsignedLong})","trigger":"dbg:break","description":"($request,$expression)"},{"content":"dbg:breakpoints(${1:\\$request as xs:unsignedLong})","trigger":"dbg:breakpoints","description":"($request)"},{"content":"dbg:clear(${1:\\$request as xs:unsignedLong}, ${2:\\$expression as xs:unsignedLong})","trigger":"dbg:clear","description":"($request,$expression)"},{"content":"dbg:connect(${1:\\$server as xs:unsignedLong})","trigger":"dbg:connect","description":"($server)"},{"content":"dbg:connected()","trigger":"dbg:connected"},{"content":"dbg:continue(${1:\\$request as xs:unsignedLong})","trigger":"dbg:continue","description":"($request)"},{"content":"dbg:detach(${1:\\$request-id as xs:unsignedLong})","trigger":"dbg:detach","description":"($request-id)"},{"content":"dbg:disconnect(${1:\\$server as xs:unsignedLong})","trigger":"dbg:disconnect","description":"($server)"},{"content":"dbg:eval(${1:\\$xquery as xs:string})","trigger":"dbg:eval","description":"($xquery)"},{"content":"dbg:eval(${1:\\$xquery as xs:string}, ${2:\\$vars as item()*})","trigger":"dbg:eval","description":"($xquery,$vars)"},{"content":"dbg:eval(${1:\\$xquery as xs:string}, ${2:\\$vars as item()*}, ${3:\\$options as (element()|map:map)?})","trigger":"dbg:eval","description":"($xquery,$vars,$options)"},{"content":"dbg:expr(${1:\\$request as xs:unsignedLong}, ${2:\\$expression as xs:unsignedLong})","trigger":"dbg:expr","description":"($request,$expression)"},{"content":"dbg:finish(${1:\\$request as xs:unsignedLong})","trigger":"dbg:finish","description":"($request)"},{"content":"dbg:function(${1:\\$request as xs:unsignedLong}, ${2:\\$uri as xs:string}, ${3:\\$function as xs:QName})","trigger":"dbg:function","description":"($request,$uri,$function)"},{"content":"dbg:invoke(${1:\\$uri as xs:string})","trigger":"dbg:invoke","description":"($uri)"},{"content":"dbg:invoke(${1:\\$uri as xs:string}, ${2:\\$vars as item()*})","trigger":"dbg:invoke","description":"($uri,$vars)"},{"content":"dbg:invoke(${1:\\$uri as xs:string}, ${2:\\$vars as item()*}, ${3:\\$options as (element()|map:map)?})","trigger":"dbg:invoke","description":"($uri,$vars,$options)"},{"content":"dbg:line(${1:\\$request as xs:unsignedLong}, ${2:\\$uri as xs:string}, ${3:\\$line as xs:unsignedInt})","trigger":"dbg:line","description":"($request,$uri,$line)"},{"content":"dbg:next(${1:\\$request as xs:unsignedLong})","trigger":"dbg:next","description":"($request)"},{"content":"dbg:out(${1:\\$request as xs:unsignedLong})","trigger":"dbg:out","description":"($request)"},{"content":"dbg:stack(${1:\\$request as xs:unsignedLong})","trigger":"dbg:stack","description":"($request)"},{"content":"dbg:status(${1:\\$request-id as xs:unsignedLong*})","trigger":"dbg:status","description":"($request-id)"},{"content":"dbg:step(${1:\\$request as xs:unsignedLong})","trigger":"dbg:step","description":"($request)"},{"content":"dbg:stop()","trigger":"dbg:stop"},{"content":"dbg:stopped(${1:\\$server as xs:unsignedLong})","trigger":"dbg:stopped","description":"($server)"},{"content":"dbg:stopped()","trigger":"dbg:stopped"},{"content":"dbg:value(${1:\\$request as xs:unsignedLong})","trigger":"dbg:value","description":"($request)"},{"content":"dbg:value(${1:\\$request as xs:unsignedLong}, ${2:\\$expr as xs:string})","trigger":"dbg:value","description":"($request,$expr)"},{"content":"dbg:wait(${1:\\$request-id as xs:unsignedLong*}, ${2:\\$timeout as xs:unsignedLong})","trigger":"dbg:wait","description":"($request-id,$timeout)"},{"content":"dbk:convert(${1:\\$doc as node()?}, ${2:\\$options as element()?})","trigger":"dbk:convert","description":"($doc,$options)"},{"content":"dls:as-of-query(${1:\\$when as xs:dateTime})","trigger":"dls:as-of-query","description":"($when)"},{"content":"dls:author-query(${1:\\$author as xs:unsignedLong})","trigger":"dls:author-query","description":"($author)"},{"content":"dls:break-checkout(${1:\\$uri as xs:string}, ${2:\\$deep as xs:boolean})","trigger":"dls:break-checkout","description":"($uri,$deep)"},{"content":"dls:document-add-collections(${1:\\$uri as xs:string}, ${2:\\$collections as xs:string*})","trigger":"dls:document-add-collections","description":"($uri,$collections)"},{"content":"dls:document-add-permissions(${1:\\$uri as xs:string}, ${2:\\$permissions as element(sec:permission)*})","trigger":"dls:document-add-permissions","description":"($uri,$permissions)"},{"content":"dls:document-add-properties(${1:\\$uri as xs:string}, ${2:\\$properties as element()*})","trigger":"dls:document-add-properties","description":"($uri,$properties)"},{"content":"dls:document-checkin(${1:\\$uri as xs:string}, ${2:\\$deep as xs:boolean})","trigger":"dls:document-checkin","description":"($uri,$deep)"},{"content":"dls:document-checkout(${1:\\$uri as xs:string}, ${2:\\$deep as xs:boolean})","trigger":"dls:document-checkout","description":"($uri,$deep)"},{"content":"dls:document-checkout(${1:\\$uri as xs:string}, ${2:\\$deep as xs:boolean}, ${3:\\$annotation as item()?})","trigger":"dls:document-checkout","description":"($uri,$deep,$annotation)"},{"content":"dls:document-checkout(${1:\\$uri as xs:string}, ${2:\\$deep as xs:boolean}, ${3:\\$annotation as item()?}, ${4:\\$timeout as xs:unsignedLong?})","trigger":"dls:document-checkout","description":"($uri,$deep,$annotation,$timeout)"},{"content":"dls:document-checkout-status(${1:\\$uri as xs:string})","trigger":"dls:document-checkout-status","description":"($uri)"},{"content":"dls:document-checkout-update-checkin(${1:\\$uri as xs:string}, ${2:\\$doc as node()}, ${3:\\$annotation as item()*}, ${4:\\$retain-history as xs:boolean})","trigger":"dls:document-checkout-update-checkin","description":"($uri,$doc,$annotation,$retain-history)"},{"content":"dls:document-checkout-update-checkin(${1:\\$uri as xs:string}, ${2:\\$doc as node()}, ${3:\\$annotation as item()*}, ${4:\\$retain-history as xs:boolean}, ${5:\\$permissions as element(sec:permission)*})","trigger":"dls:document-checkout-update-checkin","description":"($uri,$doc,$annotation,$retain-history,$permissions)"},{"content":"dls:document-checkout-update-checkin(${1:\\$uri as xs:string}, ${2:\\$doc as node()}, ${3:\\$annotation as item()*}, ${4:\\$retain-history as xs:boolean}, ${5:\\$permissions as element(sec:permission)*}, ${6:\\$collections as xs:string*})","trigger":"dls:document-checkout-update-checkin","description":"($uri,$doc,$annotation,$retain-history,$permissions,$collections)"},{"content":"dls:document-checkout-update-checkin(${1:\\$uri as xs:string}, ${2:\\$doc as node()}, ${3:\\$annotation as item()*}, ${4:\\$retain-history as xs:boolean}, ${5:\\$permissions as element(sec:permission)*}, ${6:\\$collections as xs:string*}, ${7:\\$quality as xs:integer?})","trigger":"dls:document-checkout-update-checkin","description":"($uri,$doc,$annotation,$retain-history,$permissions,$collections,$quality)"},{"content":"dls:document-checkout-update-checkin(${1:\\$uri as xs:string}, ${2:\\$doc as node()}, ${3:\\$annotation as item()*}, ${4:\\$retain-history as xs:boolean}, ${5:\\$permissions as element(sec:permission)*}, ${6:\\$collections as xs:string*}, ${7:\\$quality as xs:integer?}, ${8:\\$forest-ids as xs:unsignedLong*})","trigger":"dls:document-checkout-update-checkin","description":"($uri,$doc,$annotation,$retain-history,$permissions,$collections,$quality,$forest-ids)"},{"content":"dls:document-delete(${1:\\$uri as xs:string}, ${2:\\$keep-old-versions as xs:boolean}, ${3:\\$retain-history as xs:boolean})","trigger":"dls:document-delete","description":"($uri,$keep-old-versions,$retain-history)"},{"content":"dls:document-extract-part(${1:\\$new-uri as xs:string}, ${2:\\$element as element()}, ${3:\\$annotation as item()*}, ${4:\\$retain-history as xs:boolean})","trigger":"dls:document-extract-part","description":"($new-uri,$element,$annotation,$retain-history)"},{"content":"dls:document-extract-part(${1:\\$new-uri as xs:string}, ${2:\\$element as element()}, ${3:\\$annotation as item()*}, ${4:\\$retain-history as xs:boolean}, ${5:\\$permissions as element(sec:permission)*})","trigger":"dls:document-extract-part","description":"($new-uri,$element,$annotation,$retain-history,$permissions)"},{"content":"dls:document-extract-part(${1:\\$new-uri as xs:string}, ${2:\\$element as element()}, ${3:\\$annotation as item()*}, ${4:\\$retain-history as xs:boolean}, ${5:\\$permissions as element(sec:permission)*}, ${6:\\$collections as xs:string*})","trigger":"dls:document-extract-part","description":"($new-uri,$element,$annotation,$retain-history,$permissions,$collections)"},{"content":"dls:document-extract-part(${1:\\$new-uri as xs:string}, ${2:\\$element as element()}, ${3:\\$annotation as item()*}, ${4:\\$retain-history as xs:boolean}, ${5:\\$permissions as element(sec:permission)*}, ${6:\\$collections as xs:string*}, ${7:\\$quality as xs:integer?})","trigger":"dls:document-extract-part","description":"($new-uri,$element,$annotation,$retain-history,$permissions,$collections,$quality)"},{"content":"dls:document-extract-part(${1:\\$new-uri as xs:string}, ${2:\\$element as element()}, ${3:\\$annotation as item()*}, ${4:\\$retain-history as xs:boolean}, ${5:\\$permissions as element(sec:permission)*}, ${6:\\$collections as xs:string*}, ${7:\\$quality as xs:integer?}, ${8:\\$forest-ids as xs:unsignedLong*})","trigger":"dls:document-extract-part","description":"($new-uri,$element,$annotation,$retain-history,$permissions,$collections,$quality,$forest-ids)"},{"content":"dls:document-get-permissions(${1:\\$uri as xs:string})","trigger":"dls:document-get-permissions","description":"($uri)"},{"content":"dls:document-history(${1:\\$uri as xs:string})","trigger":"dls:document-history","description":"($uri)"},{"content":"dls:document-include-query(${1:\\$uri as xs:string})","trigger":"dls:document-include-query","description":"($uri)"},{"content":"dls:document-insert-and-manage(${1:\\$uri as xs:string}, ${2:\\$deep as xs:boolean}, ${3:\\$doc as node()})","trigger":"dls:document-insert-and-manage","description":"($uri,$deep,$doc)"},{"content":"dls:document-insert-and-manage(${1:\\$uri as xs:string}, ${2:\\$deep as xs:boolean}, ${3:\\$doc as node()}, ${4:\\$annotation as item()*})","trigger":"dls:document-insert-and-manage","description":"($uri,$deep,$doc,$annotation)"},{"content":"dls:document-insert-and-manage(${1:\\$uri as xs:string}, ${2:\\$deep as xs:boolean}, ${3:\\$doc as node()}, ${4:\\$annotation as item()*}, ${5:\\$permissions as element(sec:permission)*})","trigger":"dls:document-insert-and-manage","description":"($uri,$deep,$doc,$annotation,$permissions)"},{"content":"dls:document-insert-and-manage(${1:\\$uri as xs:string}, ${2:\\$deep as xs:boolean}, ${3:\\$doc as node()}, ${4:\\$annotation as item()*}, ${5:\\$permissions as element(sec:permission)*}, ${6:\\$collections as xs:string*})","trigger":"dls:document-insert-and-manage","description":"($uri,$deep,$doc,$annotation,$permissions,$collections)"},{"content":"dls:document-insert-and-manage(${1:\\$uri as xs:string}, ${2:\\$deep as xs:boolean}, ${3:\\$doc as node()}, ${4:\\$annotation as item()*}, ${5:\\$permissions as element(sec:permission)*}, ${6:\\$collections as xs:string*}, ${7:\\$quality as xs:integer?})","trigger":"dls:document-insert-and-manage","description":"($uri,$deep,$doc,$annotation,$permissions,$collections,$quality)"},{"content":"dls:document-insert-and-manage(${1:\\$uri as xs:string}, ${2:\\$deep as xs:boolean}, ${3:\\$doc as node()}, ${4:\\$annotation as item()*}, ${5:\\$permissions as element(sec:permission)*}, ${6:\\$collections as xs:string*}, ${7:\\$quality as xs:integer?}, ${8:\\$forest-ids as xs:unsignedLong*})","trigger":"dls:document-insert-and-manage","description":"($uri,$deep,$doc,$annotation,$permissions,$collections,$quality,$forest-ids)"},{"content":"dls:document-is-managed(${1:\\$uri as xs:string})","trigger":"dls:document-is-managed","description":"($uri)"},{"content":"dls:document-manage(${1:\\$uri as xs:string}, ${2:\\$deep as xs:boolean})","trigger":"dls:document-manage","description":"($uri,$deep)"},{"content":"dls:document-manage(${1:\\$uri as xs:string}, ${2:\\$deep as xs:boolean}, ${3:\\$annotation as item()*})","trigger":"dls:document-manage","description":"($uri,$deep,$annotation)"},{"content":"dls:document-purge(${1:\\$uri as xs:string}, ${2:\\$delete as xs:boolean}, ${3:\\$retain-history as xs:boolean})","trigger":"dls:document-purge","description":"($uri,$delete,$retain-history)"},{"content":"dls:document-remove-collections(${1:\\$uri as xs:string}, ${2:\\$collections as xs:string*})","trigger":"dls:document-remove-collections","description":"($uri,$collections)"},{"content":"dls:document-remove-permissions(${1:\\$uri as xs:string}, ${2:\\$permissions as element(sec:permission)*})","trigger":"dls:document-remove-permissions","description":"($uri,$permissions)"},{"content":"dls:document-remove-properties(${1:\\$uri as xs:string}, ${2:\\$property-names as xs:QName*})","trigger":"dls:document-remove-properties","description":"($uri,$property-names)"},{"content":"dls:document-retention-rules(${1:\\$uri as xs:string})","trigger":"dls:document-retention-rules","description":"($uri)"},{"content":"dls:document-set-collections(${1:\\$uri as xs:string}, ${2:\\$collections as xs:string*})","trigger":"dls:document-set-collections","description":"($uri,$collections)"},{"content":"dls:document-set-permissions(${1:\\$uri as xs:string}, ${2:\\$permissions as element(sec:permission)*})","trigger":"dls:document-set-permissions","description":"($uri,$permissions)"},{"content":"dls:document-set-properties(${1:\\$uri as xs:string}, ${2:\\$properties as element()*})","trigger":"dls:document-set-properties","description":"($uri,$properties)"},{"content":"dls:document-set-property(${1:\\$uri as xs:string}, ${2:\\$property as element()})","trigger":"dls:document-set-property","description":"($uri,$property)"},{"content":"dls:document-set-quality(${1:\\$uri as xs:string}, ${2:\\$quality as xs:int})","trigger":"dls:document-set-quality","description":"($uri,$quality)"},{"content":"dls:document-unmanage(${1:\\$uri as xs:string}, ${2:\\$deep as xs:boolean}, ${3:\\$remove-versions as xs:boolean})","trigger":"dls:document-unmanage","description":"($uri,$deep,$remove-versions)"},{"content":"dls:document-update(${1:\\$uri as xs:string}, ${2:\\$doc as node()}, ${3:\\$annotation as item()*}, ${4:\\$retain-history as xs:boolean})","trigger":"dls:document-update","description":"($uri,$doc,$annotation,$retain-history)"},{"content":"dls:document-update(${1:\\$uri as xs:string}, ${2:\\$doc as node()}, ${3:\\$annotation as item()*}, ${4:\\$retain-history as xs:boolean}, ${5:\\$permissions as element(sec:permission)*})","trigger":"dls:document-update","description":"($uri,$doc,$annotation,$retain-history,$permissions)"},{"content":"dls:document-update(${1:\\$uri as xs:string}, ${2:\\$doc as node()}, ${3:\\$annotation as item()*}, ${4:\\$retain-history as xs:boolean}, ${5:\\$permissions as element(sec:permission)*}, ${6:\\$collections as xs:string*})","trigger":"dls:document-update","description":"($uri,$doc,$annotation,$retain-history,$permissions,$collections)"},{"content":"dls:document-update(${1:\\$uri as xs:string}, ${2:\\$doc as node()}, ${3:\\$annotation as item()*}, ${4:\\$retain-history as xs:boolean}, ${5:\\$permissions as element(sec:permission)*}, ${6:\\$collections as xs:string*}, ${7:\\$quality as xs:integer?})","trigger":"dls:document-update","description":"($uri,$doc,$annotation,$retain-history,$permissions,$collections,$quality)"},{"content":"dls:document-update(${1:\\$uri as xs:string}, ${2:\\$doc as node()}, ${3:\\$annotation as item()*}, ${4:\\$retain-history as xs:boolean}, ${5:\\$permissions as element(sec:permission)*}, ${6:\\$collections as xs:string*}, ${7:\\$quality as xs:integer?}, ${8:\\$forest-ids as xs:unsignedLong*})","trigger":"dls:document-update","description":"($uri,$doc,$annotation,$retain-history,$permissions,$collections,$quality,$forest-ids)"},{"content":"dls:document-version(${1:\\$uri as xs:string}, ${2:\\$version-number as xs:unsignedInt})","trigger":"dls:document-version","description":"($uri,$version-number)"},{"content":"dls:document-version-as-of(${1:\\$uri as xs:string}, ${2:\\$as-of as xs:dateTime})","trigger":"dls:document-version-as-of","description":"($uri,$as-of)"},{"content":"dls:document-version-delete(${1:\\$uri as xs:string}, ${2:\\$version as xs:integer}, ${3:\\$retain-history as xs:boolean})","trigger":"dls:document-version-delete","description":"($uri,$version,$retain-history)"},{"content":"dls:document-version-query(${1:\\$version as xs:unsignedLong})","trigger":"dls:document-version-query","description":"($version)"},{"content":"dls:document-version-uri(${1:\\$document-uri as xs:string}, ${2:\\$version as xs:integer})","trigger":"dls:document-version-uri","description":"($document-uri,$version)"},{"content":"dls:document-version-uris(${1:\\$uri as xs:string})","trigger":"dls:document-version-uris","description":"($uri)"},{"content":"dls:document-versions-query(${1:\\$uri as xs:string})","trigger":"dls:document-versions-query","description":"($uri)"},{"content":"dls:documents-query()","trigger":"dls:documents-query"},{"content":"dls:link-expand(${1:\\$context as node()}, ${2:\\$ref as element(xi:include)}, ${3:\\$restriction as cts:query?})","trigger":"dls:link-expand","description":"($context,$ref,$restriction)"},{"content":"dls:link-references(${1:\\$node as node()}, ${2:\\$restriction as cts:query?})","trigger":"dls:link-references","description":"($node,$restriction)"},{"content":"dls:node-expand(${1:\\$node as node()}, ${2:\\$restriction as cts:query?})","trigger":"dls:node-expand","description":"($node,$restriction)"},{"content":"dls:purge(${1:\\$delete as xs:boolean}, ${2:\\$retain-history as xs:boolean})","trigger":"dls:purge","description":"($delete,$retain-history)"},{"content":"dls:retention-rule(${1:\\$name as xs:string}, ${2:\\$comment as item()*}, ${3:\\$num-versions as xs:unsignedInt?}, ${4:\\$duration as xs:duration?}, ${5:\\$document-query-text as xs:string?}, ${6:\\$document-query as cts:query?})","trigger":"dls:retention-rule","description":"($name,$comment,$num-versions,$duration,$document-query-text,$document-query)"},{"content":"dls:retention-rule-insert(${1:\\$rules as element(dls:retention-rule)*})","trigger":"dls:retention-rule-insert","description":"($rules)"},{"content":"dls:retention-rule-remove(${1:\\$names as xs:string*})","trigger":"dls:retention-rule-remove","description":"($names)"},{"content":"dls:retention-rules(${1:\\$names as xs:string*})","trigger":"dls:retention-rules","description":"($names)"},{"content":"dom:add-permissions(${1:\\$domain-name as xs:string}, ${2:\\$permissions as item()*})","trigger":"dom:add-permissions","description":"($domain-name,$permissions)"},{"content":"dom:add-pipeline(${1:\\$domain-name as xs:string}, ${2:\\$pipeline-id as xs:unsignedLong})","trigger":"dom:add-pipeline","description":"($domain-name,$pipeline-id)"},{"content":"dom:collection()","trigger":"dom:collection"},{"content":"dom:configuration-create(${1:\\$restart-user as xs:string}, ${2:\\$evaluation-context as element(dom:evaluation-context)}, ${3:\\$default-domain as xs:unsignedLong}, ${4:\\$permissions as element(sec:permission)*})","trigger":"dom:configuration-create","description":"($restart-user,$evaluation-context,$default-domain,$permissions)"},{"content":"dom:configuration-get()","trigger":"dom:configuration-get"},{"content":"dom:configuration-set-default-domain(${1:\\$domain-id as xs:unsignedLong})","trigger":"dom:configuration-set-default-domain","description":"($domain-id)"},{"content":"dom:configuration-set-evaluation-context(${1:\\$context as element(dom:evaluation-context)})","trigger":"dom:configuration-set-evaluation-context","description":"($context)"},{"content":"dom:configuration-set-permissions(${1:\\$permissions as item()*})","trigger":"dom:configuration-set-permissions","description":"($permissions)"},{"content":"dom:configuration-set-restart-user(${1:\\$restart-user as xs:string})","trigger":"dom:configuration-set-restart-user","description":"($restart-user)"},{"content":"dom:create(${1:\\$name as xs:string}, ${2:\\$description as xs:string}, ${3:\\$scope as element(dom:domain-scope)}, ${4:\\$context as element(dom:evaluation-context)}, ${5:\\$pipelines as xs:unsignedLong*}, ${6:\\$permissions as item()*})","trigger":"dom:create","description":"($name,$description,$scope,$context,$pipelines,$permissions)"},{"content":"dom:domain-scope(${1:\\$document-scope as xs:string}, ${2:\\$uri as xs:string}, ${3:\\$depth as xs:string?})","trigger":"dom:domain-scope","description":"($document-scope,$uri,$depth)"},{"content":"dom:domains()","trigger":"dom:domains"},{"content":"dom:evaluation-context(${1:\\$database as xs:unsignedLong}, ${2:\\$root as xs:string})","trigger":"dom:evaluation-context","description":"($database,$root)"},{"content":"dom:get(${1:\\$domain-name as xs:string})","trigger":"dom:get","description":"($domain-name)"},{"content":"dom:remove(${1:\\$domain-name as xs:string})","trigger":"dom:remove","description":"($domain-name)"},{"content":"dom:remove-permissions(${1:\\$domain-name as xs:string}, ${2:\\$permissions as item()*})","trigger":"dom:remove-permissions","description":"($domain-name,$permissions)"},{"content":"dom:remove-pipeline(${1:\\$domain-name as xs:string}, ${2:\\$pipeline-id as xs:unsignedLong})","trigger":"dom:remove-pipeline","description":"($domain-name,$pipeline-id)"},{"content":"dom:set-description(${1:\\$domain-name as xs:string}, ${2:\\$description as xs:string})","trigger":"dom:set-description","description":"($domain-name,$description)"},{"content":"dom:set-domain-scope(${1:\\$domain-name as xs:string}, ${2:\\$scope as element(dom:domain-scope)})","trigger":"dom:set-domain-scope","description":"($domain-name,$scope)"},{"content":"dom:set-evaluation-context(${1:\\$domain-name as xs:string}, ${2:\\$context as element(dom:evaluation-context)})","trigger":"dom:set-evaluation-context","description":"($domain-name,$context)"},{"content":"dom:set-name(${1:\\$domain-name as xs:string}, ${2:\\$new-name as xs:string})","trigger":"dom:set-name","description":"($domain-name,$new-name)"},{"content":"dom:set-permissions(${1:\\$domain-name as xs:string}, ${2:\\$permissions as item()*})","trigger":"dom:set-permissions","description":"($domain-name,$permissions)"},{"content":"dom:set-pipelines(${1:\\$domain-name as xs:string}, ${2:\\$pipelines as xs:unsignedLong*})","trigger":"dom:set-pipelines","description":"($domain-name,$pipelines)"},{"content":"ec2:add-snapshot-create-volume-permission-groups(${1:\\$access-key as xs:string}, ${2:\\$secret-key as xs:string}, ${3:\\$ec2-region as xs:string}, ${4:\\$snapshot-ids as xs:string*}, ${5:\\$user-groups as xs:string*})","trigger":"ec2:add-snapshot-create-volume-permission-groups","description":"($access-key,$secret-key,$ec2-region,$snapshot-ids,$user-groups)"},{"content":"ec2:add-snapshot-create-volume-permission-users(${1:\\$access-key as xs:string}, ${2:\\$secret-key as xs:string}, ${3:\\$ec2-region as xs:string}, ${4:\\$snapshot-ids as xs:string*}, ${5:\\$user-ids as xs:string*})","trigger":"ec2:add-snapshot-create-volume-permission-users","description":"($access-key,$secret-key,$ec2-region,$snapshot-ids,$user-ids)"},{"content":"ec2:allocate-address(${1:\\$access-key as xs:string}, ${2:\\$secret-key as xs:string}, ${3:\\$ec2-region as xs:string})","trigger":"ec2:allocate-address","description":"($access-key,$secret-key,$ec2-region)"},{"content":"ec2:associate-address(${1:\\$access-key as xs:string}, ${2:\\$secret-key as xs:string}, ${3:\\$ec2-region as xs:string}, ${4:\\$public-ip as xs:string}, ${5:\\$instance-id as xs:string})","trigger":"ec2:associate-address","description":"($access-key,$secret-key,$ec2-region,$public-ip,$instance-id)"},{"content":"ec2:attach-volume(${1:\\$access-key as xs:string}, ${2:\\$secret-key as xs:string}, ${3:\\$ec2-region as xs:string}, ${4:\\$volume-id as xs:string}, ${5:\\$instance-id as xs:string}, ${6:\\$device as xs:string})","trigger":"ec2:attach-volume","description":"($access-key,$secret-key,$ec2-region,$volume-id,$instance-id,$device)"},{"content":"ec2:authorize-group-ingress(${1:\\$access-key as xs:string}, ${2:\\$secret-key as xs:string}, ${3:\\$ec2-region as xs:string}, ${4:\\$group-name as xs:string}, ${5:\\$source-group-owner-id as xs:string}, ${6:\\$source-group-name as xs:string})","trigger":"ec2:authorize-group-ingress","description":"($access-key,$secret-key,$ec2-region,$group-name,$source-group-owner-id,$source-group-name)"},{"content":"ec2:authorize-icmp-ingress(${1:\\$access-key as xs:string}, ${2:\\$secret-key as xs:string}, ${3:\\$ec2-region as xs:string}, ${4:\\$group-name as xs:string}, ${5:\\$icmp-type as xs:integer}, ${6:\\$icmp-code as xs:integer}, ${7:\\$cidr-ip as xs:string})","trigger":"ec2:authorize-icmp-ingress","description":"($access-key,$secret-key,$ec2-region,$group-name,$icmp-type,$icmp-code,$cidr-ip)"},{"content":"ec2:authorize-tcp-ingress(${1:\\$access-key as xs:string}, ${2:\\$secret-key as xs:string}, ${3:\\$ec2-region as xs:string}, ${4:\\$group-name as xs:string}, ${5:\\$port-range as xs:integer+}, ${6:\\$cidr-ip as xs:string})","trigger":"ec2:authorize-tcp-ingress","description":"($access-key,$secret-key,$ec2-region,$group-name,$port-range,$cidr-ip)"},{"content":"ec2:authorize-udp-ingress(${1:\\$access-key as xs:string}, ${2:\\$secret-key as xs:string}, ${3:\\$ec2-region as xs:string}, ${4:\\$group-name as xs:string}, ${5:\\$port-range as xs:integer+}, ${6:\\$cidr-ip as xs:string})","trigger":"ec2:authorize-udp-ingress","description":"($access-key,$secret-key,$ec2-region,$group-name,$port-range,$cidr-ip)"},{"content":"ec2:create-key-pair(${1:\\$access-key as xs:string}, ${2:\\$secret-key as xs:string}, ${3:\\$ec2-region as xs:string}, ${4:\\$key-name as xs:string})","trigger":"ec2:create-key-pair","description":"($access-key,$secret-key,$ec2-region,$key-name)"},{"content":"ec2:create-security-group(${1:\\$access-key as xs:string}, ${2:\\$secret-key as xs:string}, ${3:\\$ec2-region as xs:string}, ${4:\\$group-name as xs:string}, ${5:\\$group-description as xs:string})","trigger":"ec2:create-security-group","description":"($access-key,$secret-key,$ec2-region,$group-name,$group-description)"},{"content":"ec2:create-snapshot(${1:\\$access-key as xs:string}, ${2:\\$secret-key as xs:string}, ${3:\\$ec2-region as xs:string}, ${4:\\$volume-id as xs:string})","trigger":"ec2:create-snapshot","description":"($access-key,$secret-key,$ec2-region,$volume-id)"},{"content":"ec2:create-snapshot(${1:\\$access-key as xs:string}, ${2:\\$secret-key as xs:string}, ${3:\\$ec2-region as xs:string}, ${4:\\$volume-id as xs:string}, ${5:\\$description as xs:string?})","trigger":"ec2:create-snapshot","description":"($access-key,$secret-key,$ec2-region,$volume-id,$description)"},{"content":"ec2:create-volume(${1:\\$access-key as xs:string}, ${2:\\$secret-key as xs:string}, ${3:\\$ec2-region as xs:string}, ${4:\\$availability-zone as xs:string}, ${5:\\$size as xs:integer})","trigger":"ec2:create-volume","description":"($access-key,$secret-key,$ec2-region,$availability-zone,$size)"},{"content":"ec2:create-volume-from-snapshot(${1:\\$access-key as xs:string}, ${2:\\$secret-key as xs:string}, ${3:\\$ec2-region as xs:string}, ${4:\\$availability-zone as xs:string}, ${5:\\$snapshot-id as xs:string})","trigger":"ec2:create-volume-from-snapshot","description":"($access-key,$secret-key,$ec2-region,$availability-zone,$snapshot-id)"},{"content":"ec2:create-volume-from-snapshot(${1:\\$access-key as xs:string}, ${2:\\$secret-key as xs:string}, ${3:\\$ec2-region as xs:string}, ${4:\\$availability-zone as xs:string}, ${5:\\$snapshot-id as xs:string}, ${6:\\$size as xs:integer?})","trigger":"ec2:create-volume-from-snapshot","description":"($access-key,$secret-key,$ec2-region,$availability-zone,$snapshot-id,$size)"},{"content":"ec2:delete-key-pair(${1:\\$access-key as xs:string}, ${2:\\$secret-key as xs:string}, ${3:\\$ec2-region as xs:string}, ${4:\\$key-name as xs:string})","trigger":"ec2:delete-key-pair","description":"($access-key,$secret-key,$ec2-region,$key-name)"},{"content":"ec2:delete-security-group(${1:\\$access-key as xs:string}, ${2:\\$secret-key as xs:string}, ${3:\\$ec2-region as xs:string}, ${4:\\$group-name as xs:string})","trigger":"ec2:delete-security-group","description":"($access-key,$secret-key,$ec2-region,$group-name)"},{"content":"ec2:delete-snapshot(${1:\\$access-key as xs:string}, ${2:\\$secret-key as xs:string}, ${3:\\$ec2-region as xs:string}, ${4:\\$snapshot-id as xs:string})","trigger":"ec2:delete-snapshot","description":"($access-key,$secret-key,$ec2-region,$snapshot-id)"},{"content":"ec2:delete-volume(${1:\\$access-key as xs:string}, ${2:\\$secret-key as xs:string}, ${3:\\$ec2-region as xs:string}, ${4:\\$volume-id as xs:string})","trigger":"ec2:delete-volume","description":"($access-key,$secret-key,$ec2-region,$volume-id)"},{"content":"ec2:describe-addresses(${1:\\$access-key as xs:string}, ${2:\\$secret-key as xs:string}, ${3:\\$ec2-region as xs:string})","trigger":"ec2:describe-addresses","description":"($access-key,$secret-key,$ec2-region)"},{"content":"ec2:describe-addresses(${1:\\$access-key as xs:string}, ${2:\\$secret-key as xs:string}, ${3:\\$ec2-region as xs:string}, ${4:\\$public-ips as xs:string*})","trigger":"ec2:describe-addresses","description":"($access-key,$secret-key,$ec2-region,$public-ips)"},{"content":"ec2:describe-availability-zones(${1:\\$access-key as xs:string}, ${2:\\$secret-key as xs:string}, ${3:\\$ec2-region as xs:string})","trigger":"ec2:describe-availability-zones","description":"($access-key,$secret-key,$ec2-region)"},{"content":"ec2:describe-availability-zones(${1:\\$access-key as xs:string}, ${2:\\$secret-key as xs:string}, ${3:\\$ec2-region as xs:string}, ${4:\\$zone-name as xs:string*})","trigger":"ec2:describe-availability-zones","description":"($access-key,$secret-key,$ec2-region,$zone-name)"},{"content":"ec2:describe-images(${1:\\$access-key as xs:string}, ${2:\\$secret-key as xs:string}, ${3:\\$ec2-region as xs:string})","trigger":"ec2:describe-images","description":"($access-key,$secret-key,$ec2-region)"},{"content":"ec2:describe-images(${1:\\$access-key as xs:string}, ${2:\\$secret-key as xs:string}, ${3:\\$ec2-region as xs:string}, ${4:\\$image-ids as xs:string*})","trigger":"ec2:describe-images","description":"($access-key,$secret-key,$ec2-region,$image-ids)"},{"content":"ec2:describe-images(${1:\\$access-key as xs:string}, ${2:\\$secret-key as xs:string}, ${3:\\$ec2-region as xs:string}, ${4:\\$image-ids as xs:string*}, ${5:\\$executable-by as xs:string*})","trigger":"ec2:describe-images","description":"($access-key,$secret-key,$ec2-region,$image-ids,$executable-by)"},{"content":"ec2:describe-images(${1:\\$access-key as xs:string}, ${2:\\$secret-key as xs:string}, ${3:\\$ec2-region as xs:string}, ${4:\\$image-ids as xs:string*}, ${5:\\$executable-by as xs:string*}, ${6:\\$owners as xs:string*})","trigger":"ec2:describe-images","description":"($access-key,$secret-key,$ec2-region,$image-ids,$executable-by,$owners)"},{"content":"ec2:describe-instance-block-device-mapping(${1:\\$access-key as xs:string}, ${2:\\$secret-key as xs:string}, ${3:\\$ec2-region as xs:string}, ${4:\\$instance-ids as xs:string})","trigger":"ec2:describe-instance-block-device-mapping","description":"($access-key,$secret-key,$ec2-region,$instance-ids)"},{"content":"ec2:describe-instance-disable-api-termination(${1:\\$access-key as xs:string}, ${2:\\$secret-key as xs:string}, ${3:\\$ec2-region as xs:string}, ${4:\\$instance-ids as xs:string})","trigger":"ec2:describe-instance-disable-api-termination","description":"($access-key,$secret-key,$ec2-region,$instance-ids)"},{"content":"ec2:describe-instance-initiated-shutdown-behavior(${1:\\$access-key as xs:string}, ${2:\\$secret-key as xs:string}, ${3:\\$ec2-region as xs:string}, ${4:\\$instance-ids as xs:string})","trigger":"ec2:describe-instance-initiated-shutdown-behavior","description":"($access-key,$secret-key,$ec2-region,$instance-ids)"},{"content":"ec2:describe-instance-kernel(${1:\\$access-key as xs:string}, ${2:\\$secret-key as xs:string}, ${3:\\$ec2-region as xs:string}, ${4:\\$instance-ids as xs:string})","trigger":"ec2:describe-instance-kernel","description":"($access-key,$secret-key,$ec2-region,$instance-ids)"},{"content":"ec2:describe-instance-ramdisk(${1:\\$access-key as xs:string}, ${2:\\$secret-key as xs:string}, ${3:\\$ec2-region as xs:string}, ${4:\\$instance-ids as xs:string})","trigger":"ec2:describe-instance-ramdisk","description":"($access-key,$secret-key,$ec2-region,$instance-ids)"},{"content":"ec2:describe-instance-root-device-name(${1:\\$access-key as xs:string}, ${2:\\$secret-key as xs:string}, ${3:\\$ec2-region as xs:string}, ${4:\\$instance-ids as xs:string})","trigger":"ec2:describe-instance-root-device-name","description":"($access-key,$secret-key,$ec2-region,$instance-ids)"},{"content":"ec2:describe-instance-type(${1:\\$access-key as xs:string}, ${2:\\$secret-key as xs:string}, ${3:\\$ec2-region as xs:string}, ${4:\\$instance-ids as xs:string})","trigger":"ec2:describe-instance-type","description":"($access-key,$secret-key,$ec2-region,$instance-ids)"},{"content":"ec2:describe-instance-user-data(${1:\\$access-key as xs:string}, ${2:\\$secret-key as xs:string}, ${3:\\$ec2-region as xs:string}, ${4:\\$instance-ids as xs:string})","trigger":"ec2:describe-instance-user-data","description":"($access-key,$secret-key,$ec2-region,$instance-ids)"},{"content":"ec2:describe-instances(${1:\\$access-key as xs:string}, ${2:\\$secret-key as xs:string}, ${3:\\$ec2-region as xs:string})","trigger":"ec2:describe-instances","description":"($access-key,$secret-key,$ec2-region)"},{"content":"ec2:describe-instances(${1:\\$access-key as xs:string}, ${2:\\$secret-key as xs:string}, ${3:\\$ec2-region as xs:string}, ${4:\\$instance-ids as xs:string*})","trigger":"ec2:describe-instances","description":"($access-key,$secret-key,$ec2-region,$instance-ids)"},{"content":"ec2:describe-key-pairs(${1:\\$access-key as xs:string}, ${2:\\$secret-key as xs:string}, ${3:\\$ec2-region as xs:string})","trigger":"ec2:describe-key-pairs","description":"($access-key,$secret-key,$ec2-region)"},{"content":"ec2:describe-key-pairs(${1:\\$access-key as xs:string}, ${2:\\$secret-key as xs:string}, ${3:\\$ec2-region as xs:string}, ${4:\\$key-names as xs:string*})","trigger":"ec2:describe-key-pairs","description":"($access-key,$secret-key,$ec2-region,$key-names)"},{"content":"ec2:describe-regions(${1:\\$access-key as xs:string}, ${2:\\$secret-key as xs:string}, ${3:\\$ec2-region as xs:string})","trigger":"ec2:describe-regions","description":"($access-key,$secret-key,$ec2-region)"},{"content":"ec2:describe-regions(${1:\\$access-key as xs:string}, ${2:\\$secret-key as xs:string}, ${3:\\$ec2-region as xs:string}, ${4:\\$region-names as xs:string*})","trigger":"ec2:describe-regions","description":"($access-key,$secret-key,$ec2-region,$region-names)"},{"content":"ec2:describe-security-groups(${1:\\$access-key as xs:string}, ${2:\\$secret-key as xs:string}, ${3:\\$ec2-region as xs:string})","trigger":"ec2:describe-security-groups","description":"($access-key,$secret-key,$ec2-region)"},{"content":"ec2:describe-security-groups(${1:\\$access-key as xs:string}, ${2:\\$secret-key as xs:string}, ${3:\\$ec2-region as xs:string}, ${4:\\$group-names as xs:string*})","trigger":"ec2:describe-security-groups","description":"($access-key,$secret-key,$ec2-region,$group-names)"},{"content":"ec2:describe-snapshot-create-volume-permission(${1:\\$access-key as xs:string}, ${2:\\$secret-key as xs:string}, ${3:\\$ec2-region as xs:string}, ${4:\\$snapshot-ids as xs:string*})","trigger":"ec2:describe-snapshot-create-volume-permission","description":"($access-key,$secret-key,$ec2-region,$snapshot-ids)"},{"content":"ec2:describe-snapshots(${1:\\$access-key as xs:string}, ${2:\\$secret-key as xs:string}, ${3:\\$ec2-region as xs:string})","trigger":"ec2:describe-snapshots","description":"($access-key,$secret-key,$ec2-region)"},{"content":"ec2:describe-snapshots(${1:\\$access-key as xs:string}, ${2:\\$secret-key as xs:string}, ${3:\\$ec2-region as xs:string}, ${4:\\$snapshot-ids as xs:string*})","trigger":"ec2:describe-snapshots","description":"($access-key,$secret-key,$ec2-region,$snapshot-ids)"},{"content":"ec2:describe-snapshots(${1:\\$access-key as xs:string}, ${2:\\$secret-key as xs:string}, ${3:\\$ec2-region as xs:string}, ${4:\\$snapshot-ids as xs:string*}, ${5:\\$owners as xs:string*})","trigger":"ec2:describe-snapshots","description":"($access-key,$secret-key,$ec2-region,$snapshot-ids,$owners)"},{"content":"ec2:describe-snapshots(${1:\\$access-key as xs:string}, ${2:\\$secret-key as xs:string}, ${3:\\$ec2-region as xs:string}, ${4:\\$snapshot-ids as xs:string*}, ${5:\\$owners as xs:string*}, ${6:\\$restorable-bys as xs:string*})","trigger":"ec2:describe-snapshots","description":"($access-key,$secret-key,$ec2-region,$snapshot-ids,$owners,$restorable-bys)"},{"content":"ec2:describe-volumes(${1:\\$access-key as xs:string}, ${2:\\$secret-key as xs:string}, ${3:\\$ec2-region as xs:string})","trigger":"ec2:describe-volumes","description":"($access-key,$secret-key,$ec2-region)"},{"content":"ec2:describe-volumes(${1:\\$access-key as xs:string}, ${2:\\$secret-key as xs:string}, ${3:\\$ec2-region as xs:string}, ${4:\\$volume-ids as xs:string*})","trigger":"ec2:describe-volumes","description":"($access-key,$secret-key,$ec2-region,$volume-ids)"},{"content":"ec2:detach-volume(${1:\\$access-key as xs:string}, ${2:\\$secret-key as xs:string}, ${3:\\$ec2-region as xs:string}, ${4:\\$volume-id as xs:string})","trigger":"ec2:detach-volume","description":"($access-key,$secret-key,$ec2-region,$volume-id)"},{"content":"ec2:detach-volume(${1:\\$access-key as xs:string}, ${2:\\$secret-key as xs:string}, ${3:\\$ec2-region as xs:string}, ${4:\\$volume-id as xs:string}, ${5:\\$instance-id as xs:string?})","trigger":"ec2:detach-volume","description":"($access-key,$secret-key,$ec2-region,$volume-id,$instance-id)"},{"content":"ec2:detach-volume(${1:\\$access-key as xs:string}, ${2:\\$secret-key as xs:string}, ${3:\\$ec2-region as xs:string}, ${4:\\$volume-id as xs:string}, ${5:\\$instance-id as xs:string?}, ${6:\\$device as xs:string?})","trigger":"ec2:detach-volume","description":"($access-key,$secret-key,$ec2-region,$volume-id,$instance-id,$device)"},{"content":"ec2:detach-volume(${1:\\$access-key as xs:string}, ${2:\\$secret-key as xs:string}, ${3:\\$ec2-region as xs:string}, ${4:\\$volume-id as xs:string}, ${5:\\$instance-id as xs:string?}, ${6:\\$device as xs:string?}, ${7:\\$force as xs:boolean?})","trigger":"ec2:detach-volume","description":"($access-key,$secret-key,$ec2-region,$volume-id,$instance-id,$device,$force)"},{"content":"ec2:disassociate-address(${1:\\$access-key as xs:string}, ${2:\\$secret-key as xs:string}, ${3:\\$ec2-region as xs:string}, ${4:\\$public-ip as xs:string})","trigger":"ec2:disassociate-address","description":"($access-key,$secret-key,$ec2-region,$public-ip)"},{"content":"ec2:get-console-output(${1:\\$access-key as xs:string}, ${2:\\$secret-key as xs:string}, ${3:\\$ec2-region as xs:string}, ${4:\\$instance-id as xs:string})","trigger":"ec2:get-console-output","description":"($access-key,$secret-key,$ec2-region,$instance-id)"},{"content":"ec2:modify-instance-block-device-mapping(${1:\\$access-key as xs:string}, ${2:\\$secret-key as xs:string}, ${3:\\$ec2-region as xs:string}, ${4:\\$instance-id as xs:string}, ${5:\\$value as xs:string})","trigger":"ec2:modify-instance-block-device-mapping","description":"($access-key,$secret-key,$ec2-region,$instance-id,$value)"},{"content":"ec2:modify-instance-disable-api-termination(${1:\\$access-key as xs:string}, ${2:\\$secret-key as xs:string}, ${3:\\$ec2-region as xs:string}, ${4:\\$instance-id as xs:string}, ${5:\\$value as xs:boolean})","trigger":"ec2:modify-instance-disable-api-termination","description":"($access-key,$secret-key,$ec2-region,$instance-id,$value)"},{"content":"ec2:modify-instance-initiated-shutdown-behavior(${1:\\$access-key as xs:string}, ${2:\\$secret-key as xs:string}, ${3:\\$ec2-region as xs:string}, ${4:\\$instance-id as xs:string}, ${5:\\$value as xs:string})","trigger":"ec2:modify-instance-initiated-shutdown-behavior","description":"($access-key,$secret-key,$ec2-region,$instance-id,$value)"},{"content":"ec2:modify-instance-kernel(${1:\\$access-key as xs:string}, ${2:\\$secret-key as xs:string}, ${3:\\$ec2-region as xs:string}, ${4:\\$instance-id as xs:string}, ${5:\\$value as xs:string})","trigger":"ec2:modify-instance-kernel","description":"($access-key,$secret-key,$ec2-region,$instance-id,$value)"},{"content":"ec2:modify-instance-ramdisk(${1:\\$access-key as xs:string}, ${2:\\$secret-key as xs:string}, ${3:\\$ec2-region as xs:string}, ${4:\\$instance-id as xs:string}, ${5:\\$value as xs:string})","trigger":"ec2:modify-instance-ramdisk","description":"($access-key,$secret-key,$ec2-region,$instance-id,$value)"},{"content":"ec2:modify-instance-root-device-name(${1:\\$access-key as xs:string}, ${2:\\$secret-key as xs:string}, ${3:\\$ec2-region as xs:string}, ${4:\\$instance-id as xs:string}, ${5:\\$value as xs:string})","trigger":"ec2:modify-instance-root-device-name","description":"($access-key,$secret-key,$ec2-region,$instance-id,$value)"},{"content":"ec2:modify-instance-type(${1:\\$access-key as xs:string}, ${2:\\$secret-key as xs:string}, ${3:\\$ec2-region as xs:string}, ${4:\\$instance-id as xs:string}, ${5:\\$value as xs:string})","trigger":"ec2:modify-instance-type","description":"($access-key,$secret-key,$ec2-region,$instance-id,$value)"},{"content":"ec2:modify-instance-user-data(${1:\\$access-key as xs:string}, ${2:\\$secret-key as xs:string}, ${3:\\$ec2-region as xs:string}, ${4:\\$instance-id as xs:string}, ${5:\\$value as xs:string})","trigger":"ec2:modify-instance-user-data","description":"($access-key,$secret-key,$ec2-region,$instance-id,$value)"},{"content":"ec2:monitor-instances(${1:\\$access-key as xs:string}, ${2:\\$secret-key as xs:string}, ${3:\\$ec2-region as xs:string}, ${4:\\$instance-ids as xs:string+})","trigger":"ec2:monitor-instances","description":"($access-key,$secret-key,$ec2-region,$instance-ids)"},{"content":"ec2:reboot-instances(${1:\\$access-key as xs:string}, ${2:\\$secret-key as xs:string}, ${3:\\$ec2-region as xs:string}, ${4:\\$instance-ids as xs:string+})","trigger":"ec2:reboot-instances","description":"($access-key,$secret-key,$ec2-region,$instance-ids)"},{"content":"ec2:release-address(${1:\\$access-key as xs:string}, ${2:\\$secret-key as xs:string}, ${3:\\$ec2-region as xs:string}, ${4:\\$public-ip as xs:string})","trigger":"ec2:release-address","description":"($access-key,$secret-key,$ec2-region,$public-ip)"},{"content":"ec2:remove-snapshot-create-volume-permission-groups(${1:\\$access-key as xs:string}, ${2:\\$secret-key as xs:string}, ${3:\\$ec2-region as xs:string}, ${4:\\$snapshot-ids as xs:string*}, ${5:\\$user-groups as xs:string*})","trigger":"ec2:remove-snapshot-create-volume-permission-groups","description":"($access-key,$secret-key,$ec2-region,$snapshot-ids,$user-groups)"},{"content":"ec2:remove-snapshot-create-volume-permission-users(${1:\\$access-key as xs:string}, ${2:\\$secret-key as xs:string}, ${3:\\$ec2-region as xs:string}, ${4:\\$snapshot-ids as xs:string*}, ${5:\\$user-ids as xs:string*})","trigger":"ec2:remove-snapshot-create-volume-permission-users","description":"($access-key,$secret-key,$ec2-region,$snapshot-ids,$user-ids)"},{"content":"ec2:reset-instance-kernel(${1:\\$access-key as xs:string}, ${2:\\$secret-key as xs:string}, ${3:\\$ec2-region as xs:string}, ${4:\\$instance-ids as xs:string*})","trigger":"ec2:reset-instance-kernel","description":"($access-key,$secret-key,$ec2-region,$instance-ids)"},{"content":"ec2:reset-instance-ramdisk(${1:\\$access-key as xs:string}, ${2:\\$secret-key as xs:string}, ${3:\\$ec2-region as xs:string}, ${4:\\$instance-ids as xs:string*})","trigger":"ec2:reset-instance-ramdisk","description":"($access-key,$secret-key,$ec2-region,$instance-ids)"},{"content":"ec2:reset-snapshot-create-volume-permission(${1:\\$access-key as xs:string}, ${2:\\$secret-key as xs:string}, ${3:\\$ec2-region as xs:string}, ${4:\\$snapshot-ids as xs:string*})","trigger":"ec2:reset-snapshot-create-volume-permission","description":"($access-key,$secret-key,$ec2-region,$snapshot-ids)"},{"content":"ec2:revoke-group-ingress(${1:\\$access-key as xs:string}, ${2:\\$secret-key as xs:string}, ${3:\\$ec2-region as xs:string}, ${4:\\$group-name as xs:string}, ${5:\\$source-group-owner-id as xs:string}, ${6:\\$source-group-name as xs:string})","trigger":"ec2:revoke-group-ingress","description":"($access-key,$secret-key,$ec2-region,$group-name,$source-group-owner-id,$source-group-name)"},{"content":"ec2:revoke-icmp-ingress(${1:\\$access-key as xs:string}, ${2:\\$secret-key as xs:string}, ${3:\\$ec2-region as xs:string}, ${4:\\$group-name as xs:string}, ${5:\\$icmp-type as xs:integer}, ${6:\\$icmp-code as xs:integer}, ${7:\\$cidr-ip as xs:string})","trigger":"ec2:revoke-icmp-ingress","description":"($access-key,$secret-key,$ec2-region,$group-name,$icmp-type,$icmp-code,$cidr-ip)"},{"content":"ec2:revoke-tcp-ingress(${1:\\$access-key as xs:string}, ${2:\\$secret-key as xs:string}, ${3:\\$ec2-region as xs:string}, ${4:\\$group-name as xs:string}, ${5:\\$port-range as xs:integer+}, ${6:\\$cidr-ip as xs:string})","trigger":"ec2:revoke-tcp-ingress","description":"($access-key,$secret-key,$ec2-region,$group-name,$port-range,$cidr-ip)"},{"content":"ec2:revoke-udp-ingress(${1:\\$access-key as xs:string}, ${2:\\$secret-key as xs:string}, ${3:\\$ec2-region as xs:string}, ${4:\\$group-name as xs:string}, ${5:\\$port-range as xs:integer+}, ${6:\\$cidr-ip as xs:string})","trigger":"ec2:revoke-udp-ingress","description":"($access-key,$secret-key,$ec2-region,$group-name,$port-range,$cidr-ip)"},{"content":"ec2:run-instances(${1:\\$access-key as xs:string}, ${2:\\$secret-key as xs:string}, ${3:\\$ec2-region as xs:string}, ${4:\\$image-id as xs:string}, ${5:\\$min-count as xs:integer}, ${6:\\$max-count as xs:integer}, ${7:\\$instance-type as xs:string?}, ${8:\\$key-pair as xs:string?}, ${9:\\$security-group as xs:string*}, ${10:\\$instance-options as xs:string*})","trigger":"ec2:run-instances","description":"($access-key,$secret-key,$ec2-region,$image-id,$min-count,$max-count,$instance-type,$key-pair,$security-group,$instance-options)"},{"content":"ec2:start-instances(${1:\\$access-key as xs:string}, ${2:\\$secret-key as xs:string}, ${3:\\$ec2-region as xs:string}, ${4:\\$instance-ids as xs:string+})","trigger":"ec2:start-instances","description":"($access-key,$secret-key,$ec2-region,$instance-ids)"},{"content":"ec2:stop-instances(${1:\\$access-key as xs:string}, ${2:\\$secret-key as xs:string}, ${3:\\$ec2-region as xs:string}, ${4:\\$instance-ids as xs:string+}, ${5:\\$force as xs:boolean})","trigger":"ec2:stop-instances","description":"($access-key,$secret-key,$ec2-region,$instance-ids,$force)"},{"content":"ec2:terminate-instances(${1:\\$access-key as xs:string}, ${2:\\$secret-key as xs:string}, ${3:\\$ec2-region as xs:string}, ${4:\\$instance-ids as xs:string+})","trigger":"ec2:terminate-instances","description":"($access-key,$secret-key,$ec2-region,$instance-ids)"},{"content":"ec2:unmonitor-instances(${1:\\$access-key as xs:string}, ${2:\\$secret-key as xs:string}, ${3:\\$ec2-region as xs:string}, ${4:\\$instance-ids as xs:string+})","trigger":"ec2:unmonitor-instances","description":"($access-key,$secret-key,$ec2-region,$instance-ids)"},{"content":"excel:clean(${1:\\$uri as xs:string}, ${2:\\$doc as node()?})","trigger":"excel:clean","description":"($uri,$doc)"},{"content":"exsl:node-set(${1:\\$value as item()*})","trigger":"exsl:node-set","description":"($value)"},{"content":"exsl:object-type(${1:\\$value as item()*})","trigger":"exsl:object-type","description":"($value)"},{"content":"flexrep:apply(${1:\\$update as element(flexrep:update)}, ${2:\\$content as document-node()?})","trigger":"flexrep:apply","description":"($update,$content)"},{"content":"flexrep:binary-chunk-uris(${1:\\$ts as xs:dateTime})","trigger":"flexrep:binary-chunk-uris","description":"($ts)"},{"content":"flexrep:configuration-create(${1:\\$domain-id as xs:unsignedLong})","trigger":"flexrep:configuration-create","description":"($domain-id)"},{"content":"flexrep:configuration-delete(${1:\\$domain-id as xs:unsignedLong})","trigger":"flexrep:configuration-delete","description":"($domain-id)"},{"content":"flexrep:configuration-domain-ids()","trigger":"flexrep:configuration-domain-ids"},{"content":"flexrep:configuration-get(${1:\\$domain-id as xs:unsignedLong})","trigger":"flexrep:configuration-get","description":"($domain-id)"},{"content":"flexrep:configuration-get(${1:\\$domain-id as xs:unsignedLong}, ${2:\\$assert as xs:boolean})","trigger":"flexrep:configuration-get","description":"($domain-id,$assert)"},{"content":"flexrep:configuration-get-alerting-uri(${1:\\$cfg as element(flexrep:configuration)})","trigger":"flexrep:configuration-get-alerting-uri","description":"($cfg)"},{"content":"flexrep:configuration-get-domain-name(${1:\\$cfg as element(flexrep:configuration)})","trigger":"flexrep:configuration-get-domain-name","description":"($cfg)"},{"content":"flexrep:configuration-get-id(${1:\\$cfg as element(flexrep:configuration)})","trigger":"flexrep:configuration-get-id","description":"($cfg)"},{"content":"flexrep:configuration-insert(${1:\\$cfg as element(flexrep:configuration)})","trigger":"flexrep:configuration-insert","description":"($cfg)"},{"content":"flexrep:configuration-set-alerting-uri(${1:\\$cfg as element(flexrep:configuration)}, ${2:\\$uri as xs:string?})","trigger":"flexrep:configuration-set-alerting-uri","description":"($cfg,$uri)"},{"content":"flexrep:configuration-target(${1:\\$cfg as element(flexrep:configuration)}, ${2:\\$target-id as xs:unsignedLong})","trigger":"flexrep:configuration-target","description":"($cfg,$target-id)"},{"content":"flexrep:configuration-target(${1:\\$cfg as element(flexrep:configuration)}, ${2:\\$target-id as xs:unsignedLong}, ${3:\\$assert as xs:boolean})","trigger":"flexrep:configuration-target","description":"($cfg,$target-id,$assert)"},{"content":"flexrep:configuration-target-get-documents-per-batch(${1:\\$cfg as element(flexrep:configuration)}, ${2:\\$target-id as xs:unsignedLong})","trigger":"flexrep:configuration-target-get-documents-per-batch","description":"($cfg,$target-id)"},{"content":"flexrep:configuration-target-get-enabled(${1:\\$cfg as element(flexrep:configuration)}, ${2:\\$target-id as xs:unsignedLong})","trigger":"flexrep:configuration-target-get-enabled","description":"($cfg,$target-id)"},{"content":"flexrep:configuration-target-get-external-user(${1:\\$cfg as element(flexrep:configuration)}, ${2:\\$target-id as xs:unsignedLong})","trigger":"flexrep:configuration-target-get-external-user","description":"($cfg,$target-id)"},{"content":"flexrep:configuration-target-get-filter-module(${1:\\$cfg as element(flexrep:configuration)}, ${2:\\$target-id as xs:unsignedLong})","trigger":"flexrep:configuration-target-get-filter-module","description":"($cfg,$target-id)"},{"content":"flexrep:configuration-target-get-filter-options(${1:\\$cfg as element(flexrep:configuration)}, ${2:\\$target-id as xs:unsignedLong})","trigger":"flexrep:configuration-target-get-filter-options","description":"($cfg,$target-id)"},{"content":"flexrep:configuration-target-get-http-options(${1:\\$cfg as element(flexrep:configuration)}, ${2:\\$target-id as xs:unsignedLong})","trigger":"flexrep:configuration-target-get-http-options","description":"($cfg,$target-id)"},{"content":"flexrep:configuration-target-get-id(${1:\\$cfg as element(flexrep:configuration)}, ${2:\\$target-name as xs:string})","trigger":"flexrep:configuration-target-get-id","description":"($cfg,$target-name)"},{"content":"flexrep:configuration-target-get-immediate-push(${1:\\$cfg as element(flexrep:configuration)}, ${2:\\$target-id as xs:unsignedLong})","trigger":"flexrep:configuration-target-get-immediate-push","description":"($cfg,$target-id)"},{"content":"flexrep:configuration-target-get-name(${1:\\$cfg as element(flexrep:configuration)}, ${2:\\$target-id as xs:unsignedLong})","trigger":"flexrep:configuration-target-get-name","description":"($cfg,$target-id)"},{"content":"flexrep:configuration-target-get-replicate-cpf(${1:\\$cfg as element(flexrep:configuration)}, ${2:\\$target-id as xs:unsignedLong})","trigger":"flexrep:configuration-target-get-replicate-cpf","description":"($cfg,$target-id)"},{"content":"flexrep:configuration-target-get-retry-seconds-max(${1:\\$cfg as element(flexrep:configuration)}, ${2:\\$target-id as xs:unsignedLong})","trigger":"flexrep:configuration-target-get-retry-seconds-max","description":"($cfg,$target-id)"},{"content":"flexrep:configuration-target-get-retry-seconds-min(${1:\\$cfg as element(flexrep:configuration)}, ${2:\\$target-id as xs:unsignedLong})","trigger":"flexrep:configuration-target-get-retry-seconds-min","description":"($cfg,$target-id)"},{"content":"flexrep:configuration-target-get-urls(${1:\\$cfg as element(flexrep:configuration)}, ${2:\\$target-id as xs:unsignedLong})","trigger":"flexrep:configuration-target-get-urls","description":"($cfg,$target-id)"},{"content":"flexrep:configuration-target-get-user-id(${1:\\$cfg as element(flexrep:configuration)}, ${2:\\$target-id as xs:unsignedLong})","trigger":"flexrep:configuration-target-get-user-id","description":"($cfg,$target-id)"},{"content":"flexrep:configuration-target-set-documents-per-batch(${1:\\$cfg as element(flexrep:configuration)}, ${2:\\$target-id as xs:unsignedLong}, ${3:\\$val as xs:integer})","trigger":"flexrep:configuration-target-set-documents-per-batch","description":"($cfg,$target-id,$val)"},{"content":"flexrep:configuration-target-set-enabled(${1:\\$cfg as element(flexrep:configuration)}, ${2:\\$target-id as xs:unsignedLong}, ${3:\\$val as xs:boolean})","trigger":"flexrep:configuration-target-set-enabled","description":"($cfg,$target-id,$val)"},{"content":"flexrep:configuration-target-set-filter-module(${1:\\$cfg as element(flexrep:configuration)}, ${2:\\$target-id as xs:unsignedLong}, ${3:\\$uri as xs:string})","trigger":"flexrep:configuration-target-set-filter-module","description":"($cfg,$target-id,$uri)"},{"content":"flexrep:configuration-target-set-filter-options(${1:\\$cfg as element(flexrep:configuration)}, ${2:\\$target-id as xs:unsignedLong}, ${3:\\$val as element(flexrep:filter-options)})","trigger":"flexrep:configuration-target-set-filter-options","description":"($cfg,$target-id,$val)"},{"content":"flexrep:configuration-target-set-http-options(${1:\\$cfg as element(flexrep:configuration)}, ${2:\\$target-id as xs:unsignedLong}, ${3:\\$val as element(flexrep:http-options)})","trigger":"flexrep:configuration-target-set-http-options","description":"($cfg,$target-id,$val)"},{"content":"flexrep:configuration-target-set-immediate-push(${1:\\$cfg as element(flexrep:configuration)}, ${2:\\$target-id as xs:unsignedLong}, ${3:\\$immediate-push as xs:boolean})","trigger":"flexrep:configuration-target-set-immediate-push","description":"($cfg,$target-id,$immediate-push)"},{"content":"flexrep:configuration-target-set-name(${1:\\$cfg as element(flexrep:configuration)}, ${2:\\$target-id as xs:unsignedLong}, ${3:\\$val as xs:string*})","trigger":"flexrep:configuration-target-set-name","description":"($cfg,$target-id,$val)"},{"content":"flexrep:configuration-target-set-replicate-cpf(${1:\\$cfg as element(flexrep:configuration)}, ${2:\\$target-id as xs:unsignedLong}, ${3:\\$val as xs:boolean})","trigger":"flexrep:configuration-target-set-replicate-cpf","description":"($cfg,$target-id,$val)"},{"content":"flexrep:configuration-target-set-retry-seconds-max(${1:\\$cfg as element(flexrep:configuration)}, ${2:\\$target-id as xs:unsignedLong}, ${3:\\$val as xs:integer})","trigger":"flexrep:configuration-target-set-retry-seconds-max","description":"($cfg,$target-id,$val)"},{"content":"flexrep:configuration-target-set-retry-seconds-min(${1:\\$cfg as element(flexrep:configuration)}, ${2:\\$target-id as xs:unsignedLong}, ${3:\\$val as xs:integer})","trigger":"flexrep:configuration-target-set-retry-seconds-min","description":"($cfg,$target-id,$val)"},{"content":"flexrep:configuration-target-set-urls(${1:\\$cfg as element(flexrep:configuration)}, ${2:\\$target-id as xs:unsignedLong}, ${3:\\$urls as xs:string*})","trigger":"flexrep:configuration-target-set-urls","description":"($cfg,$target-id,$urls)"},{"content":"flexrep:configuration-target-set-user-id(${1:\\$cfg as element(flexrep:configuration)}, ${2:\\$target-id as xs:unsignedLong}, ${3:\\$user-id as xs:unsignedLong?})","trigger":"flexrep:configuration-target-set-user-id","description":"($cfg,$target-id,$user-id)"},{"content":"flexrep:configuration-targets(${1:\\$cfg as element(flexrep:configuration)})","trigger":"flexrep:configuration-targets","description":"($cfg)"},{"content":"flexrep:configure-database(${1:\\$config as element(configuration)}, ${2:\\$dbid as xs:unsignedLong})","trigger":"flexrep:configure-database","description":"($config,$dbid)"},{"content":"flexrep:database-needs-configuration(${1:\\$config as element(configuration)}, ${2:\\$dbid as xs:unsignedLong})","trigger":"flexrep:database-needs-configuration","description":"($config,$dbid)"},{"content":"flexrep:delete(${1:\\$delete as element(flexrep:delete)})","trigger":"flexrep:delete","description":"($delete)"},{"content":"flexrep:do-pull(${1:\\$pull as element(flexrep:pull)})","trigger":"flexrep:do-pull","description":"($pull)"},{"content":"flexrep:document-reset(${1:\\$uri as xs:string}, ${2:\\$domain-id as xs:unsignedLong})","trigger":"flexrep:document-reset","description":"($uri,$domain-id)"},{"content":"flexrep:document-reset(${1:\\$uri as xs:string}, ${2:\\$domain-id as xs:unsignedLong}, ${3:\\$target-ids as xs:unsignedLong*})","trigger":"flexrep:document-reset","description":"($uri,$domain-id,$target-ids)"},{"content":"flexrep:document-status(${1:\\$domain-id as xs:unsignedLong}, ${2:\\$uri as xs:string})","trigger":"flexrep:document-status","description":"($domain-id,$uri)"},{"content":"flexrep:domain-alerting-uri(${1:\\$domain-id as xs:unsignedLong})","trigger":"flexrep:domain-alerting-uri","description":"($domain-id)"},{"content":"flexrep:domain-status(${1:\\$domain-id as xs:unsignedLong})","trigger":"flexrep:domain-status","description":"($domain-id)"},{"content":"flexrep:domain-status(${1:\\$domain-id as xs:unsignedLong}, ${2:\\$with-targets as xs:boolean})","trigger":"flexrep:domain-status","description":"($domain-id,$with-targets)"},{"content":"flexrep:domain-status(${1:\\$domain-id as xs:unsignedLong}, ${2:\\$with-targets as xs:boolean}, ${3:\\$terse as xs:boolean})","trigger":"flexrep:domain-status","description":"($domain-id,$with-targets,$terse)"},{"content":"flexrep:domain-target-reset(${1:\\$domain-id as xs:unsignedLong}, ${2:\\$target-ids as xs:unsignedLong*})","trigger":"flexrep:domain-target-reset","description":"($domain-id,$target-ids)"},{"content":"flexrep:domain-target-reset(${1:\\$domain-id as xs:unsignedLong}, ${2:\\$target-ids as xs:unsignedLong*}, ${3:\\$errors-only as xs:boolean})","trigger":"flexrep:domain-target-reset","description":"($domain-id,$target-ids,$errors-only)"},{"content":"flexrep:domain-target-statuses()","trigger":"flexrep:domain-target-statuses"},{"content":"flexrep:get-domain-name(${1:\\$domain-id as xs:unsignedLong})","trigger":"flexrep:get-domain-name","description":"($domain-id)"},{"content":"flexrep:get-target-name(${1:\\$domain-id as xs:unsignedLong}, ${2:\\$target-id as xs:unsignedLong})","trigger":"flexrep:get-target-name","description":"($domain-id,$target-id)"},{"content":"flexrep:inbound-filter-create(${1:\\$filter-module as xs:string}, ${2:\\$filter-options as element(flexrep:filter-options)?})","trigger":"flexrep:inbound-filter-create","description":"($filter-module,$filter-options)"},{"content":"flexrep:inbound-filter-delete()","trigger":"flexrep:inbound-filter-delete"},{"content":"flexrep:inbound-filter-get()","trigger":"flexrep:inbound-filter-get"},{"content":"flexrep:inbound-filter-insert(${1:\\$filter as element(flexrep:inbound-filter)})","trigger":"flexrep:inbound-filter-insert","description":"($filter)"},{"content":"flexrep:process(${1:\\$domain-id as xs:unsignedLong})","trigger":"flexrep:process","description":"($domain-id)"},{"content":"flexrep:process(${1:\\$domain-id as xs:unsignedLong}, ${2:\\$size as xs:unsignedInt?})","trigger":"flexrep:process","description":"($domain-id,$size)"},{"content":"flexrep:process(${1:\\$domain-id as xs:unsignedLong}, ${2:\\$size as xs:unsignedInt?}, ${3:\\$targets as xs:unsignedLong*})","trigger":"flexrep:process","description":"($domain-id,$size,$targets)"},{"content":"flexrep:process(${1:\\$domain-id as xs:unsignedLong}, ${2:\\$size as xs:unsignedInt?}, ${3:\\$targets as xs:unsignedLong*}, ${4:\\$forest-ids as xs:unsignedLong*})","trigger":"flexrep:process","description":"($domain-id,$size,$targets,$forest-ids)"},{"content":"flexrep:process(${1:\\$domain-id as xs:unsignedLong}, ${2:\\$size as xs:unsignedInt?}, ${3:\\$targets as xs:unsignedLong*}, ${4:\\$forest-ids as xs:unsignedLong*}, ${5:\\$uris as xs:string*})","trigger":"flexrep:process","description":"($domain-id,$size,$targets,$forest-ids,$uris)"},{"content":"flexrep:pull-create(${1:\\$name as xs:string}, ${2:\\$domain-id as xs:unsignedLong}, ${3:\\$target-id as xs:unsignedLong}, ${4:\\$urls as xs:string+}, ${5:\\$http-options as element(flexrep:http-options)?})","trigger":"flexrep:pull-create","description":"($name,$domain-id,$target-id,$urls,$http-options)"},{"content":"flexrep:pull-delete(${1:\\$domain-id as xs:unsignedLong})","trigger":"flexrep:pull-delete","description":"($domain-id)"},{"content":"flexrep:pull-delete(${1:\\$domain-id as xs:unsignedLong}, ${2:\\$target-id as xs:unsignedLong})","trigger":"flexrep:pull-delete","description":"($domain-id,$target-id)"},{"content":"flexrep:pull-get(${1:\\$domain-id as xs:unsignedLong})","trigger":"flexrep:pull-get","description":"($domain-id)"},{"content":"flexrep:pull-get(${1:\\$domain-id as xs:unsignedLong}, ${2:\\$assert as xs:boolean})","trigger":"flexrep:pull-get","description":"($domain-id,$assert)"},{"content":"flexrep:pull-get-all()","trigger":"flexrep:pull-get-all"},{"content":"flexrep:pull-get-by-id(${1:\\$pull-id as xs:unsignedLong})","trigger":"flexrep:pull-get-by-id","description":"($pull-id)"},{"content":"flexrep:pull-get-by-id(${1:\\$pull-id as xs:unsignedLong}, ${2:\\$assert as xs:boolean})","trigger":"flexrep:pull-get-by-id","description":"($pull-id,$assert)"},{"content":"flexrep:pull-get-domain-id(${1:\\$pull as element(flexrep:pull)})","trigger":"flexrep:pull-get-domain-id","description":"($pull)"},{"content":"flexrep:pull-get-enabled(${1:\\$pull as element(flexrep:pull)})","trigger":"flexrep:pull-get-enabled","description":"($pull)"},{"content":"flexrep:pull-get-http-options(${1:\\$pull as element(flexrep:pull)})","trigger":"flexrep:pull-get-http-options","description":"($pull)"},{"content":"flexrep:pull-get-id(${1:\\$pull as element(flexrep:pull)})","trigger":"flexrep:pull-get-id","description":"($pull)"},{"content":"flexrep:pull-get-name(${1:\\$pull as element(flexrep:pull)})","trigger":"flexrep:pull-get-name","description":"($pull)"},{"content":"flexrep:pull-get-target-id(${1:\\$pull as element(flexrep:pull)})","trigger":"flexrep:pull-get-target-id","description":"($pull)"},{"content":"flexrep:pull-get-urls(${1:\\$pull as element(flexrep:pull)})","trigger":"flexrep:pull-get-urls","description":"($pull)"},{"content":"flexrep:pull-insert(${1:\\$pull as element(flexrep:pull)})","trigger":"flexrep:pull-insert","description":"($pull)"},{"content":"flexrep:pull-set-domain-id(${1:\\$pull as element(flexrep:pull)}, ${2:\\$domain-id as xs:unsignedLong})","trigger":"flexrep:pull-set-domain-id","description":"($pull,$domain-id)"},{"content":"flexrep:pull-set-enabled(${1:\\$pull as element(flexrep:pull)}, ${2:\\$flag as xs:boolean})","trigger":"flexrep:pull-set-enabled","description":"($pull,$flag)"},{"content":"flexrep:pull-set-http-options(${1:\\$pull as element(flexrep:pull)}, ${2:\\$http-options as element(flexrep:http-options)})","trigger":"flexrep:pull-set-http-options","description":"($pull,$http-options)"},{"content":"flexrep:pull-set-name(${1:\\$pull as element(flexrep:pull)}, ${2:\\$name as xs:string})","trigger":"flexrep:pull-set-name","description":"($pull,$name)"},{"content":"flexrep:pull-set-target-id(${1:\\$pull as element(flexrep:pull)}, ${2:\\$target-id as xs:unsignedLong})","trigger":"flexrep:pull-set-target-id","description":"($pull,$target-id)"},{"content":"flexrep:pull-set-urls(${1:\\$pull as element(flexrep:pull)}, ${2:\\$urls as xs:string+})","trigger":"flexrep:pull-set-urls","description":"($pull,$urls)"},{"content":"flexrep:push-local-forest(${1:\\$domain-id as xs:unsignedLong}, ${2:\\$forest-id as xs:unsignedLong}, ${3:\\$max-spawn as xs:unsignedLong})","trigger":"flexrep:push-local-forest","description":"($domain-id,$forest-id,$max-spawn)"},{"content":"flexrep:push-local-forest-target(${1:\\$domain-id as xs:unsignedLong}, ${2:\\$target-id as xs:unsignedLong}, ${3:\\$forest-id as xs:unsignedLong}, ${4:\\$max-spawn as xs:unsignedLong})","trigger":"flexrep:push-local-forest-target","description":"($domain-id,$target-id,$forest-id,$max-spawn)"},{"content":"flexrep:push-local-forests()","trigger":"flexrep:push-local-forests"},{"content":"flexrep:remote-target-status(${1:\\$pull as element(flexrep:pull)})","trigger":"flexrep:remote-target-status","description":"($pull)"},{"content":"flexrep:target-create(${1:\\$cfg as element(flexrep:configuration)}, ${2:\\$name as xs:string}, ${3:\\$urls as xs:string*}, ${4:\\$retry-seconds-min as xs:unsignedInt?}, ${5:\\$retry-seconds-max as xs:unsignedInt?}, ${6:\\$documents-per-batch as xs:unsignedInt?}, ${7:\\$enabled as xs:boolean?}, ${8:\\$http-options as element(flexrep:http-options)?}, ${9:\\$replicate-cpf as xs:boolean?}, ${10:\\$filter-module as xs:string?}, ${11:\\$filter-options as element(flexrep:filter-options)?})","trigger":"flexrep:target-create","description":"($cfg,$name,$urls,$retry-seconds-min,$retry-seconds-max,$documents-per-batch,$enabled,$http-options,$replicate-cpf,$filter-module,$filter-options)"},{"content":"flexrep:target-create(${1:\\$cfg as element(flexrep:configuration)}, ${2:\\$name as xs:string}, ${3:\\$urls as xs:string*}, ${4:\\$retry-seconds-min as xs:unsignedInt?}, ${5:\\$retry-seconds-max as xs:unsignedInt?}, ${6:\\$documents-per-batch as xs:unsignedInt?}, ${7:\\$enabled as xs:boolean?}, ${8:\\$http-options as element(flexrep:http-options)?}, ${9:\\$replicate-cpf as xs:boolean?}, ${10:\\$filter-module as xs:string?}, ${11:\\$filter-options as element(flexrep:filter-options)?}, ${12:\\$user-id as xs:unsignedLong?})","trigger":"flexrep:target-create","description":"($cfg,$name,$urls,$retry-seconds-min,$retry-seconds-max,$documents-per-batch,$enabled,$http-options,$replicate-cpf,$filter-module,$filter-options,$user-id)"},{"content":"flexrep:target-delete(${1:\\$cfg as element(flexrep:configuration)}, ${2:\\$target-id as xs:unsignedLong})","trigger":"flexrep:target-delete","description":"($cfg,$target-id)"},{"content":"flexrep:target-error-documents(${1:\\$domain-id as xs:unsignedLong}, ${2:\\$target-ids as xs:unsignedLong*})","trigger":"flexrep:target-error-documents","description":"($domain-id,$target-ids)"},{"content":"flexrep:target-status(${1:\\$domain-id as xs:unsignedLong}, ${2:\\$target-ids as xs:unsignedLong*})","trigger":"flexrep:target-status","description":"($domain-id,$target-ids)"},{"content":"fn:QName(${1:\\$paramURI as xs:string?}, ${2:\\$paramQName as xs:string})","trigger":"fn:QName","description":"($paramURI,$paramQName)"},{"content":"fn:abs(${1:\\$arg as numeric?})","trigger":"fn:abs","description":"($arg)"},{"content":"fn:adjust-date-to-timezone(${1:\\$arg as xs:date?})","trigger":"fn:adjust-date-to-timezone","description":"($arg)"},{"content":"fn:adjust-date-to-timezone(${1:\\$arg as xs:date?}, ${2:\\$timezone as xs:dayTimeDuration?})","trigger":"fn:adjust-date-to-timezone","description":"($arg,$timezone)"},{"content":"fn:adjust-dateTime-to-timezone(${1:\\$arg as xs:dateTime?})","trigger":"fn:adjust-dateTime-to-timezone","description":"($arg)"},{"content":"fn:adjust-dateTime-to-timezone(${1:\\$arg as xs:dateTime?}, ${2:\\$timezone as xs:dayTimeDuration?})","trigger":"fn:adjust-dateTime-to-timezone","description":"($arg,$timezone)"},{"content":"fn:adjust-time-to-timezone(${1:\\$arg as xs:time?})","trigger":"fn:adjust-time-to-timezone","description":"($arg)"},{"content":"fn:adjust-time-to-timezone(${1:\\$arg as xs:time?}, ${2:\\$timezone as xs:dayTimeDuration?})","trigger":"fn:adjust-time-to-timezone","description":"($arg,$timezone)"},{"content":"fn:analyze-string(${1:\\$in as xs:string?}, ${2:\\$regex as xs:string})","trigger":"fn:analyze-string","description":"($in,$regex)"},{"content":"fn:analyze-string(${1:\\$in as xs:string?}, ${2:\\$regex as xs:string}, ${3:\\$flags as xs:string})","trigger":"fn:analyze-string","description":"($in,$regex,$flags)"},{"content":"fn:avg(${1:\\$arg as xs:anyAtomicType*})","trigger":"fn:avg","description":"($arg)"},{"content":"fn:base-uri(${1:\\$arg as node()?})","trigger":"fn:base-uri","description":"($arg)"},{"content":"fn:base-uri()","trigger":"fn:base-uri"},{"content":"fn:boolean(${1:\\$arg as item()*})","trigger":"fn:boolean","description":"($arg)"},{"content":"fn:ceiling(${1:\\$arg as numeric?})","trigger":"fn:ceiling","description":"($arg)"},{"content":"fn:codepoint-equal(${1:\\$comparand1 as xs:string?}, ${2:\\$comparand2 as xs:string?})","trigger":"fn:codepoint-equal","description":"($comparand1,$comparand2)"},{"content":"fn:codepoints-to-string(${1:\\$arg as xs:integer*})","trigger":"fn:codepoints-to-string","description":"($arg)"},{"content":"fn:collection(${1:\\$uri as xs:string*})","trigger":"fn:collection","description":"($uri)"},{"content":"fn:collection()","trigger":"fn:collection"},{"content":"fn:compare(${1:\\$comparand1 as xs:string?}, ${2:\\$comparand2 as xs:string?})","trigger":"fn:compare","description":"($comparand1,$comparand2)"},{"content":"fn:compare(${1:\\$comparand1 as xs:string?}, ${2:\\$comparand2 as xs:string?}, ${3:\\$collation as xs:string})","trigger":"fn:compare","description":"($comparand1,$comparand2,$collation)"},{"content":"fn:concat(${1:\\$parameter1 as xs:anyAtomicType?}, [${2:\\$parameterN as xs:anyAtomicType?}, ...]})","trigger":"fn:concat","description":"($parameter1,[$parameterN,...])"},{"content":"fn:contains(${1:\\$parameter1 as xs:string?}, ${2:\\$parameter2 as xs:string?})","trigger":"fn:contains","description":"($parameter1,$parameter2)"},{"content":"fn:contains(${1:\\$parameter1 as xs:string?}, ${2:\\$parameter2 as xs:string?}, ${3:\\$collation as xs:string})","trigger":"fn:contains","description":"($parameter1,$parameter2,$collation)"},{"content":"fn:count(${1:\\$arg as item()*})","trigger":"fn:count","description":"($arg)"},{"content":"fn:count(${1:\\$arg as item()*}, ${2:\\$maximum as xs:double?})","trigger":"fn:count","description":"($arg,$maximum)"},{"content":"fn:current()","trigger":"fn:current"},{"content":"fn:current-date()","trigger":"fn:current-date"},{"content":"fn:current-dateTime()","trigger":"fn:current-dateTime"},{"content":"fn:current-group()","trigger":"fn:current-group"},{"content":"fn:current-grouping-key()","trigger":"fn:current-grouping-key"},{"content":"fn:current-time()","trigger":"fn:current-time"},{"content":"fn:data(${1:\\$arg as item()*})","trigger":"fn:data","description":"($arg)"},{"content":"fn:day-from-date(${1:\\$arg as xs:date?})","trigger":"fn:day-from-date","description":"($arg)"},{"content":"fn:day-from-dateTime(${1:\\$arg as xs:dateTime?})","trigger":"fn:day-from-dateTime","description":"($arg)"},{"content":"fn:days-from-duration(${1:\\$arg as xs:duration?})","trigger":"fn:days-from-duration","description":"($arg)"},{"content":"fn:deep-equal(${1:\\$parameter1 as item()*}, ${2:\\$parameter2 as item()*})","trigger":"fn:deep-equal","description":"($parameter1,$parameter2)"},{"content":"fn:deep-equal(${1:\\$parameter1 as item()*}, ${2:\\$parameter2 as item()*}, ${3:\\$collation as xs:string})","trigger":"fn:deep-equal","description":"($parameter1,$parameter2,$collation)"},{"content":"fn:default-collation()","trigger":"fn:default-collation"},{"content":"fn:distinct-nodes(${1:\\$nodes as node()*})","trigger":"fn:distinct-nodes","description":"($nodes)"},{"content":"fn:distinct-values(${1:\\$arg as xs:anyAtomicType*})","trigger":"fn:distinct-values","description":"($arg)"},{"content":"fn:distinct-values(${1:\\$arg as xs:anyAtomicType*}, ${2:\\$collation as xs:string})","trigger":"fn:distinct-values","description":"($arg,$collation)"},{"content":"fn:doc(${1:\\$uri as xs:string*})","trigger":"fn:doc","description":"($uri)"},{"content":"fn:doc()","trigger":"fn:doc"},{"content":"fn:doc-available(${1:\\$uri as xs:string?})","trigger":"fn:doc-available","description":"($uri)"},{"content":"fn:document(${1:\\$uris as item()*})","trigger":"fn:document","description":"($uris)"},{"content":"fn:document(${1:\\$uris as item()*}, ${2:\\$base-node as node()})","trigger":"fn:document","description":"($uris,$base-node)"},{"content":"fn:document-uri(${1:\\$arg as node()?})","trigger":"fn:document-uri","description":"($arg)"},{"content":"fn:element-available(${1:\\$element-name as xs:string})","trigger":"fn:element-available","description":"($element-name)"},{"content":"fn:empty(${1:\\$arg as item()*})","trigger":"fn:empty","description":"($arg)"},{"content":"fn:encode-for-uri(${1:\\$uri-part as xs:string})","trigger":"fn:encode-for-uri","description":"($uri-part)"},{"content":"fn:ends-with(${1:\\$parameter1 as xs:string?}, ${2:\\$parameter2 as xs:string?})","trigger":"fn:ends-with","description":"($parameter1,$parameter2)"},{"content":"fn:ends-with(${1:\\$parameter1 as xs:string?}, ${2:\\$parameter2 as xs:string?}, ${3:\\$collation as xs:string})","trigger":"fn:ends-with","description":"($parameter1,$parameter2,$collation)"},{"content":"fn:error(${1:\\$error as xs:QName?})","trigger":"fn:error","description":"($error)"},{"content":"fn:error(${1:\\$error as xs:QName?}, ${2:\\$description as xs:string})","trigger":"fn:error","description":"($error,$description)"},{"content":"fn:error(${1:\\$error as xs:QName?}, ${2:\\$description as xs:string}, ${3:\\$data as item()*})","trigger":"fn:error","description":"($error,$description,$data)"},{"content":"fn:error()","trigger":"fn:error"},{"content":"fn:escape-html-uri(${1:\\$uri-part as xs:string})","trigger":"fn:escape-html-uri","description":"($uri-part)"},{"content":"fn:escape-uri(${1:\\$uri-part as xs:string}, ${2:\\$escape-reserved as xs:boolean})","trigger":"fn:escape-uri","description":"($uri-part,$escape-reserved)"},{"content":"fn:exactly-one(${1:\\$arg as item()*})","trigger":"fn:exactly-one","description":"($arg)"},{"content":"fn:exists(${1:\\$arg as item()*})","trigger":"fn:exists","description":"($arg)"},{"content":"fn:expanded-QName(${1:\\$paramURI as xs:string?}, ${2:\\$paramLocal as xs:string})","trigger":"fn:expanded-QName","description":"($paramURI,$paramLocal)"},{"content":"fn:false()","trigger":"fn:false"},{"content":"fn:filter(${1:\\$function as function(item()) as xs:boolean}, ${2:\\$seq as item()*})","trigger":"fn:filter","description":"($function,$seq)"},{"content":"fn:floor(${1:\\$arg as numeric?})","trigger":"fn:floor","description":"($arg)"},{"content":"fn:fold-left(${1:\\$function as function(item()*}, item()) as item()*}, ${2:\\$zero as item()*}, ${3:\\$seq as item()*})","trigger":"fn:fold-left","description":"($function,item()),$zero,$seq)"},{"content":"fn:fold-right(${1:\\$function as function(item()}, item()*) as item()*}, ${2:\\$zero as item()*}, ${3:\\$seq as item()*})","trigger":"fn:fold-right","description":"($function,item()*),$zero,$seq)"},{"content":"fn:format-date(${1:\\$value as xs:date}, ${2:\\$picture as xs:string})","trigger":"fn:format-date","description":"($value,$picture)"},{"content":"fn:format-date(${1:\\$value as xs:date}, ${2:\\$picture as xs:string}, ${3:\\$language as xs:string})","trigger":"fn:format-date","description":"($value,$picture,$language)"},{"content":"fn:format-date(${1:\\$value as xs:date}, ${2:\\$picture as xs:string}, ${3:\\$language as xs:string}, ${4:\\$calendar as xs:string})","trigger":"fn:format-date","description":"($value,$picture,$language,$calendar)"},{"content":"fn:format-date(${1:\\$value as xs:date}, ${2:\\$picture as xs:string}, ${3:\\$language as xs:string}, ${4:\\$calendar as xs:string}, ${5:\\$country as xs:string})","trigger":"fn:format-date","description":"($value,$picture,$language,$calendar,$country)"},{"content":"fn:format-dateTime(${1:\\$value as xs:dateTime}, ${2:\\$picture as xs:string})","trigger":"fn:format-dateTime","description":"($value,$picture)"},{"content":"fn:format-dateTime(${1:\\$value as xs:dateTime}, ${2:\\$picture as xs:string}, ${3:\\$language as xs:string})","trigger":"fn:format-dateTime","description":"($value,$picture,$language)"},{"content":"fn:format-dateTime(${1:\\$value as xs:dateTime}, ${2:\\$picture as xs:string}, ${3:\\$language as xs:string}, ${4:\\$calendar as xs:string})","trigger":"fn:format-dateTime","description":"($value,$picture,$language,$calendar)"},{"content":"fn:format-dateTime(${1:\\$value as xs:dateTime}, ${2:\\$picture as xs:string}, ${3:\\$language as xs:string}, ${4:\\$calendar as xs:string}, ${5:\\$country as xs:string})","trigger":"fn:format-dateTime","description":"($value,$picture,$language,$calendar,$country)"},{"content":"fn:format-number(${1:\\$value as xs:double}, ${2:\\$picture as xs:string})","trigger":"fn:format-number","description":"($value,$picture)"},{"content":"fn:format-number(${1:\\$value as xs:double}, ${2:\\$picture as xs:string}, ${3:\\$decimal-format-name as xs:string})","trigger":"fn:format-number","description":"($value,$picture,$decimal-format-name)"},{"content":"fn:format-time(${1:\\$value as xs:time}, ${2:\\$picture as xs:string})","trigger":"fn:format-time","description":"($value,$picture)"},{"content":"fn:format-time(${1:\\$value as xs:time}, ${2:\\$picture as xs:string}, ${3:\\$language as xs:string})","trigger":"fn:format-time","description":"($value,$picture,$language)"},{"content":"fn:format-time(${1:\\$value as xs:time}, ${2:\\$picture as xs:string}, ${3:\\$language as xs:string}, ${4:\\$calendar as xs:string})","trigger":"fn:format-time","description":"($value,$picture,$language,$calendar)"},{"content":"fn:format-time(${1:\\$value as xs:time}, ${2:\\$picture as xs:string}, ${3:\\$language as xs:string}, ${4:\\$calendar as xs:string}, ${5:\\$country as xs:string})","trigger":"fn:format-time","description":"($value,$picture,$language,$calendar,$country)"},{"content":"fn:function-arity(${1:\\$function as function(*)})","trigger":"fn:function-arity","description":"($function)"},{"content":"fn:function-available(${1:\\$function-name as xs:string})","trigger":"fn:function-available","description":"($function-name)"},{"content":"fn:function-available(${1:\\$function-name as xs:string}, ${2:\\$arity as xs:integer})","trigger":"fn:function-available","description":"($function-name,$arity)"},{"content":"fn:function-lookup(${1:\\$name as xs:QName}, ${2:\\$arity as xs:integer})","trigger":"fn:function-lookup","description":"($name,$arity)"},{"content":"fn:function-name(${1:\\$function as function(*)})","trigger":"fn:function-name","description":"($function)"},{"content":"fn:generate-id(${1:\\$node as node()?})","trigger":"fn:generate-id","description":"($node)"},{"content":"fn:generate-id()","trigger":"fn:generate-id"},{"content":"fn:head(${1:\\$seq as item()*})","trigger":"fn:head","description":"($seq)"},{"content":"fn:hours-from-dateTime(${1:\\$arg as xs:dateTime?})","trigger":"fn:hours-from-dateTime","description":"($arg)"},{"content":"fn:hours-from-duration(${1:\\$arg as xs:duration?})","trigger":"fn:hours-from-duration","description":"($arg)"},{"content":"fn:hours-from-time(${1:\\$arg as xs:time?})","trigger":"fn:hours-from-time","description":"($arg)"},{"content":"fn:id(${1:\\$arg as xs:string*})","trigger":"fn:id","description":"($arg)"},{"content":"fn:id(${1:\\$arg as xs:string*}, ${2:\\$node as node()})","trigger":"fn:id","description":"($arg,$node)"},{"content":"fn:idref(${1:\\$arg as xs:string*})","trigger":"fn:idref","description":"($arg)"},{"content":"fn:idref(${1:\\$arg as xs:string*}, ${2:\\$node as node()})","trigger":"fn:idref","description":"($arg,$node)"},{"content":"fn:implicit-timezone()","trigger":"fn:implicit-timezone"},{"content":"fn:in-scope-prefixes(${1:\\$element as element()})","trigger":"fn:in-scope-prefixes","description":"($element)"},{"content":"fn:index-of(${1:\\$seqParam as xs:anyAtomicType*}, ${2:\\$srchParam as xs:anyAtomicType})","trigger":"fn:index-of","description":"($seqParam,$srchParam)"},{"content":"fn:index-of(${1:\\$seqParam as xs:anyAtomicType*}, ${2:\\$srchParam as xs:anyAtomicType}, ${3:\\$collationLiteral as xs:string})","trigger":"fn:index-of","description":"($seqParam,$srchParam,$collationLiteral)"},{"content":"fn:insert-before(${1:\\$target as item()*}, ${2:\\$position as xs:integer}, ${3:\\$inserts as item()*})","trigger":"fn:insert-before","description":"($target,$position,$inserts)"},{"content":"fn:iri-to-uri(${1:\\$uri-part as xs:string})","trigger":"fn:iri-to-uri","description":"($uri-part)"},{"content":"fn:key(${1:\\$key-name as xs:string}, ${2:\\$key-value as xs:string})","trigger":"fn:key","description":"($key-name,$key-value)"},{"content":"fn:key(${1:\\$key-name as xs:string}, ${2:\\$key-value as xs:string}, ${3:\\$top as node()})","trigger":"fn:key","description":"($key-name,$key-value,$top)"},{"content":"fn:lang(${1:\\$testlang as xs:string?})","trigger":"fn:lang","description":"($testlang)"},{"content":"fn:lang(${1:\\$testlang as xs:string?}, ${2:\\$node as node()})","trigger":"fn:lang","description":"($testlang,$node)"},{"content":"fn:last()","trigger":"fn:last"},{"content":"fn:local-name(${1:\\$arg as node()?})","trigger":"fn:local-name","description":"($arg)"},{"content":"fn:local-name()","trigger":"fn:local-name"},{"content":"fn:local-name-from-QName(${1:\\$arg as xs:QName?})","trigger":"fn:local-name-from-QName","description":"($arg)"},{"content":"fn:lower-case(${1:\\$string as xs:string?})","trigger":"fn:lower-case","description":"($string)"},{"content":"fn:map(${1:\\$function as function(item()) as item()*}, ${2:\\$seq as item()*})","trigger":"fn:map","description":"($function,$seq)"},{"content":"fn:map-pairs(${1:\\$function as function(item()}, item()) as item()*}, ${2:\\$seq1 as item()*}, ${3:\\$seq2 as item()*})","trigger":"fn:map-pairs","description":"($function,item()),$seq1,$seq2)"},{"content":"fn:matches(${1:\\$input as xs:string?}, ${2:\\$pattern as xs:string})","trigger":"fn:matches","description":"($input,$pattern)"},{"content":"fn:matches(${1:\\$input as xs:string?}, ${2:\\$pattern as xs:string}, ${3:\\$flags as xs:string})","trigger":"fn:matches","description":"($input,$pattern,$flags)"},{"content":"fn:max(${1:\\$arg as xs:anyAtomicType*})","trigger":"fn:max","description":"($arg)"},{"content":"fn:max(${1:\\$arg as xs:anyAtomicType*}, ${2:\\$collation as xs:string})","trigger":"fn:max","description":"($arg,$collation)"},{"content":"fn:min(${1:\\$arg as xs:anyAtomicType*})","trigger":"fn:min","description":"($arg)"},{"content":"fn:min(${1:\\$arg as xs:anyAtomicType*}, ${2:\\$collation as xs:string})","trigger":"fn:min","description":"($arg,$collation)"},{"content":"fn:minutes-from-dateTime(${1:\\$arg as xs:dateTime?})","trigger":"fn:minutes-from-dateTime","description":"($arg)"},{"content":"fn:minutes-from-duration(${1:\\$arg as xs:duration?})","trigger":"fn:minutes-from-duration","description":"($arg)"},{"content":"fn:minutes-from-time(${1:\\$arg as xs:time?})","trigger":"fn:minutes-from-time","description":"($arg)"},{"content":"fn:month-from-date(${1:\\$arg as xs:date?})","trigger":"fn:month-from-date","description":"($arg)"},{"content":"fn:month-from-dateTime(${1:\\$arg as xs:dateTime?})","trigger":"fn:month-from-dateTime","description":"($arg)"},{"content":"fn:months-from-duration(${1:\\$arg as xs:duration?})","trigger":"fn:months-from-duration","description":"($arg)"},{"content":"fn:name(${1:\\$arg as node()?})","trigger":"fn:name","description":"($arg)"},{"content":"fn:name()","trigger":"fn:name"},{"content":"fn:namespace-uri(${1:\\$arg as node()?})","trigger":"fn:namespace-uri","description":"($arg)"},{"content":"fn:namespace-uri()","trigger":"fn:namespace-uri"},{"content":"fn:namespace-uri-for-prefix(${1:\\$prefix as xs:string?}, ${2:\\$element as element()})","trigger":"fn:namespace-uri-for-prefix","description":"($prefix,$element)"},{"content":"fn:namespace-uri-from-QName(${1:\\$arg as xs:QName?})","trigger":"fn:namespace-uri-from-QName","description":"($arg)"},{"content":"fn:nilled(${1:\\$arg as node()?})","trigger":"fn:nilled","description":"($arg)"},{"content":"fn:node-kind(${1:\\$node as node()?})","trigger":"fn:node-kind","description":"($node)"},{"content":"fn:node-name(${1:\\$arg as node()?})","trigger":"fn:node-name","description":"($arg)"},{"content":"fn:normalize-space(${1:\\$input as xs:string?})","trigger":"fn:normalize-space","description":"($input)"},{"content":"fn:normalize-space()","trigger":"fn:normalize-space"},{"content":"fn:normalize-unicode(${1:\\$arg as xs:string?})","trigger":"fn:normalize-unicode","description":"($arg)"},{"content":"fn:normalize-unicode(${1:\\$arg as xs:string?}, ${2:\\$normalizationForm as xs:string})","trigger":"fn:normalize-unicode","description":"($arg,$normalizationForm)"},{"content":"fn:not(${1:\\$arg as item()*})","trigger":"fn:not","description":"($arg)"},{"content":"fn:number(${1:\\$arg as xs:anyAtomicType?})","trigger":"fn:number","description":"($arg)"},{"content":"fn:number()","trigger":"fn:number"},{"content":"fn:one-or-more(${1:\\$arg as item()*})","trigger":"fn:one-or-more","description":"($arg)"},{"content":"fn:position()","trigger":"fn:position"},{"content":"fn:prefix-from-QName(${1:\\$arg as xs:QName?})","trigger":"fn:prefix-from-QName","description":"($arg)"},{"content":"fn:regex-group(${1:\\$group-number as xs:integer})","trigger":"fn:regex-group","description":"($group-number)"},{"content":"fn:remove(${1:\\$target as item()*}, ${2:\\$position as xs:integer})","trigger":"fn:remove","description":"($target,$position)"},{"content":"fn:replace(${1:\\$input as xs:string?}, ${2:\\$pattern as xs:string}, ${3:\\$replacement as xs:string})","trigger":"fn:replace","description":"($input,$pattern,$replacement)"},{"content":"fn:replace(${1:\\$input as xs:string?}, ${2:\\$pattern as xs:string}, ${3:\\$replacement as xs:string}, ${4:\\$flags as xs:string})","trigger":"fn:replace","description":"($input,$pattern,$replacement,$flags)"},{"content":"fn:resolve-QName(${1:\\$qname as xs:string?}, ${2:\\$element as element()})","trigger":"fn:resolve-QName","description":"($qname,$element)"},{"content":"fn:resolve-uri(${1:\\$relative as xs:string?})","trigger":"fn:resolve-uri","description":"($relative)"},{"content":"fn:resolve-uri(${1:\\$relative as xs:string?}, ${2:\\$base as xs:string})","trigger":"fn:resolve-uri","description":"($relative,$base)"},{"content":"fn:reverse(${1:\\$target as item()*})","trigger":"fn:reverse","description":"($target)"},{"content":"fn:root(${1:\\$arg as node()?})","trigger":"fn:root","description":"($arg)"},{"content":"fn:root()","trigger":"fn:root"},{"content":"fn:round(${1:\\$arg as numeric?})","trigger":"fn:round","description":"($arg)"},{"content":"fn:round-half-to-even(${1:\\$arg as numeric?})","trigger":"fn:round-half-to-even","description":"($arg)"},{"content":"fn:round-half-to-even(${1:\\$arg as numeric?}, ${2:\\$precision as xs:integer})","trigger":"fn:round-half-to-even","description":"($arg,$precision)"},{"content":"fn:seconds-from-dateTime(${1:\\$arg as xs:dateTime?})","trigger":"fn:seconds-from-dateTime","description":"($arg)"},{"content":"fn:seconds-from-duration(${1:\\$arg as xs:duration?})","trigger":"fn:seconds-from-duration","description":"($arg)"},{"content":"fn:seconds-from-time(${1:\\$arg as xs:time?})","trigger":"fn:seconds-from-time","description":"($arg)"},{"content":"fn:starts-with(${1:\\$parameter1 as xs:string?}, ${2:\\$parameter2 as xs:string?})","trigger":"fn:starts-with","description":"($parameter1,$parameter2)"},{"content":"fn:starts-with(${1:\\$parameter1 as xs:string?}, ${2:\\$parameter2 as xs:string?}, ${3:\\$collation as xs:string})","trigger":"fn:starts-with","description":"($parameter1,$parameter2,$collation)"},{"content":"fn:static-base-uri()","trigger":"fn:static-base-uri"},{"content":"fn:string(${1:\\$arg as item()?})","trigger":"fn:string","description":"($arg)"},{"content":"fn:string()","trigger":"fn:string"},{"content":"fn:string-join(${1:\\$parameter1 as xs:string*}, ${2:\\$parameter2 as xs:string})","trigger":"fn:string-join","description":"($parameter1,$parameter2)"},{"content":"fn:string-length(${1:\\$sourceString as xs:string?})","trigger":"fn:string-length","description":"($sourceString)"},{"content":"fn:string-length()","trigger":"fn:string-length"},{"content":"fn:string-pad(${1:\\$padString as xs:string?}, ${2:\\$padCount as xs:integer})","trigger":"fn:string-pad","description":"($padString,$padCount)"},{"content":"fn:string-to-codepoints(${1:\\$arg as xs:string})","trigger":"fn:string-to-codepoints","description":"($arg)"},{"content":"fn:subsequence(${1:\\$sourceSeq as item()*}, ${2:\\$startingLoc as xs:double})","trigger":"fn:subsequence","description":"($sourceSeq,$startingLoc)"},{"content":"fn:subsequence(${1:\\$sourceSeq as item()*}, ${2:\\$startingLoc as xs:double}, ${3:\\$length as xs:double})","trigger":"fn:subsequence","description":"($sourceSeq,$startingLoc,$length)"},{"content":"fn:substring(${1:\\$sourceString as xs:string?}, ${2:\\$startingLoc as xs:double})","trigger":"fn:substring","description":"($sourceString,$startingLoc)"},{"content":"fn:substring(${1:\\$sourceString as xs:string?}, ${2:\\$startingLoc as xs:double}, ${3:\\$length as xs:double})","trigger":"fn:substring","description":"($sourceString,$startingLoc,$length)"},{"content":"fn:substring-after(${1:\\$input as xs:string?}, ${2:\\$after as xs:string?})","trigger":"fn:substring-after","description":"($input,$after)"},{"content":"fn:substring-after(${1:\\$input as xs:string?}, ${2:\\$after as xs:string?}, ${3:\\$collation as xs:string})","trigger":"fn:substring-after","description":"($input,$after,$collation)"},{"content":"fn:substring-before(${1:\\$input as xs:string?}, ${2:\\$before as xs:string?})","trigger":"fn:substring-before","description":"($input,$before)"},{"content":"fn:substring-before(${1:\\$input as xs:string?}, ${2:\\$before as xs:string?}, ${3:\\$collation as xs:string})","trigger":"fn:substring-before","description":"($input,$before,$collation)"},{"content":"fn:subtract-dateTimes-yielding-dayTimeDuration(${1:\\$srcval1 as xs:dateTime}, ${2:\\$srcval1 as xs:dateTime})","trigger":"fn:subtract-dateTimes-yielding-dayTimeDuration","description":"($srcval1,$srcval1)"},{"content":"fn:subtract-dateTimes-yielding-yearMonthDuration(${1:\\$srcval1 as xs:dateTime}, ${2:\\$srcval1 as xs:dateTime})","trigger":"fn:subtract-dateTimes-yielding-yearMonthDuration","description":"($srcval1,$srcval1)"},{"content":"fn:sum(${1:\\$arg as xs:anyAtomicType*})","trigger":"fn:sum","description":"($arg)"},{"content":"fn:sum(${1:\\$arg as xs:anyAtomicType*}, ${2:\\$zero as xs:anyAtomicType?})","trigger":"fn:sum","description":"($arg,$zero)"},{"content":"fn:system-property(${1:\\$property-name as xs:string})","trigger":"fn:system-property","description":"($property-name)"},{"content":"fn:tail(${1:\\$seq as item()*})","trigger":"fn:tail","description":"($seq)"},{"content":"fn:timezone-from-date(${1:\\$arg as xs:date?})","trigger":"fn:timezone-from-date","description":"($arg)"},{"content":"fn:timezone-from-dateTime(${1:\\$arg as xs:dateTime?})","trigger":"fn:timezone-from-dateTime","description":"($arg)"},{"content":"fn:timezone-from-time(${1:\\$arg as xs:time?})","trigger":"fn:timezone-from-time","description":"($arg)"},{"content":"fn:tokenize(${1:\\$input as xs:string?}, ${2:\\$pattern as xs:string})","trigger":"fn:tokenize","description":"($input,$pattern)"},{"content":"fn:tokenize(${1:\\$input as xs:string?}, ${2:\\$pattern as xs:string}, ${3:\\$flags as xs:string})","trigger":"fn:tokenize","description":"($input,$pattern,$flags)"},{"content":"fn:trace(${1:\\$value as item()*}, ${2:\\$label as xs:string})","trigger":"fn:trace","description":"($value,$label)"},{"content":"fn:translate(${1:\\$src as xs:string?}, ${2:\\$mapString as xs:string?}, ${3:\\$transString as xs:string?})","trigger":"fn:translate","description":"($src,$mapString,$transString)"},{"content":"fn:true()","trigger":"fn:true"},{"content":"fn:type-available(${1:\\$type-name as xs:string})","trigger":"fn:type-available","description":"($type-name)"},{"content":"fn:unordered(${1:\\$sourceSeq as item()*})","trigger":"fn:unordered","description":"($sourceSeq)"},{"content":"fn:unparsed-entity-public-id(${1:\\$entity-name as xs:string})","trigger":"fn:unparsed-entity-public-id","description":"($entity-name)"},{"content":"fn:unparsed-entity-uri(${1:\\$entity-name as xs:string})","trigger":"fn:unparsed-entity-uri","description":"($entity-name)"},{"content":"fn:unparsed-text(${1:\\$href as xs:string})","trigger":"fn:unparsed-text","description":"($href)"},{"content":"fn:unparsed-text(${1:\\$href as xs:string}, ${2:\\$encoding as xs:string})","trigger":"fn:unparsed-text","description":"($href,$encoding)"},{"content":"fn:unparsed-text-available(${1:\\$href as xs:string})","trigger":"fn:unparsed-text-available","description":"($href)"},{"content":"fn:unparsed-text-available(${1:\\$href as xs:string}, ${2:\\$encoding as xs:string})","trigger":"fn:unparsed-text-available","description":"($href,$encoding)"},{"content":"fn:upper-case(${1:\\$string as xs:string?})","trigger":"fn:upper-case","description":"($string)"},{"content":"fn:year-from-date(${1:\\$arg as xs:date?})","trigger":"fn:year-from-date","description":"($arg)"},{"content":"fn:year-from-dateTime(${1:\\$arg as xs:dateTime?})","trigger":"fn:year-from-dateTime","description":"($arg)"},{"content":"fn:years-from-duration(${1:\\$arg as xs:duration?})","trigger":"fn:years-from-duration","description":"($arg)"},{"content":"fn:zero-or-one(${1:\\$arg as item()*})","trigger":"fn:zero-or-one","description":"($arg)"},{"content":"geo:box(${1:\\$box as element()})","trigger":"geo:box","description":"($box)"},{"content":"geo:circle(${1:\\$radius as xs:double}, ${2:\\$center as element()})","trigger":"geo:circle","description":"($radius,$center)"},{"content":"geo:geospatial-query(${1:\\$regions as cts:region*})","trigger":"geo:geospatial-query","description":"($regions)"},{"content":"geo:geospatial-query(${1:\\$regions as cts:region*}, ${2:\\$options as xs:string*})","trigger":"geo:geospatial-query","description":"($regions,$options)"},{"content":"geo:geospatial-query(${1:\\$regions as cts:region*}, ${2:\\$options as xs:string*}, ${3:\\$weight as xs:double?})","trigger":"geo:geospatial-query","description":"($regions,$options,$weight)"},{"content":"geo:geospatial-query-from-elements(${1:\\$regions as element()*})","trigger":"geo:geospatial-query-from-elements","description":"($regions)"},{"content":"geo:geospatial-query-from-elements(${1:\\$regions as element()*}, ${2:\\$options as xs:string*})","trigger":"geo:geospatial-query-from-elements","description":"($regions,$options)"},{"content":"geo:geospatial-query-from-elements(${1:\\$regions as element()*}, ${2:\\$options as xs:string*}, ${3:\\$weight as xs:double?})","trigger":"geo:geospatial-query-from-elements","description":"($regions,$options,$weight)"},{"content":"geo:interior-polygon(${1:\\$polygon as element()})","trigger":"geo:interior-polygon","description":"($polygon)"},{"content":"geo:point(${1:\\$point as element()})","trigger":"geo:point","description":"($point)"},{"content":"geo:polygon(${1:\\$polygon-or-points as element()+})","trigger":"geo:polygon","description":"($polygon-or-points)"},{"content":"georss:circle(${1:\\$radius as xs:double}, ${2:\\$center as element(georss:point)})","trigger":"georss:circle","description":"($radius,$center)"},{"content":"georss:geospatial-query(${1:\\$regions as cts:region*})","trigger":"georss:geospatial-query","description":"($regions)"},{"content":"georss:geospatial-query(${1:\\$regions as cts:region*}, ${2:\\$options as xs:string*})","trigger":"georss:geospatial-query","description":"($regions,$options)"},{"content":"georss:geospatial-query(${1:\\$regions as cts:region*}, ${2:\\$options as xs:string*}, ${3:\\$weight as xs:double?})","trigger":"georss:geospatial-query","description":"($regions,$options,$weight)"},{"content":"georss:point(${1:\\$point as element(georss:point)})","trigger":"georss:point","description":"($point)"},{"content":"gml:box(${1:\\$box as element(gml:Envelope)})","trigger":"gml:box","description":"($box)"},{"content":"gml:circle(${1:\\$radius as xs:double}, ${2:\\$center as element(gml:Point)})","trigger":"gml:circle","description":"($radius,$center)"},{"content":"gml:geospatial-query(${1:\\$regions as cts:region*})","trigger":"gml:geospatial-query","description":"($regions)"},{"content":"gml:geospatial-query(${1:\\$regions as cts:region*}, ${2:\\$options as xs:string*})","trigger":"gml:geospatial-query","description":"($regions,$options)"},{"content":"gml:geospatial-query(${1:\\$regions as cts:region*}, ${2:\\$options as xs:string*}, ${3:\\$weight as xs:double?})","trigger":"gml:geospatial-query","description":"($regions,$options,$weight)"},{"content":"gml:geospatial-query-from-elements(${1:\\$regions as element()*})","trigger":"gml:geospatial-query-from-elements","description":"($regions)"},{"content":"gml:geospatial-query-from-elements(${1:\\$regions as element()*}, ${2:\\$options as xs:string*})","trigger":"gml:geospatial-query-from-elements","description":"($regions,$options)"},{"content":"gml:geospatial-query-from-elements(${1:\\$regions as element()*}, ${2:\\$options as xs:string*}, ${3:\\$weight as xs:double?})","trigger":"gml:geospatial-query-from-elements","description":"($regions,$options,$weight)"},{"content":"gml:interior-polygon(${1:\\$polygon as element(gml:Polygon)})","trigger":"gml:interior-polygon","description":"($polygon)"},{"content":"gml:point(${1:\\$point as element(gml:Point)})","trigger":"gml:point","description":"($point)"},{"content":"gml:polygon(${1:\\$polygon-or-points as element()+})","trigger":"gml:polygon","description":"($polygon-or-points)"},{"content":"hadoop:get-splits(${1:\\$nsbindings as xs:string*}, ${2:\\$doc-selector as xs:string}, ${3:\\$query as xs:string})","trigger":"hadoop:get-splits","description":"($nsbindings,$doc-selector,$query)"},{"content":"info:database-create(${1:\\$database-name as xs:string})","trigger":"info:database-create","description":"($database-name)"},{"content":"info:database-create(${1:\\$database-name as xs:string}, ${2:\\$forests-per-host as xs:positiveInteger?})","trigger":"info:database-create","description":"($database-name,$forests-per-host)"},{"content":"info:database-create(${1:\\$database-name as xs:string}, ${2:\\$forests-per-host as xs:positiveInteger?}, ${3:\\$group as xs:string?})","trigger":"info:database-create","description":"($database-name,$forests-per-host,$group)"},{"content":"info:database-create(${1:\\$database-name as xs:string}, ${2:\\$forests-per-host as xs:positiveInteger?}, ${3:\\$group as xs:string?}, ${4:\\$data-directory as xs:string?})","trigger":"info:database-create","description":"($database-name,$forests-per-host,$group,$data-directory)"},{"content":"info:database-create(${1:\\$database-name as xs:string}, ${2:\\$forests-per-host as xs:positiveInteger?}, ${3:\\$group as xs:string?}, ${4:\\$data-directory as xs:string?}, ${5:\\$security-db as xs:string?})","trigger":"info:database-create","description":"($database-name,$forests-per-host,$group,$data-directory,$security-db)"},{"content":"info:database-create(${1:\\$database-name as xs:string}, ${2:\\$forests-per-host as xs:positiveInteger?}, ${3:\\$group as xs:string?}, ${4:\\$data-directory as xs:string?}, ${5:\\$security-db as xs:string?}, ${6:\\$schemas-db as xs:string?})","trigger":"info:database-create","description":"($database-name,$forests-per-host,$group,$data-directory,$security-db,$schemas-db)"},{"content":"info:database-create(${1:\\$database-name as xs:string}, ${2:\\$forests-per-host as xs:positiveInteger?}, ${3:\\$group as xs:string?}, ${4:\\$data-directory as xs:string?}, ${5:\\$security-db as xs:string?}, ${6:\\$schemas-db as xs:string?}, ${7:\\$triggers-db as xs:string?})","trigger":"info:database-create","description":"($database-name,$forests-per-host,$group,$data-directory,$security-db,$schemas-db,$triggers-db)"},{"content":"info:database-delete(${1:\\$database-name as xs:string})","trigger":"info:database-delete","description":"($database-name)"},{"content":"info:database-delete(${1:\\$database-name as xs:string}, ${2:\\$delete-data as xs:boolean?})","trigger":"info:database-delete","description":"($database-name,$delete-data)"},{"content":"info:database-get-feature(${1:\\$database as xs:string})","trigger":"info:database-get-feature","description":"($database)"},{"content":"info:database-get-feature(${1:\\$database as xs:string}, ${2:\\$preview-settings as element(info:settings)})","trigger":"info:database-get-feature","description":"($database,$preview-settings)"},{"content":"info:database-get-feature(${1:\\$database as xs:string}, ${2:\\$preview-settings as element(info:settings)}, ${3:\\$delta as xs:boolean})","trigger":"info:database-get-feature","description":"($database,$preview-settings,$delta)"},{"content":"info:database-set-feature(${1:\\$database as xs:string}, ${2:\\$settings as element(info:settings)})","trigger":"info:database-set-feature","description":"($database,$settings)"},{"content":"info:error-detail(${1:\\$error-id as xs:unsignedLong})","trigger":"info:error-detail","description":"($error-id)"},{"content":"info:flow-cancel(${1:\\$flow-id as xs:string})","trigger":"info:flow-cancel","description":"($flow-id)"},{"content":"info:flow-id(${1:\\$flow-name as xs:string})","trigger":"info:flow-id","description":"($flow-name)"},{"content":"info:flow-policy(${1:\\$flow-id as xs:string})","trigger":"info:flow-policy","description":"($flow-id)"},{"content":"info:flow-start(${1:\\$flow-id as xs:string})","trigger":"info:flow-start","description":"($flow-id)"},{"content":"info:flow-tickets(${1:\\$flow-id as xs:string})","trigger":"info:flow-tickets","description":"($flow-id)"},{"content":"info:flow-tickets(${1:\\$flow-id as xs:string}, ${2:\\$include-inactive as xs:boolean?})","trigger":"info:flow-tickets","description":"($flow-id,$include-inactive)"},{"content":"info:load(${1:\\$dir-path as xs:string})","trigger":"info:load","description":"($dir-path)"},{"content":"info:load(${1:\\$dir-path as xs:string}, ${2:\\$policy-name as xs:string?})","trigger":"info:load","description":"($dir-path,$policy-name)"},{"content":"info:load(${1:\\$dir-path as xs:string}, ${2:\\$policy-name as xs:string?}, ${3:\\$policy-deltas as element(info:options)?})","trigger":"info:load","description":"($dir-path,$policy-name,$policy-deltas)"},{"content":"info:load(${1:\\$dir-path as xs:string}, ${2:\\$policy-name as xs:string?}, ${3:\\$policy-deltas as element(info:options)?}, ${4:\\$database as xs:string})","trigger":"info:load","description":"($dir-path,$policy-name,$policy-deltas,$database)"},{"content":"info:policy(${1:\\$policy-name as xs:string})","trigger":"info:policy","description":"($policy-name)"},{"content":"info:policy-delete(${1:\\$policy-name as xs:string})","trigger":"info:policy-delete","description":"($policy-name)"},{"content":"info:policy-names()","trigger":"info:policy-names"},{"content":"info:policy-set(${1:\\$policy-name as xs:string?})","trigger":"info:policy-set","description":"($policy-name)"},{"content":"info:policy-set(${1:\\$policy-name as xs:string?}, ${2:\\$policy as element(info:options)?})","trigger":"info:policy-set","description":"($policy-name,$policy)"},{"content":"info:policy-set()","trigger":"info:policy-set"},{"content":"info:ticket(${1:\\$ticket-id as xs:string+})","trigger":"info:ticket","description":"($ticket-id)"},{"content":"info:ticket-delete(${1:\\$ticket-id as xs:string})","trigger":"info:ticket-delete","description":"($ticket-id)"},{"content":"info:ticket-errors(${1:\\$ticket-id as xs:string})","trigger":"info:ticket-errors","description":"($ticket-id)"},{"content":"info:ticket-errors(${1:\\$ticket-id as xs:string}, ${2:\\$start as xs:unsignedInt?})","trigger":"info:ticket-errors","description":"($ticket-id,$start)"},{"content":"info:ticket-errors(${1:\\$ticket-id as xs:string}, ${2:\\$start as xs:unsignedInt?}, ${3:\\$page-length as xs:unsignedInt?})","trigger":"info:ticket-errors","description":"($ticket-id,$start,$page-length)"},{"content":"info:ticket-errors(${1:\\$ticket-id as xs:string}, ${2:\\$start as xs:unsignedInt?}, ${3:\\$page-length as xs:unsignedInt?}, ${4:\\$sort-ascending as xs:boolean?})","trigger":"info:ticket-errors","description":"($ticket-id,$start,$page-length,$sort-ascending)"},{"content":"info:ticket-errors(${1:\\$ticket-id as xs:string}, ${2:\\$start as xs:unsignedInt?}, ${3:\\$page-length as xs:unsignedInt?}, ${4:\\$sort-ascending as xs:boolean?}, ${5:\\$filter as schema-element(cts:query)?})","trigger":"info:ticket-errors","description":"($ticket-id,$start,$page-length,$sort-ascending,$filter)"},{"content":"info:tickets(${1:\\$database as xs:string*})","trigger":"info:tickets","description":"($database)"},{"content":"info:tickets(${1:\\$database as xs:string*}, ${2:\\$status as xs:string*})","trigger":"info:tickets","description":"($database,$status)"},{"content":"info:tickets(${1:\\$database as xs:string*}, ${2:\\$status as xs:string*}, ${3:\\$custom-query as schema-element(cts:query)?})","trigger":"info:tickets","description":"($database,$status,$custom-query)"},{"content":"info:tickets()","trigger":"info:tickets"},{"content":"info:unload(${1:\\$ticket-id as xs:string})","trigger":"info:unload","description":"($ticket-id)"},{"content":"info:unload(${1:\\$ticket-id as xs:string}, ${2:\\$database as xs:string*})","trigger":"info:unload","description":"($ticket-id,$database)"},{"content":"info:unload(${1:\\$ticket-id as xs:string}, ${2:\\$database as xs:string*}, ${3:\\$batch-size as xs:positiveInteger?})","trigger":"info:unload","description":"($ticket-id,$database,$batch-size)"},{"content":"infodev:check-options(${1:\\$options as element(info:options)})","trigger":"infodev:check-options","description":"($options)"},{"content":"infodev:collector-options(${1:\\$policy-name as xs:string?}, ${2:\\$policy-deltas as element(info:options)*})","trigger":"infodev:collector-options","description":"($policy-name,$policy-deltas)"},{"content":"infodev:effective-policy(${1:\\$policy-name as xs:string?}, ${2:\\$policy-deltas as element(info:options)*})","trigger":"infodev:effective-policy","description":"($policy-name,$policy-deltas)"},{"content":"infodev:file-filter(${1:\\$policy-name as xs:string?}, ${2:\\$policy-deltas as element(info:options)*})","trigger":"infodev:file-filter","description":"($policy-name,$policy-deltas)"},{"content":"infodev:filesystem-walk(${1:\\$dir-path as xs:string}, ${2:\\$ticket-id as xs:string}, ${3:\\$function as xdmp:function}, ${4:\\$policy-deltas as element(info:options)?})","trigger":"infodev:filesystem-walk","description":"($dir-path,$ticket-id,$function,$policy-deltas)"},{"content":"infodev:filesystem-walk(${1:\\$dir-path as xs:string}, ${2:\\$ticket-id as xs:string}, ${3:\\$function as xdmp:function}, ${4:\\$policy-deltas as element(info:options)?}, ${5:\\$context as item()?})","trigger":"infodev:filesystem-walk","description":"($dir-path,$ticket-id,$function,$policy-deltas,$context)"},{"content":"infodev:get-external-binary-file(${1:\\$source-location as xs:string})","trigger":"infodev:get-external-binary-file","description":"($source-location)"},{"content":"infodev:get-file(${1:\\$source-location as xs:string}, ${2:\\$ticket-id as xs:string}, ${3:\\$policy-deltas as element(info:options)?})","trigger":"infodev:get-file","description":"($source-location,$ticket-id,$policy-deltas)"},{"content":"infodev:handle-error(${1:\\$ticket-id as xs:string}, ${2:\\$context as xs:string}, ${3:\\$error as element(error:error)})","trigger":"infodev:handle-error","description":"($ticket-id,$context,$error)"},{"content":"infodev:handle-error(${1:\\$ticket-id as xs:string}, ${2:\\$context as xs:string}, ${3:\\$error as element(error:error)}, ${4:\\$annotation as element(info:annotation)?})","trigger":"infodev:handle-error","description":"($ticket-id,$context,$error,$annotation)"},{"content":"infodev:handle-error(${1:\\$ticket-id as xs:string}, ${2:\\$context as xs:string}, ${3:\\$error as element(error:error)}, ${4:\\$annotation as element(info:annotation)?}, ${5:\\$error-log-level as xs:string?})","trigger":"infodev:handle-error","description":"($ticket-id,$context,$error,$annotation,$error-log-level)"},{"content":"infodev:ingest(${1:\\$document as node()?}, ${2:\\$path as xs:string}, ${3:\\$ticket-id as xs:string})","trigger":"infodev:ingest","description":"($document,$path,$ticket-id)"},{"content":"infodev:ingest(${1:\\$document as node()?}, ${2:\\$path as xs:string}, ${3:\\$ticket-id as xs:string}, ${4:\\$policy-deltas as element(info:options)?})","trigger":"infodev:ingest","description":"($document,$path,$ticket-id,$policy-deltas)"},{"content":"infodev:ingest(${1:\\$document as node()?}, ${2:\\$path as xs:string}, ${3:\\$ticket-id as xs:string}, ${4:\\$policy-deltas as element(info:options)?}, ${5:\\$properties as element()*})","trigger":"infodev:ingest","description":"($document,$path,$ticket-id,$policy-deltas,$properties)"},{"content":"infodev:log-progress(${1:\\$ticket-id as xs:string}, ${2:\\$annotation as element(info:annotation)})","trigger":"infodev:log-progress","description":"($ticket-id,$annotation)"},{"content":"infodev:log-progress(${1:\\$ticket-id as xs:string}, ${2:\\$annotation as element(info:annotation)}, ${3:\\$documents-processed as xs:nonNegativeInteger?})","trigger":"infodev:log-progress","description":"($ticket-id,$annotation,$documents-processed)"},{"content":"infodev:log-progress(${1:\\$ticket-id as xs:string}, ${2:\\$annotation as element(info:annotation)}, ${3:\\$documents-processed as xs:nonNegativeInteger?}, ${4:\\$transactions-completed as xs:nonNegativeInteger?})","trigger":"infodev:log-progress","description":"($ticket-id,$annotation,$documents-processed,$transactions-completed)"},{"content":"infodev:log-progress(${1:\\$ticket-id as xs:string}, ${2:\\$annotation as element(info:annotation)}, ${3:\\$documents-processed as xs:nonNegativeInteger?}, ${4:\\$transactions-completed as xs:nonNegativeInteger?}, ${5:\\$error-log-level as xs:string?})","trigger":"infodev:log-progress","description":"($ticket-id,$annotation,$documents-processed,$transactions-completed,$error-log-level)"},{"content":"infodev:ticket-add-annotation(${1:\\$ticket-id as xs:string}, ${2:\\$annotation as element(info:annotation)})","trigger":"infodev:ticket-add-annotation","description":"($ticket-id,$annotation)"},{"content":"infodev:ticket-create(${1:\\$annotation as element(info:annotation)?}, ${2:\\$database as xs:string?}, ${3:\\$policy-name as xs:string?}, ${4:\\$policy-deltas as element(info:options)?})","trigger":"infodev:ticket-create","description":"($annotation,$database,$policy-name,$policy-deltas)"},{"content":"infodev:ticket-get-status(${1:\\$ticket-id as xs:string})","trigger":"infodev:ticket-get-status","description":"($ticket-id)"},{"content":"infodev:ticket-set-status(${1:\\$ticket-id as xs:string}, ${2:\\$status as xs:string})","trigger":"infodev:ticket-set-status","description":"($ticket-id,$status)"},{"content":"infodev:ticket-set-total-documents(${1:\\$ticket-id as xs:string}, ${2:\\$total-documents as xs:unsignedInt})","trigger":"infodev:ticket-set-total-documents","description":"($ticket-id,$total-documents)"},{"content":"infodev:ticket-set-total-transactions(${1:\\$ticket-id as xs:string}, ${2:\\$total-transactions as xs:unsignedInt})","trigger":"infodev:ticket-set-total-transactions","description":"($ticket-id,$total-transactions)"},{"content":"infodev:transaction(${1:\\$document-map as map:map}, ${2:\\$ticket-id as xs:string}, ${3:\\$function as xdmp:function}, ${4:\\$policy-deltas as element(info:options)?}, ${5:\\$transaction-index as xs:integer}, ${6:\\$context as item()?})","trigger":"infodev:transaction","description":"($document-map,$ticket-id,$function,$policy-deltas,$transaction-index,$context)"},{"content":"infodev:transaction(${1:\\$document-map as map:map}, ${2:\\$ticket-id as xs:string}, ${3:\\$function as xdmp:function}, ${4:\\$policy-deltas as element(info:options)?}, ${5:\\$transaction-index as xs:integer}, ${6:\\$context as item()?}, ${7:\\$error-log-level as xs:string?})","trigger":"infodev:transaction","description":"($document-map,$ticket-id,$function,$policy-deltas,$transaction-index,$context,$error-log-level)"},{"content":"infodev:transaction-size(${1:\\$policy-name as xs:string?}, ${2:\\$policy-deltas as element(info:options)*})","trigger":"infodev:transaction-size","description":"($policy-name,$policy-deltas)"},{"content":"json:array(${1:\\$array as element(json:array)})","trigger":"json:array","description":"($array)"},{"content":"json:array()","trigger":"json:array"},{"content":"json:array-pop(${1:\\$array as json:array})","trigger":"json:array-pop","description":"($array)"},{"content":"json:array-push(${1:\\$array as json:array}, ${2:\\$item as item()*})","trigger":"json:array-push","description":"($array,$item)"},{"content":"json:array-resize(${1:\\$array as json:array}, ${2:\\$newSize as xs:unsignedLong})","trigger":"json:array-resize","description":"($array,$newSize)"},{"content":"json:array-resize(${1:\\$array as json:array}, ${2:\\$newSize as xs:unsignedLong}, ${3:\\$zero as item()?})","trigger":"json:array-resize","description":"($array,$newSize,$zero)"},{"content":"json:array-size(${1:\\$array as json:array?})","trigger":"json:array-size","description":"($array)"},{"content":"json:array-values(${1:\\$array as json:array})","trigger":"json:array-values","description":"($array)"},{"content":"json:array-values(${1:\\$array as json:array}, ${2:\\$flatten as xs:boolean?})","trigger":"json:array-values","description":"($array,$flatten)"},{"content":"json:check-config(${1:\\$config as map:map})","trigger":"json:check-config","description":"($config)"},{"content":"json:check-config()","trigger":"json:check-config"},{"content":"json:config(${1:\\$strategy as xs:string})","trigger":"json:config","description":"($strategy)"},{"content":"json:null()","trigger":"json:null"},{"content":"json:object(${1:\\$map as element(json:object)})","trigger":"json:object","description":"($map)"},{"content":"json:object()","trigger":"json:object"},{"content":"json:object-define(${1:\\$keys as xs:string*})","trigger":"json:object-define","description":"($keys)"},{"content":"json:object-define()","trigger":"json:object-define"},{"content":"json:set-item-at(${1:\\$array as json:array}, ${2:\\$pos as xs:double}, ${3:\\$value as item()*})","trigger":"json:set-item-at","description":"($array,$pos,$value)"},{"content":"json:subarray(${1:\\$array as json:array}, ${2:\\$startingLoc as xs:double})","trigger":"json:subarray","description":"($array,$startingLoc)"},{"content":"json:subarray(${1:\\$array as json:array}, ${2:\\$startingLoc as xs:double}, ${3:\\$length as xs:double})","trigger":"json:subarray","description":"($array,$startingLoc,$length)"},{"content":"json:to-array(${1:\\$items as item()*})","trigger":"json:to-array","description":"($items)"},{"content":"json:to-array(${1:\\$items as item()*}, ${2:\\$limit as xs:double?})","trigger":"json:to-array","description":"($items,$limit)"},{"content":"json:to-array(${1:\\$items as item()*}, ${2:\\$limit as xs:double?}, ${3:\\$zero as item()?})","trigger":"json:to-array","description":"($items,$limit,$zero)"},{"content":"json:to-array()","trigger":"json:to-array"},{"content":"json:transform-from-json(${1:\\$json as item()})","trigger":"json:transform-from-json","description":"($json)"},{"content":"json:transform-from-json(${1:\\$json as item()}, ${2:\\$config as map:map})","trigger":"json:transform-from-json","description":"($json,$config)"},{"content":"json:transform-to-json(${1:\\$node as node()})","trigger":"json:transform-to-json","description":"($node)"},{"content":"json:transform-to-json(${1:\\$node as node()}, ${2:\\$config as map:map})","trigger":"json:transform-to-json","description":"($node,$config)"},{"content":"json:transform-to-json-object(${1:\\$node as node()})","trigger":"json:transform-to-json-object","description":"($node)"},{"content":"json:transform-to-json-object(${1:\\$node as node()}, ${2:\\$config as map:map})","trigger":"json:transform-to-json-object","description":"($node,$config)"},{"content":"json:transform-to-json-xml(${1:\\$node as node()})","trigger":"json:transform-to-json-xml","description":"($node)"},{"content":"json:transform-to-json-xml(${1:\\$node as node()}, ${2:\\$config as map:map})","trigger":"json:transform-to-json-xml","description":"($node,$config)"},{"content":"kml:box(${1:\\$envelope as element(kml:LatLongBox)})","trigger":"kml:box","description":"($envelope)"},{"content":"kml:circle(${1:\\$radius as xs:double}, ${2:\\$center as element()})","trigger":"kml:circle","description":"($radius,$center)"},{"content":"kml:geospatial-query(${1:\\$regions as cts:region*})","trigger":"kml:geospatial-query","description":"($regions)"},{"content":"kml:geospatial-query(${1:\\$regions as cts:region*}, ${2:\\$options as xs:string*})","trigger":"kml:geospatial-query","description":"($regions,$options)"},{"content":"kml:geospatial-query(${1:\\$regions as cts:region*}, ${2:\\$options as xs:string*}, ${3:\\$weight as xs:double?})","trigger":"kml:geospatial-query","description":"($regions,$options,$weight)"},{"content":"kml:geospatial-query-from-elements(${1:\\$regions as element()*})","trigger":"kml:geospatial-query-from-elements","description":"($regions)"},{"content":"kml:geospatial-query-from-elements(${1:\\$regions as element()*}, ${2:\\$options as xs:string*})","trigger":"kml:geospatial-query-from-elements","description":"($regions,$options)"},{"content":"kml:geospatial-query-from-elements(${1:\\$regions as element()*}, ${2:\\$options as xs:string*}, ${3:\\$weight as xs:double?})","trigger":"kml:geospatial-query-from-elements","description":"($regions,$options,$weight)"},{"content":"kml:interior-polygon(${1:\\$points as element(kml:Polygon)})","trigger":"kml:interior-polygon","description":"($points)"},{"content":"kml:point(${1:\\$point as element()})","trigger":"kml:point","description":"($point)"},{"content":"kml:polygon(${1:\\$polygon-or-points as element()+})","trigger":"kml:polygon","description":"($polygon-or-points)"},{"content":"lnk:create(${1:\\$from as xs:string}, ${2:\\$to as xs:string}, ${3:\\$role as xs:string}, ${4:\\$rev-role as xs:string}, ${5:\\$strength as xs:string})","trigger":"lnk:create","description":"($from,$to,$role,$rev-role,$strength)"},{"content":"lnk:from(${1:\\$from as xs:string})","trigger":"lnk:from","description":"($from)"},{"content":"lnk:get(${1:\\$from as xs:string}, ${2:\\$to as xs:string})","trigger":"lnk:get","description":"($from,$to)"},{"content":"lnk:insert(${1:\\$link as element(lnk:link)})","trigger":"lnk:insert","description":"($link)"},{"content":"lnk:remove(${1:\\$from as xs:string}, ${2:\\$to as xs:string})","trigger":"lnk:remove","description":"($from,$to)"},{"content":"lnk:to(${1:\\$to as xs:string})","trigger":"lnk:to","description":"($to)"},{"content":"map:clear(${1:\\$map as map:map})","trigger":"map:clear","description":"($map)"},{"content":"map:contains(${1:\\$map as map:map}, ${2:\\$key as xs:string})","trigger":"map:contains","description":"($map,$key)"},{"content":"map:count(${1:\\$map as map:map})","trigger":"map:count","description":"($map)"},{"content":"map:delete(${1:\\$map as map:map}, ${2:\\$key as xs:string})","trigger":"map:delete","description":"($map,$key)"},{"content":"map:entry(${1:\\$key as xs:string}, ${2:\\$value as item()*})","trigger":"map:entry","description":"($key,$value)"},{"content":"map:get(${1:\\$map as map:map}, ${2:\\$key as xs:string})","trigger":"map:get","description":"($map,$key)"},{"content":"map:keys(${1:\\$map as map:map})","trigger":"map:keys","description":"($map)"},{"content":"map:map(${1:\\$map as element(map:map)})","trigger":"map:map","description":"($map)"},{"content":"map:map()","trigger":"map:map"},{"content":"map:new(${1:\\$maps as map:map*})","trigger":"map:new","description":"($maps)"},{"content":"map:new()","trigger":"map:new"},{"content":"map:put(${1:\\$map as map:map}, ${2:\\$key as xs:string}, ${3:\\$value as item()*})","trigger":"map:put","description":"($map,$key,$value)"},{"content":"math:acos(${1:\\$x as xs:double})","trigger":"math:acos","description":"($x)"},{"content":"math:asin(${1:\\$x as xs:double})","trigger":"math:asin","description":"($x)"},{"content":"math:atan(${1:\\$x as xs:double})","trigger":"math:atan","description":"($x)"},{"content":"math:atan2(${1:\\$y as xs:double}, ${2:\\$x as xs:double})","trigger":"math:atan2","description":"($y,$x)"},{"content":"math:ceil(${1:\\$x as xs:double})","trigger":"math:ceil","description":"($x)"},{"content":"math:correlation(${1:\\$arg as json:array*})","trigger":"math:correlation","description":"($arg)"},{"content":"math:cos(${1:\\$x as xs:double})","trigger":"math:cos","description":"($x)"},{"content":"math:cosh(${1:\\$x as xs:double})","trigger":"math:cosh","description":"($x)"},{"content":"math:cot(${1:\\$x as xs:double})","trigger":"math:cot","description":"($x)"},{"content":"math:covariance(${1:\\$arg as json:array*})","trigger":"math:covariance","description":"($arg)"},{"content":"math:covariance-p(${1:\\$arg as json:array*})","trigger":"math:covariance-p","description":"($arg)"},{"content":"math:degrees(${1:\\$x as xs:double})","trigger":"math:degrees","description":"($x)"},{"content":"math:exp(${1:\\$x as xs:double})","trigger":"math:exp","description":"($x)"},{"content":"math:fabs(${1:\\$x as xs:double})","trigger":"math:fabs","description":"($x)"},{"content":"math:floor(${1:\\$x as xs:double})","trigger":"math:floor","description":"($x)"},{"content":"math:fmod(${1:\\$x as xs:double}, ${2:\\$x as xs:double})","trigger":"math:fmod","description":"($x,$x)"},{"content":"math:frexp(${1:\\$x as xs:double) as (xs:double}, xs:integer})","trigger":"math:frexp","description":"($x,xs:integer)"},{"content":"math:ldexp(${1:\\$y as xs:double}, ${2:\\$i as xs:integer})","trigger":"math:ldexp","description":"($y,$i)"},{"content":"math:linear-model(${1:\\$arg as json:array*})","trigger":"math:linear-model","description":"($arg)"},{"content":"math:linear-model-coeff(${1:\\$linear-model as math:linear-model})","trigger":"math:linear-model-coeff","description":"($linear-model)"},{"content":"math:linear-model-intercept(${1:\\$linear-model as math:linear-model})","trigger":"math:linear-model-intercept","description":"($linear-model)"},{"content":"math:linear-model-rsquared(${1:\\$linear-model as math:linear-model})","trigger":"math:linear-model-rsquared","description":"($linear-model)"},{"content":"math:log(${1:\\$x as xs:double})","trigger":"math:log","description":"($x)"},{"content":"math:log10(${1:\\$x as xs:double})","trigger":"math:log10","description":"($x)"},{"content":"math:median(${1:\\$arg as xs:double*})","trigger":"math:median","description":"($arg)"},{"content":"math:mode(${1:\\$arg as xs:anyAtomicType*})","trigger":"math:mode","description":"($arg)"},{"content":"math:mode(${1:\\$arg as xs:anyAtomicType*}, ${2:\\$options as xs:string*})","trigger":"math:mode","description":"($arg,$options)"},{"content":"math:modf(${1:\\$x as xs:double) as (xs:double}, xs:double})","trigger":"math:modf","description":"($x,xs:double)"},{"content":"math:percent-rank(${1:\\$arg as xs:anyAtomicType*}, ${2:\\$value as xs:anyAtomicType})","trigger":"math:percent-rank","description":"($arg,$value)"},{"content":"math:percent-rank(${1:\\$arg as xs:anyAtomicType*}, ${2:\\$value as xs:anyAtomicType}, ${3:\\$options as xs:string*})","trigger":"math:percent-rank","description":"($arg,$value,$options)"},{"content":"math:percentile(${1:\\$arg as xs:double*}, ${2:\\$p as xs:double*})","trigger":"math:percentile","description":"($arg,$p)"},{"content":"math:pi()","trigger":"math:pi"},{"content":"math:pow(${1:\\$x as xs:double}, ${2:\\$y as xs:double})","trigger":"math:pow","description":"($x,$y)"},{"content":"math:radians(${1:\\$x as xs:double})","trigger":"math:radians","description":"($x)"},{"content":"math:rank(${1:\\$arg as xs:anyAtomicType*}, ${2:\\$arg as xs:anyAtomicType})","trigger":"math:rank","description":"($arg,$arg)"},{"content":"math:rank(${1:\\$arg as xs:anyAtomicType*}, ${2:\\$arg as xs:anyAtomicType}, ${3:\\$options as xs:string*})","trigger":"math:rank","description":"($arg,$arg,$options)"},{"content":"math:sin(${1:\\$x as xs:double})","trigger":"math:sin","description":"($x)"},{"content":"math:sinh(${1:\\$x as xs:double})","trigger":"math:sinh","description":"($x)"},{"content":"math:sqrt(${1:\\$x as xs:double})","trigger":"math:sqrt","description":"($x)"},{"content":"math:stddev(${1:\\$arg as xs:double*})","trigger":"math:stddev","description":"($arg)"},{"content":"math:stddev-p(${1:\\$arg as xs:double*})","trigger":"math:stddev-p","description":"($arg)"},{"content":"math:tan(${1:\\$x as xs:double})","trigger":"math:tan","description":"($x)"},{"content":"math:tanh(${1:\\$x as xs:double})","trigger":"math:tanh","description":"($x)"},{"content":"math:trunc(${1:\\$arg as numeric?})","trigger":"math:trunc","description":"($arg)"},{"content":"math:trunc(${1:\\$arg as numeric?}, ${2:\\$n as xs:integer})","trigger":"math:trunc","description":"($arg,$n)"},{"content":"math:variance(${1:\\$arg as xs:double*})","trigger":"math:variance","description":"($arg)"},{"content":"math:variance-p(${1:\\$arg as xs:double*})","trigger":"math:variance-p","description":"($arg)"},{"content":"mcgm:circle(${1:\\$radius as xs:double}, ${2:\\$center as element(Dot)})","trigger":"mcgm:circle","description":"($radius,$center)"},{"content":"mcgm:geospatial-query(${1:\\$regions as cts:region*})","trigger":"mcgm:geospatial-query","description":"($regions)"},{"content":"mcgm:geospatial-query(${1:\\$regions as cts:region*}, ${2:\\$options as xs:string*})","trigger":"mcgm:geospatial-query","description":"($regions,$options)"},{"content":"mcgm:geospatial-query(${1:\\$regions as cts:region*}, ${2:\\$options as xs:string*}, ${3:\\$weight as xs:double?})","trigger":"mcgm:geospatial-query","description":"($regions,$options,$weight)"},{"content":"mcgm:geospatial-query-from-elements(${1:\\$regions as element(Dot)*})","trigger":"mcgm:geospatial-query-from-elements","description":"($regions)"},{"content":"mcgm:geospatial-query-from-elements(${1:\\$regions as element(Dot)*}, ${2:\\$options as xs:string*})","trigger":"mcgm:geospatial-query-from-elements","description":"($regions,$options)"},{"content":"mcgm:geospatial-query-from-elements(${1:\\$regions as element(Dot)*}, ${2:\\$options as xs:string*}, ${3:\\$weight as xs:double?})","trigger":"mcgm:geospatial-query-from-elements","description":"($regions,$options,$weight)"},{"content":"mcgm:point(${1:\\$point as element(Dot)})","trigger":"mcgm:point","description":"($point)"},{"content":"mcgm:polygon(${1:\\$vertices as element(Dot)*})","trigger":"mcgm:polygon","description":"($vertices)"},{"content":"msword:clean(${1:\\$uri as xs:string}, ${2:\\$doc as node()?})","trigger":"msword:clean","description":"($uri,$doc)"},{"content":"ooxml:package-parts(${1:\\$package as node()})","trigger":"ooxml:package-parts","description":"($package)"},{"content":"ooxml:package-parts-insert(${1:\\$directory as xs:string?}, ${2:\\$package-uris as xs:string*}, ${3:\\$package-parts as node()*})","trigger":"ooxml:package-parts-insert","description":"($directory,$package-uris,$package-parts)"},{"content":"ooxml:package-parts-insert(${1:\\$directory as xs:string?}, ${2:\\$package-uris as xs:string*}, ${3:\\$package-parts as node()*}, ${4:\\$permissions as item()*})","trigger":"ooxml:package-parts-insert","description":"($directory,$package-uris,$package-parts,$permissions)"},{"content":"ooxml:package-parts-insert(${1:\\$directory as xs:string?}, ${2:\\$package-uris as xs:string*}, ${3:\\$package-parts as node()*}, ${4:\\$permissions as item()*}, ${5:\\$collections as xs:string*})","trigger":"ooxml:package-parts-insert","description":"($directory,$package-uris,$package-parts,$permissions,$collections)"},{"content":"ooxml:package-parts-insert(${1:\\$directory as xs:string?}, ${2:\\$package-uris as xs:string*}, ${3:\\$package-parts as node()*}, ${4:\\$permissions as item()*}, ${5:\\$collections as xs:string*}, ${6:\\$quality as xs:int?})","trigger":"ooxml:package-parts-insert","description":"($directory,$package-uris,$package-parts,$permissions,$collections,$quality)"},{"content":"ooxml:package-parts-insert(${1:\\$directory as xs:string?}, ${2:\\$package-uris as xs:string*}, ${3:\\$package-parts as node()*}, ${4:\\$permissions as item()*}, ${5:\\$collections as xs:string*}, ${6:\\$quality as xs:int?}, ${7:\\$forest-ids as xs:unsignedLong*})","trigger":"ooxml:package-parts-insert","description":"($directory,$package-uris,$package-parts,$permissions,$collections,$quality,$forest-ids)"},{"content":"ooxml:package-uris(${1:\\$package as node()})","trigger":"ooxml:package-uris","description":"($package)"},{"content":"ooxml:runs-merge(${1:\\$nodes as node()*})","trigger":"ooxml:runs-merge","description":"($nodes)"},{"content":"p:action(${1:\\$module as xs:string}, ${2:\\$description as xs:string?}, ${3:\\$options as element()?})","trigger":"p:action","description":"($module,$description,$options)"},{"content":"p:collection()","trigger":"p:collection"},{"content":"p:condition(${1:\\$module as xs:string}, ${2:\\$description as xs:string?}, ${3:\\$options as element()?})","trigger":"p:condition","description":"($module,$description,$options)"},{"content":"p:create(${1:\\$name as xs:string}, ${2:\\$description as xs:string}, ${3:\\$success-action as element(p:action)?}, ${4:\\$failure-action as element(p:action)?}, ${5:\\$status-transitions as element(p:status-transition)*}, ${6:\\$state-transitions as element(p:state-transition)*})","trigger":"p:create","description":"($name,$description,$success-action,$failure-action,$status-transitions,$state-transitions)"},{"content":"p:execute(${1:\\$condition as element(p:condition)?}, ${2:\\$action as element(p:action)?}, ${3:\\$description as xs:string?})","trigger":"p:execute","description":"($condition,$action,$description)"},{"content":"p:get(${1:\\$pipeline-name as xs:string})","trigger":"p:get","description":"($pipeline-name)"},{"content":"p:get-by-id(${1:\\$pipeline-id as xs:unsignedLong})","trigger":"p:get-by-id","description":"($pipeline-id)"},{"content":"p:insert(${1:\\$pipeline-node as node()})","trigger":"p:insert","description":"($pipeline-node)"},{"content":"p:pipelines()","trigger":"p:pipelines"},{"content":"p:remove(${1:\\$pipeline-name as xs:string})","trigger":"p:remove","description":"($pipeline-name)"},{"content":"p:state-transition(${1:\\$state as xs:anyURI}, ${2:\\$description as xs:string}, ${3:\\$on-success as xs:anyURI?}, ${4:\\$on-failure as xs:anyURI?}, ${5:\\$priority as xs:unsignedLong?}, ${6:\\$default-action as element(p:action)?}, ${7:\\$rules as element(p:execute)*})","trigger":"p:state-transition","description":"($state,$description,$on-success,$on-failure,$priority,$default-action,$rules)"},{"content":"p:status-transition(${1:\\$status as xs:string}, ${2:\\$description as xs:string}, ${3:\\$on-success as xs:anyURI?}, ${4:\\$on-failure as xs:anyURI?}, ${5:\\$priority as xs:unsignedLong?}, ${6:\\$default-action as element(p:action)?}, ${7:\\$rules as element(p:execute)*})","trigger":"p:status-transition","description":"($status,$description,$on-success,$on-failure,$priority,$default-action,$rules)"},{"content":"pdf:clean(${1:\\$doc as node()?}, ${2:\\$toc as element()?})","trigger":"pdf:clean","description":"($doc,$toc)"},{"content":"pdf:get-toc(${1:\\$uri as xs:string})","trigger":"pdf:get-toc","description":"($uri)"},{"content":"pdf:insert-toc-headers(${1:\\$doc as node()?}, ${2:\\$toc as element()?})","trigger":"pdf:insert-toc-headers","description":"($doc,$toc)"},{"content":"pdf:make-toc(${1:\\$toc as element()?})","trigger":"pdf:make-toc","description":"($toc)"},{"content":"pkg:create(${1:\\$pkgname as xs:string})","trigger":"pkg:create","description":"($pkgname)"},{"content":"pkg:create(${1:\\$pkgname as xs:string}, ${2:\\$pkgbody as node()})","trigger":"pkg:create","description":"($pkgname,$pkgbody)"},{"content":"pkg:database-configuration(${1:\\$database as xs:string})","trigger":"pkg:database-configuration","description":"($database)"},{"content":"pkg:delete(${1:\\$pkgname as xs:string})","trigger":"pkg:delete","description":"($pkgname)"},{"content":"pkg:differences(${1:\\$pkgname as xs:string})","trigger":"pkg:differences","description":"($pkgname)"},{"content":"pkg:differences(${1:\\$pkgname as xs:string}, ${2:\\$only-diffs as xs:boolean})","trigger":"pkg:differences","description":"($pkgname,$only-diffs)"},{"content":"pkg:errors(${1:\\$pkgname as xs:string})","trigger":"pkg:errors","description":"($pkgname)"},{"content":"pkg:exists(${1:\\$pkgname as xs:string})","trigger":"pkg:exists","description":"($pkgname)"},{"content":"pkg:get-database(${1:\\$pkgname as xs:string}, ${2:\\$database as xs:string})","trigger":"pkg:get-database","description":"($pkgname,$database)"},{"content":"pkg:get-database-list(${1:\\$pkgname as xs:string})","trigger":"pkg:get-database-list","description":"($pkgname)"},{"content":"pkg:get-database-list(${1:\\$pkgname as xs:string}, ${2:\\$start as xs:unsignedLong})","trigger":"pkg:get-database-list","description":"($pkgname,$start)"},{"content":"pkg:get-database-list(${1:\\$pkgname as xs:string}, ${2:\\$start as xs:unsignedLong}, ${3:\\$pageLength as xs:unsignedLong})","trigger":"pkg:get-database-list","description":"($pkgname,$start,$pageLength)"},{"content":"pkg:get-modules(${1:\\$pkgname as xs:string}, ${2:\\$group as xs:string}, ${3:\\$server as xs:string})","trigger":"pkg:get-modules","description":"($pkgname,$group,$server)"},{"content":"pkg:get-package(${1:\\$pkgname as xs:string})","trigger":"pkg:get-package","description":"($pkgname)"},{"content":"pkg:get-package(${1:\\$pkgname as xs:string}, ${2:\\$mimetype as xs:string?})","trigger":"pkg:get-package","description":"($pkgname,$mimetype)"},{"content":"pkg:get-package-list(${1:\\$start as xs:unsignedLong})","trigger":"pkg:get-package-list","description":"($start)"},{"content":"pkg:get-package-list(${1:\\$start as xs:unsignedLong}, ${2:\\$pageLength as xs:unsignedLong})","trigger":"pkg:get-package-list","description":"($start,$pageLength)"},{"content":"pkg:get-package-list()","trigger":"pkg:get-package-list"},{"content":"pkg:get-server(${1:\\$pkgname as xs:string}, ${2:\\$group as xs:string}, ${3:\\$server as xs:string})","trigger":"pkg:get-server","description":"($pkgname,$group,$server)"},{"content":"pkg:get-server-list(${1:\\$pkgname as xs:string})","trigger":"pkg:get-server-list","description":"($pkgname)"},{"content":"pkg:get-server-list(${1:\\$pkgname as xs:string}, ${2:\\$start as xs:unsignedLong})","trigger":"pkg:get-server-list","description":"($pkgname,$start)"},{"content":"pkg:get-server-list(${1:\\$pkgname as xs:string}, ${2:\\$start as xs:unsignedLong}, ${3:\\$pageLength as xs:unsignedLong})","trigger":"pkg:get-server-list","description":"($pkgname,$start,$pageLength)"},{"content":"pkg:install(${1:\\$pkgname as xs:string})","trigger":"pkg:install","description":"($pkgname)"},{"content":"pkg:installable(${1:\\$pkgname as xs:string})","trigger":"pkg:installable","description":"($pkgname)"},{"content":"pkg:put-database(${1:\\$pkgname as xs:string}, ${2:\\$dbxml as element(db:package-database)})","trigger":"pkg:put-database","description":"($pkgname,$dbxml)"},{"content":"pkg:put-modules(${1:\\$pkgname as xs:string}, ${2:\\$group as xs:string}, ${3:\\$server as xs:string})","trigger":"pkg:put-modules","description":"($pkgname,$group,$server)"},{"content":"pkg:put-server(${1:\\$pkgname as xs:string}, ${2:\\$srvxml as element()})","trigger":"pkg:put-server","description":"($pkgname,$srvxml)"},{"content":"pkg:remove-database(${1:\\$pkgname as xs:string}, ${2:\\$database as xs:string})","trigger":"pkg:remove-database","description":"($pkgname,$database)"},{"content":"pkg:remove-modules(${1:\\$pkgname as xs:string}, ${2:\\$group as xs:string}, ${3:\\$server as xs:string})","trigger":"pkg:remove-modules","description":"($pkgname,$group,$server)"},{"content":"pkg:remove-server(${1:\\$pkgname as xs:string}, ${2:\\$group as xs:string}, ${3:\\$server as xs:string})","trigger":"pkg:remove-server","description":"($pkgname,$group,$server)"},{"content":"pkg:revert(${1:\\$ticket-id as xs:string})","trigger":"pkg:revert","description":"($ticket-id)"},{"content":"pkg:server-configuration(${1:\\$group as xs:string}, ${2:\\$server as xs:string})","trigger":"pkg:server-configuration","description":"($group,$server)"},{"content":"pkg:server-configuration(${1:\\$group as xs:string}, ${2:\\$server as xs:string}, ${3:\\$include-modules as xs:boolean})","trigger":"pkg:server-configuration","description":"($group,$server,$include-modules)"},{"content":"pkg:valid(${1:\\$pkgname as xs:string})","trigger":"pkg:valid","description":"($pkgname)"},{"content":"pki:create-template(${1:\\$name as xs:string}, ${2:\\$description as xs:string}, ${3:\\$key-type as xs:string?}, ${4:\\$key-options as element()?}, ${5:\\$csr as element(x509:req)})","trigger":"pki:create-template","description":"($name,$description,$key-type,$key-options,$csr)"},{"content":"pki:delete-certificate(${1:\\$certificate-id as xs:unsignedLong})","trigger":"pki:delete-certificate","description":"($certificate-id)"},{"content":"pki:delete-template(${1:\\$template-id as xs:unsignedLong})","trigger":"pki:delete-template","description":"($template-id)"},{"content":"pki:generate-certificate-request(${1:\\$template-id as xs:unsignedLong}, ${2:\\$common-name as xs:string}, ${3:\\$dns-name as xs:string?}, ${4:\\$ip-addr as xs:string?})","trigger":"pki:generate-certificate-request","description":"($template-id,$common-name,$dns-name,$ip-addr)"},{"content":"pki:generate-template-certificate-authority(${1:\\$template-id as xs:unsignedLong}, ${2:\\$valid-for as xs:unsignedInt})","trigger":"pki:generate-template-certificate-authority","description":"($template-id,$valid-for)"},{"content":"pki:generate-temporary-certificate(${1:\\$template-id as xs:unsignedLong}, ${2:\\$valid-for as xs:unsignedInt}, ${3:\\$common-name as xs:string}, ${4:\\$dns-name as xs:string?}, ${5:\\$ip-addr as xs:string?})","trigger":"pki:generate-temporary-certificate","description":"($template-id,$valid-for,$common-name,$dns-name,$ip-addr)"},{"content":"pki:generate-temporary-certificate-if-necessary(${1:\\$template-id as xs:unsignedLong}, ${2:\\$valid-for as xs:unsignedInt}, ${3:\\$common-name as xs:string}, ${4:\\$dns-name as xs:string?}, ${5:\\$ip-addr as xs:string?})","trigger":"pki:generate-temporary-certificate-if-necessary","description":"($template-id,$valid-for,$common-name,$dns-name,$ip-addr)"},{"content":"pki:get-certificate(${1:\\$template-id as xs:unsignedLong}, ${2:\\$common-name as xs:string}, ${3:\\$dns-name as xs:string?}, ${4:\\$ip-addr as xs:string?})","trigger":"pki:get-certificate","description":"($template-id,$common-name,$dns-name,$ip-addr)"},{"content":"pki:get-certificate-pem(${1:\\$template-id as xs:unsignedLong}, ${2:\\$hostname as xs:string})","trigger":"pki:get-certificate-pem","description":"($template-id,$hostname)"},{"content":"pki:get-certificate-xml(${1:\\$template-id as xs:unsignedLong}, ${2:\\$hostname as xs:string})","trigger":"pki:get-certificate-xml","description":"($template-id,$hostname)"},{"content":"pki:get-certificates(${1:\\$cert-id as xs:unsignedLong*})","trigger":"pki:get-certificates","description":"($cert-id)"},{"content":"pki:get-certificates-for-template(${1:\\$template-id as xs:unsignedLong})","trigger":"pki:get-certificates-for-template","description":"($template-id)"},{"content":"pki:get-certificates-for-template-xml(${1:\\$template-id as xs:unsignedLong})","trigger":"pki:get-certificates-for-template-xml","description":"($template-id)"},{"content":"pki:get-pending-certificate-request(${1:\\$template-id as xs:unsignedLong}, ${2:\\$common-name as xs:string}, ${3:\\$dns-name as xs:string?}, ${4:\\$ip-addr as xs:string?})","trigger":"pki:get-pending-certificate-request","description":"($template-id,$common-name,$dns-name,$ip-addr)"},{"content":"pki:get-pending-certificate-requests-pem(${1:\\$template-id as xs:unsignedLong})","trigger":"pki:get-pending-certificate-requests-pem","description":"($template-id)"},{"content":"pki:get-pending-certificate-requests-xml(${1:\\$template-id as xs:unsignedLong})","trigger":"pki:get-pending-certificate-requests-xml","description":"($template-id)"},{"content":"pki:get-template(${1:\\$template-id as xs:unsignedLong*})","trigger":"pki:get-template","description":"($template-id)"},{"content":"pki:get-template-by-name(${1:\\$template-name as xs:string})","trigger":"pki:get-template-by-name","description":"($template-name)"},{"content":"pki:get-template-certificate-authority(${1:\\$template-id as xs:unsignedLong})","trigger":"pki:get-template-certificate-authority","description":"($template-id)"},{"content":"pki:get-template-ids()","trigger":"pki:get-template-ids"},{"content":"pki:get-trusted-certificate-ids()","trigger":"pki:get-trusted-certificate-ids"},{"content":"pki:insert-certificate-revocation-list(${1:\\$url as xs:string}, ${2:\\$crl as item()})","trigger":"pki:insert-certificate-revocation-list","description":"($url,$crl)"},{"content":"pki:insert-host-certificate(${1:\\$template-id as xs:unsignedLong}, ${2:\\$certs as xs:string}, ${3:\\$pkey as xs:string})","trigger":"pki:insert-host-certificate","description":"($template-id,$certs,$pkey)"},{"content":"pki:insert-signed-certificates(${1:\\$certs as xs:string})","trigger":"pki:insert-signed-certificates","description":"($certs)"},{"content":"pki:insert-template(${1:\\$template as element(pki:template)})","trigger":"pki:insert-template","description":"($template)"},{"content":"pki:insert-trusted-certificates(${1:\\$certs as xs:string})","trigger":"pki:insert-trusted-certificates","description":"($certs)"},{"content":"pki:is-temporary(${1:\\$cert as element(pki:certificate)})","trigger":"pki:is-temporary","description":"($cert)"},{"content":"pki:need-certificate(${1:\\$template-id as xs:unsignedLong}, ${2:\\$common-name as xs:string}, ${3:\\$dns-name as xs:string?}, ${4:\\$ip-addr as xs:string?})","trigger":"pki:need-certificate","description":"($template-id,$common-name,$dns-name,$ip-addr)"},{"content":"pki:template-get-description(${1:\\$template as element(pki:template)})","trigger":"pki:template-get-description","description":"($template)"},{"content":"pki:template-get-id(${1:\\$template as element(pki:template)})","trigger":"pki:template-get-id","description":"($template)"},{"content":"pki:template-get-key-options(${1:\\$template as element(pki:template)})","trigger":"pki:template-get-key-options","description":"($template)"},{"content":"pki:template-get-key-type(${1:\\$template as element(pki:template)})","trigger":"pki:template-get-key-type","description":"($template)"},{"content":"pki:template-get-name(${1:\\$template as element(pki:template)})","trigger":"pki:template-get-name","description":"($template)"},{"content":"pki:template-get-request(${1:\\$template as element(pki:template)})","trigger":"pki:template-get-request","description":"($template)"},{"content":"pki:template-get-version(${1:\\$template as element(pki:template)})","trigger":"pki:template-get-version","description":"($template)"},{"content":"pki:template-in-use(${1:\\$template-id as xs:unsignedLong})","trigger":"pki:template-in-use","description":"($template-id)"},{"content":"pki:template-set-description(${1:\\$template as element(pki:template)}, ${2:\\$description as xs:string})","trigger":"pki:template-set-description","description":"($template,$description)"},{"content":"pki:template-set-key-options(${1:\\$template as element(pki:template)}, ${2:\\$key-options as element(pki:key-options)})","trigger":"pki:template-set-key-options","description":"($template,$key-options)"},{"content":"pki:template-set-key-type(${1:\\$template as element(pki:template)}, ${2:\\$key-type as xs:string})","trigger":"pki:template-set-key-type","description":"($template,$key-type)"},{"content":"pki:template-set-name(${1:\\$template as element(pki:template)}, ${2:\\$name as xs:string})","trigger":"pki:template-set-name","description":"($template,$name)"},{"content":"pki:template-set-request(${1:\\$template as element(pki:template)}, ${2:\\$req as element(x509:req)})","trigger":"pki:template-set-request","description":"($template,$req)"},{"content":"plugin:asset(${1:\\$pid as xs:string}, ${2:\\$scope as xs:string}, ${3:\\$asset-path as xs:string})","trigger":"plugin:asset","description":"($pid,$scope,$asset-path)"},{"content":"plugin:asset-exists(${1:\\$pid as xs:string}, ${2:\\$scope as xs:string}, ${3:\\$asset-path as xs:string})","trigger":"plugin:asset-exists","description":"($pid,$scope,$asset-path)"},{"content":"plugin:capability(${1:\\$capability as xs:string}, ${2:\\$uri as xs:string})","trigger":"plugin:capability","description":"($capability,$uri)"},{"content":"plugin:capability(${1:\\$capability as xs:string}, ${2:\\$uri as xs:string}, ${3:\\$scope as xs:string})","trigger":"plugin:capability","description":"($capability,$uri,$scope)"},{"content":"plugin:enumerate(${1:\\$uri as xs:string})","trigger":"plugin:enumerate","description":"($uri)"},{"content":"plugin:enumerate(${1:\\$uri as xs:string}, ${2:\\$scope as xs:string})","trigger":"plugin:enumerate","description":"($uri,$scope)"},{"content":"plugin:flush-scope(${1:\\$scope as xs:string})","trigger":"plugin:flush-scope","description":"($scope)"},{"content":"plugin:flush-scope(${1:\\$scope as xs:string}, ${2:\\$pid as xs:string?})","trigger":"plugin:flush-scope","description":"($scope,$pid)"},{"content":"plugin:implementations(${1:\\$capability as xs:string})","trigger":"plugin:implementations","description":"($capability)"},{"content":"plugin:implementations(${1:\\$capability as xs:string}, ${2:\\$scope as xs:string})","trigger":"plugin:implementations","description":"($capability,$scope)"},{"content":"plugin:initialize-scope(${1:\\$scope as xs:string})","trigger":"plugin:initialize-scope","description":"($scope)"},{"content":"plugin:install-from-filesystem(${1:\\$scope as xs:string})","trigger":"plugin:install-from-filesystem","description":"($scope)"},{"content":"plugin:install-from-zip(${1:\\$scope as xs:string}, ${2:\\$zip as binary()})","trigger":"plugin:install-from-zip","description":"($scope,$zip)"},{"content":"plugin:plugins(${1:\\$capability as xs:string*})","trigger":"plugin:plugins","description":"($capability)"},{"content":"plugin:plugins(${1:\\$capability as xs:string*}, ${2:\\$scope as xs:string})","trigger":"plugin:plugins","description":"($capability,$scope)"},{"content":"plugin:register(${1:\\$capabilities as map:map}, ${2:\\$plugin-uri as xs:string})","trigger":"plugin:register","description":"($capabilities,$plugin-uri)"},{"content":"plugin:uninstall(${1:\\$scope as xs:string}, ${2:\\$pid as xs:string?})","trigger":"plugin:uninstall","description":"($scope,$pid)"},{"content":"ppt:clean(${1:\\$uri as xs:string}, ${2:\\$doc as node()?})","trigger":"ppt:clean","description":"($uri,$doc)"},{"content":"prof:allowed(${1:\\$request-id as xs:unsignedLong})","trigger":"prof:allowed","description":"($request-id)"},{"content":"prof:disable(${1:\\$request-id as xs:unsignedLong})","trigger":"prof:disable","description":"($request-id)"},{"content":"prof:enable(${1:\\$request-id as xs:unsignedLong})","trigger":"prof:enable","description":"($request-id)"},{"content":"prof:eval(${1:\\$xquery as xs:string})","trigger":"prof:eval","description":"($xquery)"},{"content":"prof:eval(${1:\\$xquery as xs:string}, ${2:\\$vars as item()*})","trigger":"prof:eval","description":"($xquery,$vars)"},{"content":"prof:eval(${1:\\$xquery as xs:string}, ${2:\\$vars as item()*}, ${3:\\$options as (element()|map:map)?})","trigger":"prof:eval","description":"($xquery,$vars,$options)"},{"content":"prof:invoke(${1:\\$path as xs:string})","trigger":"prof:invoke","description":"($path)"},{"content":"prof:invoke(${1:\\$path as xs:string}, ${2:\\$vars as item()*})","trigger":"prof:invoke","description":"($path,$vars)"},{"content":"prof:invoke(${1:\\$path as xs:string}, ${2:\\$vars as item()*}, ${3:\\$options as (element()|map:map)?})","trigger":"prof:invoke","description":"($path,$vars,$options)"},{"content":"prof:report(${1:\\$request-id as xs:unsignedLong})","trigger":"prof:report","description":"($request-id)"},{"content":"prof:reset(${1:\\$request-id as xs:unsignedLong})","trigger":"prof:reset","description":"($request-id)"},{"content":"prof:value(${1:\\$expr as xs:string})","trigger":"prof:value","description":"($expr)"},{"content":"prof:xslt-eval(${1:\\$stylesheet as node()})","trigger":"prof:xslt-eval","description":"($stylesheet)"},{"content":"prof:xslt-eval(${1:\\$stylesheet as node()}, ${2:\\$input as node()?})","trigger":"prof:xslt-eval","description":"($stylesheet,$input)"},{"content":"prof:xslt-eval(${1:\\$stylesheet as node()}, ${2:\\$input as node()?}, ${3:\\$params as map:map?})","trigger":"prof:xslt-eval","description":"($stylesheet,$input,$params)"},{"content":"prof:xslt-eval(${1:\\$stylesheet as node()}, ${2:\\$input as node()?}, ${3:\\$params as map:map?}, ${4:\\$options as (element()|map:map)?})","trigger":"prof:xslt-eval","description":"($stylesheet,$input,$params,$options)"},{"content":"prof:xslt-invoke(${1:\\$path as xs:string})","trigger":"prof:xslt-invoke","description":"($path)"},{"content":"prof:xslt-invoke(${1:\\$path as xs:string}, ${2:\\$input as node()?})","trigger":"prof:xslt-invoke","description":"($path,$input)"},{"content":"prof:xslt-invoke(${1:\\$path as xs:string}, ${2:\\$input as node()?}, ${3:\\$params as map:map?})","trigger":"prof:xslt-invoke","description":"($path,$input,$params)"},{"content":"prof:xslt-invoke(${1:\\$path as xs:string}, ${2:\\$input as node()?}, ${3:\\$params as map:map?}, ${4:\\$options as (element()|map:map)?})","trigger":"prof:xslt-invoke","description":"($path,$input,$params,$options)"},{"content":"rdf:langString(${1:\\$string as xs:string}, ${2:\\$lang as xs:string})","trigger":"rdf:langString","description":"($string,$lang)"},{"content":"rdf:langString-language(${1:\\$val as rdf:langString})","trigger":"rdf:langString-language","description":"($val)"},{"content":"rest:check-options(${1:\\$options as element(rest:options)})","trigger":"rest:check-options","description":"($options)"},{"content":"rest:check-request(${1:\\$options as element(rest:request)})","trigger":"rest:check-request","description":"($options)"},{"content":"rest:get-raw-query-params()","trigger":"rest:get-raw-query-params"},{"content":"rest:matching-request(${1:\\$options as element(rest:options)}, ${2:\\$match-criteria as xs:string+})","trigger":"rest:matching-request","description":"($options,$match-criteria)"},{"content":"rest:process-request(${1:\\$request as element(rest:request)})","trigger":"rest:process-request","description":"($request)"},{"content":"rest:report-error(${1:\\$error as element()})","trigger":"rest:report-error","description":"($error)"},{"content":"rest:rewrite(${1:\\$options as element(rest:options)}, ${2:\\$match-criteria as xs:string+})","trigger":"rest:rewrite","description":"($options,$match-criteria)"},{"content":"sc:annotations(${1:\\$arg as schema-component()})","trigger":"sc:annotations","description":"($arg)"},{"content":"sc:annotations()","trigger":"sc:annotations"},{"content":"sc:attribute-decl(${1:\\$arg as item()})","trigger":"sc:attribute-decl","description":"($arg)"},{"content":"sc:attribute-decl()","trigger":"sc:attribute-decl"},{"content":"sc:attributes(${1:\\$arg as schema-component()})","trigger":"sc:attributes","description":"($arg)"},{"content":"sc:attributes()","trigger":"sc:attributes"},{"content":"sc:canonical-path(${1:\\$arg as schema-component()})","trigger":"sc:canonical-path","description":"($arg)"},{"content":"sc:canonical-path()","trigger":"sc:canonical-path"},{"content":"sc:complex-type(${1:\\$arg as item()})","trigger":"sc:complex-type","description":"($arg)"},{"content":"sc:complex-type()","trigger":"sc:complex-type"},{"content":"sc:component-property(${1:\\$propname as xs:string})","trigger":"sc:component-property","description":"($propname)"},{"content":"sc:component-property(${1:\\$propname as xs:string}, ${2:\\$arg as schema-component()})","trigger":"sc:component-property","description":"($propname,$arg)"},{"content":"sc:element-decl(${1:\\$arg as item()})","trigger":"sc:element-decl","description":"($arg)"},{"content":"sc:element-decl()","trigger":"sc:element-decl"},{"content":"sc:facets(${1:\\$arg as schema-component()})","trigger":"sc:facets","description":"($arg)"},{"content":"sc:facets()","trigger":"sc:facets"},{"content":"sc:function-parameter-type(${1:\\$arg as function(*)})","trigger":"sc:function-parameter-type","description":"($arg)"},{"content":"sc:function-parameter-type(${1:\\$arg as function(*)}, ${2:\\$param as xs:integer?})","trigger":"sc:function-parameter-type","description":"($arg,$param)"},{"content":"sc:function-parameter-type()","trigger":"sc:function-parameter-type"},{"content":"sc:function-return-type(${1:\\$arg as function(*)})","trigger":"sc:function-return-type","description":"($arg)"},{"content":"sc:function-return-type()","trigger":"sc:function-return-type"},{"content":"sc:name(${1:\\$arg as schema-component()})","trigger":"sc:name","description":"($arg)"},{"content":"sc:name()","trigger":"sc:name"},{"content":"sc:particles(${1:\\$arg as schema-component()})","trigger":"sc:particles","description":"($arg)"},{"content":"sc:particles()","trigger":"sc:particles"},{"content":"sc:schema(${1:\\$arg as item()})","trigger":"sc:schema","description":"($arg)"},{"content":"sc:schema()","trigger":"sc:schema"},{"content":"sc:schema-from-path(${1:\\$namespace as xs:string})","trigger":"sc:schema-from-path","description":"($namespace)"},{"content":"sc:schema-from-path(${1:\\$namespace as xs:string}, ${2:\\$location as xs:string})","trigger":"sc:schema-from-path","description":"($namespace,$location)"},{"content":"sc:simple-type(${1:\\$arg as item()})","trigger":"sc:simple-type","description":"($arg)"},{"content":"sc:simple-type()","trigger":"sc:simple-type"},{"content":"sc:type(${1:\\$arg as item()})","trigger":"sc:type","description":"($arg)"},{"content":"sc:type()","trigger":"sc:type"},{"content":"sc:type-apply(${1:\\$type as schema-type()}, ${2:\\$arg as item()})","trigger":"sc:type-apply","description":"($type,$arg)"},{"content":"sc:type-named(${1:\\$arg as xs:QName})","trigger":"sc:type-named","description":"($arg)"},{"content":"search:check-options(${1:\\$options as element(search:options)})","trigger":"search:check-options","description":"($options)"},{"content":"search:check-options(${1:\\$options as element(search:options)}, ${2:\\$strict as xs:boolean?})","trigger":"search:check-options","description":"($options,$strict)"},{"content":"search:estimate(${1:\\$cts-query as element()})","trigger":"search:estimate","description":"($cts-query)"},{"content":"search:estimate(${1:\\$cts-query as element()}, ${2:\\$options as element(search:options)?})","trigger":"search:estimate","description":"($cts-query,$options)"},{"content":"search:get-default-options()","trigger":"search:get-default-options"},{"content":"search:parse(${1:\\$qtext as xs:string+})","trigger":"search:parse","description":"($qtext)"},{"content":"search:parse(${1:\\$qtext as xs:string+}, ${2:\\$options as element(search:options)?})","trigger":"search:parse","description":"($qtext,$options)"},{"content":"search:parse(${1:\\$qtext as xs:string+}, ${2:\\$options as element(search:options)?}, ${3:\\$output as xs:string?})","trigger":"search:parse","description":"($qtext,$options,$output)"},{"content":"search:remove-constraint(${1:\\$qtext as xs:string}, ${2:\\$ptext as xs:string}, ${3:\\$options as element(search:options)?})","trigger":"search:remove-constraint","description":"($qtext,$ptext,$options)"},{"content":"search:resolve(${1:\\$query as element()})","trigger":"search:resolve","description":"($query)"},{"content":"search:resolve(${1:\\$query as element()}, ${2:\\$options as element(search:options)?})","trigger":"search:resolve","description":"($query,$options)"},{"content":"search:resolve(${1:\\$query as element()}, ${2:\\$options as element(search:options)?}, ${3:\\$start as xs:unsignedLong?})","trigger":"search:resolve","description":"($query,$options,$start)"},{"content":"search:resolve(${1:\\$query as element()}, ${2:\\$options as element(search:options)?}, ${3:\\$start as xs:unsignedLong?}, ${4:\\$page-length as xs:unsignedLong?})","trigger":"search:resolve","description":"($query,$options,$start,$page-length)"},{"content":"search:resolve-nodes(${1:\\$query as element()})","trigger":"search:resolve-nodes","description":"($query)"},{"content":"search:resolve-nodes(${1:\\$query as element()}, ${2:\\$options as element(search:options)?})","trigger":"search:resolve-nodes","description":"($query,$options)"},{"content":"search:resolve-nodes(${1:\\$query as element()}, ${2:\\$options as element(search:options)?}, ${3:\\$start as xs:unsignedLong?})","trigger":"search:resolve-nodes","description":"($query,$options,$start)"},{"content":"search:resolve-nodes(${1:\\$query as element()}, ${2:\\$options as element(search:options)?}, ${3:\\$start as xs:unsignedLong?}, ${4:\\$page-length as xs:unsignedLong?})","trigger":"search:resolve-nodes","description":"($query,$options,$start,$page-length)"},{"content":"search:search(${1:\\$qtext as xs:string+})","trigger":"search:search","description":"($qtext)"},{"content":"search:search(${1:\\$qtext as xs:string+}, ${2:\\$options as element(search:options)?})","trigger":"search:search","description":"($qtext,$options)"},{"content":"search:search(${1:\\$qtext as xs:string+}, ${2:\\$options as element(search:options)?}, ${3:\\$start as xs:unsignedLong?})","trigger":"search:search","description":"($qtext,$options,$start)"},{"content":"search:search(${1:\\$qtext as xs:string+}, ${2:\\$options as element(search:options)?}, ${3:\\$start as xs:unsignedLong?}, ${4:\\$page-length as xs:unsignedLong?})","trigger":"search:search","description":"($qtext,$options,$start,$page-length)"},{"content":"search:snippet(${1:\\$result as node()}, ${2:\\$cts-query as schema-element(cts:query)})","trigger":"search:snippet","description":"($result,$cts-query)"},{"content":"search:snippet(${1:\\$result as node()}, ${2:\\$cts-query as schema-element(cts:query)}, ${3:\\$options as element(search:transform-results)?})","trigger":"search:snippet","description":"($result,$cts-query,$options)"},{"content":"search:suggest(${1:\\$qtext as xs:string+})","trigger":"search:suggest","description":"($qtext)"},{"content":"search:suggest(${1:\\$qtext as xs:string+}, ${2:\\$options as element(search:options)?})","trigger":"search:suggest","description":"($qtext,$options)"},{"content":"search:suggest(${1:\\$qtext as xs:string+}, ${2:\\$options as element(search:options)?}, ${3:\\$limit as xs:unsignedInt?})","trigger":"search:suggest","description":"($qtext,$options,$limit)"},{"content":"search:suggest(${1:\\$qtext as xs:string+}, ${2:\\$options as element(search:options)?}, ${3:\\$limit as xs:unsignedInt?}, ${4:\\$cursor-position as xs:unsignedInt?})","trigger":"search:suggest","description":"($qtext,$options,$limit,$cursor-position)"},{"content":"search:suggest(${1:\\$qtext as xs:string+}, ${2:\\$options as element(search:options)?}, ${3:\\$limit as xs:unsignedInt?}, ${4:\\$cursor-position as xs:unsignedInt?}, ${5:\\$focus as xs:positiveInteger?})","trigger":"search:suggest","description":"($qtext,$options,$limit,$cursor-position,$focus)"},{"content":"search:suggest(${1:\\$qtext as xs:string+}, ${2:\\$options as element(search:options)?}, ${3:\\$limit as xs:unsignedInt?}, ${4:\\$cursor-position as xs:unsignedInt?}, ${5:\\$focus as xs:positiveInteger?}, ${6:\\$query as element(search:query)*})","trigger":"search:suggest","description":"($qtext,$options,$limit,$cursor-position,$focus,$query)"},{"content":"search:unparse(${1:\\$qtree as element()})","trigger":"search:unparse","description":"($qtree)"},{"content":"search:values(${1:\\$spec-name as xs:string}, ${2:\\$options as element(search:options)})","trigger":"search:values","description":"($spec-name,$options)"},{"content":"search:values(${1:\\$spec-name as xs:string}, ${2:\\$options as element(search:options)}, ${3:\\$query as element(search:query)?})","trigger":"search:values","description":"($spec-name,$options,$query)"},{"content":"search:values(${1:\\$spec-name as xs:string}, ${2:\\$options as element(search:options)}, ${3:\\$query as element(search:query)?}, ${4:\\$limit as xs:unsignedLong?})","trigger":"search:values","description":"($spec-name,$options,$query,$limit)"},{"content":"search:values(${1:\\$spec-name as xs:string}, ${2:\\$options as element(search:options)}, ${3:\\$query as element(search:query)?}, ${4:\\$limit as xs:unsignedLong?}, ${5:\\$start as xs:anyAtomicType?})","trigger":"search:values","description":"($spec-name,$options,$query,$limit,$start)"},{"content":"search:values(${1:\\$spec-name as xs:string}, ${2:\\$options as element(search:options)}, ${3:\\$query as element(search:query)?}, ${4:\\$limit as xs:unsignedLong?}, ${5:\\$start as xs:anyAtomicType?}, ${6:\\$page-start as xs:unsignedLong?})","trigger":"search:values","description":"($spec-name,$options,$query,$limit,$start,$page-start)"},{"content":"search:values(${1:\\$spec-name as xs:string}, ${2:\\$options as element(search:options)}, ${3:\\$query as element(search:query)?}, ${4:\\$limit as xs:unsignedLong?}, ${5:\\$start as xs:anyAtomicType?}, ${6:\\$page-start as xs:unsignedLong?}, ${7:\\$page-length as xs:unsignedLong?})","trigger":"search:values","description":"($spec-name,$options,$query,$limit,$start,$page-start,$page-length)"},{"content":"sec:amp-add-roles(${1:\\$namespace as xs:string}, ${2:\\$local-name as xs:string}, ${3:\\$document-uri as xs:string}, ${4:\\$database as xs:unsignedLong}, ${5:\\$role-names as xs:string*})","trigger":"sec:amp-add-roles","description":"($namespace,$local-name,$document-uri,$database,$role-names)"},{"content":"sec:amp-doc-collections()","trigger":"sec:amp-doc-collections"},{"content":"sec:amp-doc-permissions()","trigger":"sec:amp-doc-permissions"},{"content":"sec:amp-exists(${1:\\$namespace as xs:string}, ${2:\\$local-name as xs:string}, ${3:\\$document-uri as xs:string}, ${4:\\$database as xs:unsignedLong})","trigger":"sec:amp-exists","description":"($namespace,$local-name,$document-uri,$database)"},{"content":"sec:amp-get-roles(${1:\\$namespace as xs:string}, ${2:\\$local-name as xs:string}, ${3:\\$document-uri as xs:string}, ${4:\\$database as xs:unsignedLong})","trigger":"sec:amp-get-roles","description":"($namespace,$local-name,$document-uri,$database)"},{"content":"sec:amp-remove-roles(${1:\\$namespace as xs:string}, ${2:\\$local-name as xs:string}, ${3:\\$document-uri as xs:string}, ${4:\\$database as xs:unsignedLong}, ${5:\\$role-names as xs:string*})","trigger":"sec:amp-remove-roles","description":"($namespace,$local-name,$document-uri,$database,$role-names)"},{"content":"sec:amp-set-roles(${1:\\$namespace as xs:string}, ${2:\\$local-name as xs:string}, ${3:\\$document-uri as xs:string}, ${4:\\$database as xs:unsignedLong}, ${5:\\$role-names as xs:string*})","trigger":"sec:amp-set-roles","description":"($namespace,$local-name,$document-uri,$database,$role-names)"},{"content":"sec:amps-change-modules-database(${1:\\$old-db as xs:unsignedLong}, ${2:\\$new-db as xs:unsignedLong})","trigger":"sec:amps-change-modules-database","description":"($old-db,$new-db)"},{"content":"sec:amps-collection()","trigger":"sec:amps-collection"},{"content":"sec:check-admin()","trigger":"sec:check-admin"},{"content":"sec:collection-add-permissions(${1:\\$uri as xs:string}, ${2:\\$permissions as element(sec:permission)*})","trigger":"sec:collection-add-permissions","description":"($uri,$permissions)"},{"content":"sec:collection-get-permissions(${1:\\$uri as xs:string})","trigger":"sec:collection-get-permissions","description":"($uri)"},{"content":"sec:collection-remove-permissions(${1:\\$uri as xs:string}, ${2:\\$permissions as element(sec:permission)*})","trigger":"sec:collection-remove-permissions","description":"($uri,$permissions)"},{"content":"sec:collection-set-permissions(${1:\\$uri as xs:string}, ${2:\\$permissions as element(sec:permission)*})","trigger":"sec:collection-set-permissions","description":"($uri,$permissions)"},{"content":"sec:collections-collection()","trigger":"sec:collections-collection"},{"content":"sec:compartment-get-roles(${1:\\$compartment-name as xs:string})","trigger":"sec:compartment-get-roles","description":"($compartment-name)"},{"content":"sec:create-amp(${1:\\$namespace as xs:string}, ${2:\\$local-name as xs:string}, ${3:\\$document-uri as xs:string}, ${4:\\$database as xs:unsignedLong}, ${5:\\$role-names as xs:string*})","trigger":"sec:create-amp","description":"($namespace,$local-name,$document-uri,$database,$role-names)"},{"content":"sec:create-external-security(${1:\\$external-security-name as xs:string}, ${2:\\$description as xs:string}, ${3:\\$authentication as xs:string}, ${4:\\$cache-timeout as xs:unsignedInt}, ${5:\\$authorization as xs:string}, ${6:\\$ldap-server-uri as xs:string}, ${7:\\$ldap-base as xs:string}, ${8:\\$ldap-attribute as xs:string}, ${9:\\$ldap-default-user as xs:string}, ${10:\\$ldap-password as xs:string})","trigger":"sec:create-external-security","description":"($external-security-name,$description,$authentication,$cache-timeout,$authorization,$ldap-server-uri,$ldap-base,$ldap-attribute,$ldap-default-user,$ldap-password)"},{"content":"sec:create-privilege(${1:\\$privilege-name as xs:string}, ${2:\\$action as xs:string}, ${3:\\$kind as xs:string}, ${4:\\$role-names as xs:string*})","trigger":"sec:create-privilege","description":"($privilege-name,$action,$kind,$role-names)"},{"content":"sec:create-role(${1:\\$role-name as xs:string}, ${2:\\$description as xs:string?}, ${3:\\$role-names as xs:string*}, ${4:\\$permissions as element(sec:permission)*}, ${5:\\$collections as xs:string*})","trigger":"sec:create-role","description":"($role-name,$description,$role-names,$permissions,$collections)"},{"content":"sec:create-role(${1:\\$role-name as xs:string}, ${2:\\$description as xs:string?}, ${3:\\$role-names as xs:string*}, ${4:\\$permissions as element(sec:permission)*}, ${5:\\$collections as xs:string*}, ${6:\\$compartment as xs:string?})","trigger":"sec:create-role","description":"($role-name,$description,$role-names,$permissions,$collections,$compartment)"},{"content":"sec:create-role(${1:\\$role-name as xs:string}, ${2:\\$description as xs:string?}, ${3:\\$role-names as xs:string*}, ${4:\\$permissions as element(sec:permission)*}, ${5:\\$collections as xs:string*}, ${6:\\$compartment as xs:string?}, ${7:\\$external-names as xs:string*})","trigger":"sec:create-role","description":"($role-name,$description,$role-names,$permissions,$collections,$compartment,$external-names)"},{"content":"sec:create-user(${1:\\$user-name as xs:string}, ${2:\\$description as xs:string?}, ${3:\\$password as xs:string}, ${4:\\$role-names as xs:string*}, ${5:\\$permissions as element(sec:permission)*}, ${6:\\$collections as xs:string*})","trigger":"sec:create-user","description":"($user-name,$description,$password,$role-names,$permissions,$collections)"},{"content":"sec:create-user(${1:\\$user-name as xs:string}, ${2:\\$description as xs:string?}, ${3:\\$password as xs:string}, ${4:\\$role-names as xs:string*}, ${5:\\$permissions as element(sec:permission)*}, ${6:\\$collections as xs:string*}, ${7:\\$external-names as xs:string*})","trigger":"sec:create-user","description":"($user-name,$description,$password,$role-names,$permissions,$collections,$external-names)"},{"content":"sec:create-user-with-role(${1:\\$user-name as xs:string}, ${2:\\$description as xs:string?}, ${3:\\$password as xs:string}, ${4:\\$role-names as xs:string*}, ${5:\\$permissions as element(sec:permission)*}, ${6:\\$collections as xs:string*}, ${7:\\$external-names as xs:string*})","trigger":"sec:create-user-with-role","description":"($user-name,$description,$password,$role-names,$permissions,$collections,$external-names)"},{"content":"sec:credentials-get-aws()","trigger":"sec:credentials-get-aws"},{"content":"sec:credentials-set-aws(${1:\\$access-key as xs:string}, ${2:\\$secret-key as xs:string})","trigger":"sec:credentials-set-aws","description":"($access-key,$secret-key)"},{"content":"sec:external-securities-collection()","trigger":"sec:external-securities-collection"},{"content":"sec:external-security-clear-cache(${1:\\$external-security-name as xs:string})","trigger":"sec:external-security-clear-cache","description":"($external-security-name)"},{"content":"sec:external-security-doc-collections()","trigger":"sec:external-security-doc-collections"},{"content":"sec:external-security-doc-permissions()","trigger":"sec:external-security-doc-permissions"},{"content":"sec:external-security-get-authentication(${1:\\$external-security-name as xs:string})","trigger":"sec:external-security-get-authentication","description":"($external-security-name)"},{"content":"sec:external-security-get-authorization(${1:\\$external-security-name as xs:string})","trigger":"sec:external-security-get-authorization","description":"($external-security-name)"},{"content":"sec:external-security-get-cache-timeout(${1:\\$external-security-name as xs:string})","trigger":"sec:external-security-get-cache-timeout","description":"($external-security-name)"},{"content":"sec:external-security-get-description(${1:\\$external-security-name as xs:string})","trigger":"sec:external-security-get-description","description":"($external-security-name)"},{"content":"sec:external-security-get-ldap-attribute(${1:\\$external-security-name as xs:string})","trigger":"sec:external-security-get-ldap-attribute","description":"($external-security-name)"},{"content":"sec:external-security-get-ldap-base(${1:\\$external-security-name as xs:string})","trigger":"sec:external-security-get-ldap-base","description":"($external-security-name)"},{"content":"sec:external-security-get-ldap-default-user(${1:\\$external-security-name as xs:string})","trigger":"sec:external-security-get-ldap-default-user","description":"($external-security-name)"},{"content":"sec:external-security-get-ldap-server-uri(${1:\\$external-security-name as xs:string})","trigger":"sec:external-security-get-ldap-server-uri","description":"($external-security-name)"},{"content":"sec:external-security-set-authentication(${1:\\$external-security-name as xs:string}, ${2:\\$authentication as xs:string})","trigger":"sec:external-security-set-authentication","description":"($external-security-name,$authentication)"},{"content":"sec:external-security-set-authorization(${1:\\$external-security-name as xs:string}, ${2:\\$authorization as xs:string})","trigger":"sec:external-security-set-authorization","description":"($external-security-name,$authorization)"},{"content":"sec:external-security-set-cache-timeout(${1:\\$external-security-name as xs:string}, ${2:\\$cache-timeout as xs:unsignedInt})","trigger":"sec:external-security-set-cache-timeout","description":"($external-security-name,$cache-timeout)"},{"content":"sec:external-security-set-description(${1:\\$external-security-name as xs:string}, ${2:\\$description as xs:string})","trigger":"sec:external-security-set-description","description":"($external-security-name,$description)"},{"content":"sec:external-security-set-ldap-attribute(${1:\\$external-security-name as xs:string}, ${2:\\$ldap-attribute as xs:string})","trigger":"sec:external-security-set-ldap-attribute","description":"($external-security-name,$ldap-attribute)"},{"content":"sec:external-security-set-ldap-base(${1:\\$external-security-name as xs:string}, ${2:\\$ldap-base as xs:string})","trigger":"sec:external-security-set-ldap-base","description":"($external-security-name,$ldap-base)"},{"content":"sec:external-security-set-ldap-default-user(${1:\\$external-security-name as xs:string}, ${2:\\$ldap-default-user as xs:string})","trigger":"sec:external-security-set-ldap-default-user","description":"($external-security-name,$ldap-default-user)"},{"content":"sec:external-security-set-ldap-password(${1:\\$external-security-name as xs:string}, ${2:\\$ldap-password as xs:string})","trigger":"sec:external-security-set-ldap-password","description":"($external-security-name,$ldap-password)"},{"content":"sec:external-security-set-ldap-server-uri(${1:\\$external-security-name as xs:string}, ${2:\\$ldap-server-uri as xs:string})","trigger":"sec:external-security-set-ldap-server-uri","description":"($external-security-name,$ldap-server-uri)"},{"content":"sec:external-security-set-name(${1:\\$external-security-name as xs:string}, ${2:\\$new-external-security-name as xs:string})","trigger":"sec:external-security-set-name","description":"($external-security-name,$new-external-security-name)"},{"content":"sec:get-amp(${1:\\$namespace as xs:string}, ${2:\\$local-name as xs:string}, ${3:\\$document-uri as xs:string}, ${4:\\$database as xs:unsignedLong})","trigger":"sec:get-amp","description":"($namespace,$local-name,$document-uri,$database)"},{"content":"sec:get-collection(${1:\\$uri as xs:string})","trigger":"sec:get-collection","description":"($uri)"},{"content":"sec:get-compartments()","trigger":"sec:get-compartments"},{"content":"sec:get-distinct-permissions(${1:\\$input-perms as element(sec:permission)*}, ${2:\\$output-perms as element(sec:permission)*})","trigger":"sec:get-distinct-permissions","description":"($input-perms,$output-perms)"},{"content":"sec:get-privilege(${1:\\$action as xs:string}, ${2:\\$kind as xs:string})","trigger":"sec:get-privilege","description":"($action,$kind)"},{"content":"sec:get-role-ids(${1:\\$role-names as xs:string*})","trigger":"sec:get-role-ids","description":"($role-names)"},{"content":"sec:get-role-ids()","trigger":"sec:get-role-ids"},{"content":"sec:get-role-names(${1:\\$role-ids as xs:unsignedLong*})","trigger":"sec:get-role-names","description":"($role-ids)"},{"content":"sec:get-user-names(${1:\\$user-ids as xs:unsignedLong*})","trigger":"sec:get-user-names","description":"($user-ids)"},{"content":"sec:priv-doc-collections()","trigger":"sec:priv-doc-collections"},{"content":"sec:priv-doc-permissions()","trigger":"sec:priv-doc-permissions"},{"content":"sec:privilege-add-roles(${1:\\$action as xs:string}, ${2:\\$kind as xs:string}, ${3:\\$role-names as xs:string*})","trigger":"sec:privilege-add-roles","description":"($action,$kind,$role-names)"},{"content":"sec:privilege-exists(${1:\\$action as xs:string}, ${2:\\$kind as xs:string})","trigger":"sec:privilege-exists","description":"($action,$kind)"},{"content":"sec:privilege-get-roles(${1:\\$action as xs:string}, ${2:\\$kind as xs:string})","trigger":"sec:privilege-get-roles","description":"($action,$kind)"},{"content":"sec:privilege-remove-roles(${1:\\$action as xs:string}, ${2:\\$kind as xs:string}, ${3:\\$role-names as xs:string*})","trigger":"sec:privilege-remove-roles","description":"($action,$kind,$role-names)"},{"content":"sec:privilege-set-name(${1:\\$action as xs:string}, ${2:\\$kind as xs:string}, ${3:\\$new-privilege-name as xs:string})","trigger":"sec:privilege-set-name","description":"($action,$kind,$new-privilege-name)"},{"content":"sec:privilege-set-roles(${1:\\$action as xs:string}, ${2:\\$kind as xs:string}, ${3:\\$role-names as xs:string*})","trigger":"sec:privilege-set-roles","description":"($action,$kind,$role-names)"},{"content":"sec:privileges-collection()","trigger":"sec:privileges-collection"},{"content":"sec:protect-collection(${1:\\$uri as xs:string}, ${2:\\$permissions as element(sec:permission)*})","trigger":"sec:protect-collection","description":"($uri,$permissions)"},{"content":"sec:remove-amp(${1:\\$namespace as xs:string}, ${2:\\$local-name as xs:string}, ${3:\\$document-uri as xs:string}, ${4:\\$database as xs:unsignedLong})","trigger":"sec:remove-amp","description":"($namespace,$local-name,$document-uri,$database)"},{"content":"sec:remove-external-security(${1:\\$external-security-name as xs:string})","trigger":"sec:remove-external-security","description":"($external-security-name)"},{"content":"sec:remove-privilege(${1:\\$action as xs:string}, ${2:\\$kind as xs:string})","trigger":"sec:remove-privilege","description":"($action,$kind)"},{"content":"sec:remove-role(${1:\\$role-name as xs:string})","trigger":"sec:remove-role","description":"($role-name)"},{"content":"sec:remove-role-from-amps(${1:\\$role-name as xs:string})","trigger":"sec:remove-role-from-amps","description":"($role-name)"},{"content":"sec:remove-role-from-privileges(${1:\\$role-name as xs:string})","trigger":"sec:remove-role-from-privileges","description":"($role-name)"},{"content":"sec:remove-role-from-roles(${1:\\$role-name as xs:string})","trigger":"sec:remove-role-from-roles","description":"($role-name)"},{"content":"sec:remove-role-from-users(${1:\\$role-name as xs:string})","trigger":"sec:remove-role-from-users","description":"($role-name)"},{"content":"sec:remove-user(${1:\\$user-name as xs:string})","trigger":"sec:remove-user","description":"($user-name)"},{"content":"sec:role-add-roles(${1:\\$role-name as xs:string}, ${2:\\$new-roles as xs:string*})","trigger":"sec:role-add-roles","description":"($role-name,$new-roles)"},{"content":"sec:role-doc-collections()","trigger":"sec:role-doc-collections"},{"content":"sec:role-doc-permissions()","trigger":"sec:role-doc-permissions"},{"content":"sec:role-exists(${1:\\$role-name as xs:string})","trigger":"sec:role-exists","description":"($role-name)"},{"content":"sec:role-get-compartment(${1:\\$role-name as xs:string})","trigger":"sec:role-get-compartment","description":"($role-name)"},{"content":"sec:role-get-default-collections(${1:\\$role-name as xs:string})","trigger":"sec:role-get-default-collections","description":"($role-name)"},{"content":"sec:role-get-default-permissions(${1:\\$role-name as xs:string})","trigger":"sec:role-get-default-permissions","description":"($role-name)"},{"content":"sec:role-get-description(${1:\\$role-name as xs:string})","trigger":"sec:role-get-description","description":"($role-name)"},{"content":"sec:role-get-external-names(${1:\\$role-name as xs:string})","trigger":"sec:role-get-external-names","description":"($role-name)"},{"content":"sec:role-get-roles(${1:\\$role-name as xs:string})","trigger":"sec:role-get-roles","description":"($role-name)"},{"content":"sec:role-privileges(${1:\\$role-name as xs:string})","trigger":"sec:role-privileges","description":"($role-name)"},{"content":"sec:role-remove-roles(${1:\\$role-name as xs:string}, ${2:\\$role-names as xs:string*})","trigger":"sec:role-remove-roles","description":"($role-name,$role-names)"},{"content":"sec:role-set-default-collections(${1:\\$role-name as xs:string}, ${2:\\$collections as xs:string*})","trigger":"sec:role-set-default-collections","description":"($role-name,$collections)"},{"content":"sec:role-set-default-permissions(${1:\\$role-name as xs:string}, ${2:\\$permissions as element(sec:permission)*})","trigger":"sec:role-set-default-permissions","description":"($role-name,$permissions)"},{"content":"sec:role-set-description(${1:\\$role-name as xs:string}, ${2:\\$description as xs:string})","trigger":"sec:role-set-description","description":"($role-name,$description)"},{"content":"sec:role-set-external-names(${1:\\$role-name as xs:string}, ${2:\\$external-name as xs:string*})","trigger":"sec:role-set-external-names","description":"($role-name,$external-name)"},{"content":"sec:role-set-name(${1:\\$role-name as xs:string}, ${2:\\$new-role-name as xs:string})","trigger":"sec:role-set-name","description":"($role-name,$new-role-name)"},{"content":"sec:role-set-roles(${1:\\$role-name as xs:string}, ${2:\\$role-names as xs:string*})","trigger":"sec:role-set-roles","description":"($role-name,$role-names)"},{"content":"sec:roles-collection()","trigger":"sec:roles-collection"},{"content":"sec:security-collection()","trigger":"sec:security-collection"},{"content":"sec:security-installed()","trigger":"sec:security-installed"},{"content":"sec:security-namespace()","trigger":"sec:security-namespace"},{"content":"sec:security-version()","trigger":"sec:security-version"},{"content":"sec:set-realm(${1:\\$realm as xs:string})","trigger":"sec:set-realm","description":"($realm)"},{"content":"sec:uid-for-name(${1:\\$name as xs:string})","trigger":"sec:uid-for-name","description":"($name)"},{"content":"sec:unprotect-collection(${1:\\$uri as xs:string})","trigger":"sec:unprotect-collection","description":"($uri)"},{"content":"sec:user-add-roles(${1:\\$user-name as xs:string}, ${2:\\$role-names as xs:string*})","trigger":"sec:user-add-roles","description":"($user-name,$role-names)"},{"content":"sec:user-doc-collections()","trigger":"sec:user-doc-collections"},{"content":"sec:user-doc-permissions()","trigger":"sec:user-doc-permissions"},{"content":"sec:user-exists(${1:\\$user-name as xs:string})","trigger":"sec:user-exists","description":"($user-name)"},{"content":"sec:user-get-default-collections(${1:\\$user-name as xs:string})","trigger":"sec:user-get-default-collections","description":"($user-name)"},{"content":"sec:user-get-default-permissions(${1:\\$user-name as xs:string})","trigger":"sec:user-get-default-permissions","description":"($user-name)"},{"content":"sec:user-get-description(${1:\\$user-name as xs:string})","trigger":"sec:user-get-description","description":"($user-name)"},{"content":"sec:user-get-external-names(${1:\\$user-name as xs:string})","trigger":"sec:user-get-external-names","description":"($user-name)"},{"content":"sec:user-get-password-extra(${1:\\$user-name as xs:string})","trigger":"sec:user-get-password-extra","description":"($user-name)"},{"content":"sec:user-get-roles(${1:\\$user-name as xs:string})","trigger":"sec:user-get-roles","description":"($user-name)"},{"content":"sec:user-privileges(${1:\\$user-name as xs:string})","trigger":"sec:user-privileges","description":"($user-name)"},{"content":"sec:user-remove-roles(${1:\\$user-name as xs:string}, ${2:\\$role-names as xs:string*})","trigger":"sec:user-remove-roles","description":"($user-name,$role-names)"},{"content":"sec:user-set-default-collections(${1:\\$user-name as xs:string}, ${2:\\$collections as xs:string*})","trigger":"sec:user-set-default-collections","description":"($user-name,$collections)"},{"content":"sec:user-set-default-permissions(${1:\\$user-name as xs:string}, ${2:\\$permissions as element(sec:permission)*})","trigger":"sec:user-set-default-permissions","description":"($user-name,$permissions)"},{"content":"sec:user-set-description(${1:\\$user-name as xs:string}, ${2:\\$description as xs:string})","trigger":"sec:user-set-description","description":"($user-name,$description)"},{"content":"sec:user-set-external-names(${1:\\$user-name as xs:string}, ${2:\\$external-name as xs:string*})","trigger":"sec:user-set-external-names","description":"($user-name,$external-name)"},{"content":"sec:user-set-name(${1:\\$user-name as xs:string}, ${2:\\$new-user-name as xs:string}, ${3:\\$password as xs:string})","trigger":"sec:user-set-name","description":"($user-name,$new-user-name,$password)"},{"content":"sec:user-set-password(${1:\\$user-name as xs:string}, ${2:\\$password as xs:string})","trigger":"sec:user-set-password","description":"($user-name,$password)"},{"content":"sec:user-set-password-extra(${1:\\$user-name as xs:string}, ${2:\\$extra as element(sec:password-extra)})","trigger":"sec:user-set-password-extra","description":"($user-name,$extra)"},{"content":"sec:user-set-roles(${1:\\$user-name as xs:string}, ${2:\\$role-names as xs:string*})","trigger":"sec:user-set-roles","description":"($user-name,$role-names)"},{"content":"sec:users-collection()","trigger":"sec:users-collection"},{"content":"sec:validate-permissions(${1:\\$permissions as element(sec:permission)*})","trigger":"sec:validate-permissions","description":"($permissions)"},{"content":"sem:binding(${1:\\$map as element(json:object)})","trigger":"sem:binding","description":"($map)"},{"content":"sem:binding()","trigger":"sem:binding"},{"content":"sem:bnode(${1:\\$value as xs:anyAtomicType})","trigger":"sem:bnode","description":"($value)"},{"content":"sem:bnode()","trigger":"sem:bnode"},{"content":"sem:coalesce(${1:\\$parameter1 as item()*}, [${2:\\$parameterN as item()*}, ...]})","trigger":"sem:coalesce","description":"($parameter1,[$parameterN,...])"},{"content":"sem:curie-expand(${1:\\$curie as xs:string})","trigger":"sem:curie-expand","description":"($curie)"},{"content":"sem:curie-expand(${1:\\$curie as xs:string}, ${2:\\$mapping as map:map})","trigger":"sem:curie-expand","description":"($curie,$mapping)"},{"content":"sem:curie-shorten(${1:\\$iri as sem:iri})","trigger":"sem:curie-shorten","description":"($iri)"},{"content":"sem:curie-shorten(${1:\\$iri as sem:iri}, ${2:\\$mapping as map:map})","trigger":"sem:curie-shorten","description":"($iri,$mapping)"},{"content":"sem:database-nodes(${1:\\$triples as sem:triple*})","trigger":"sem:database-nodes","description":"($triples)"},{"content":"sem:database-nodes(${1:\\$triples as sem:triple*}, ${2:\\$options as xs:string*})","trigger":"sem:database-nodes","description":"($triples,$options)"},{"content":"sem:database-nodes(${1:\\$triples as sem:triple*}, ${2:\\$options as xs:string*}, ${3:\\$query as cts:query?})","trigger":"sem:database-nodes","description":"($triples,$options,$query)"},{"content":"sem:datatype(${1:\\$value as xs:anyAtomicType})","trigger":"sem:datatype","description":"($value)"},{"content":"sem:default-graph-iri()","trigger":"sem:default-graph-iri"},{"content":"sem:describe(${1:\\$iris as sem:iri*})","trigger":"sem:describe","description":"($iris)"},{"content":"sem:graph(${1:\\$graphname as sem:iri})","trigger":"sem:graph","description":"($graphname)"},{"content":"sem:graph-add-permissions(${1:\\$graph as sem:iri}, ${2:\\$permissions as element(sec:permission)*})","trigger":"sem:graph-add-permissions","description":"($graph,$permissions)"},{"content":"sem:graph-delete(${1:\\$graphname as sem:iri})","trigger":"sem:graph-delete","description":"($graphname)"},{"content":"sem:graph-get-permissions(${1:\\$graph as sem:iri}, ${2:\\$format as xs:string})","trigger":"sem:graph-get-permissions","description":"($graph,$format)"},{"content":"sem:graph-insert(${1:\\$graphname as sem:iri}, ${2:\\$triples as sem:triple*})","trigger":"sem:graph-insert","description":"($graphname,$triples)"},{"content":"sem:graph-insert(${1:\\$graphname as sem:iri}, ${2:\\$triples as sem:triple*}, ${3:\\$permissions as item()*})","trigger":"sem:graph-insert","description":"($graphname,$triples,$permissions)"},{"content":"sem:graph-insert(${1:\\$graphname as sem:iri}, ${2:\\$triples as sem:triple*}, ${3:\\$permissions as item()*}, ${4:\\$collections as xs:string*})","trigger":"sem:graph-insert","description":"($graphname,$triples,$permissions,$collections)"},{"content":"sem:graph-insert(${1:\\$graphname as sem:iri}, ${2:\\$triples as sem:triple*}, ${3:\\$permissions as item()*}, ${4:\\$collections as xs:string*}, ${5:\\$quality as xs:int?})","trigger":"sem:graph-insert","description":"($graphname,$triples,$permissions,$collections,$quality)"},{"content":"sem:graph-insert(${1:\\$graphname as sem:iri}, ${2:\\$triples as sem:triple*}, ${3:\\$permissions as item()*}, ${4:\\$collections as xs:string*}, ${5:\\$quality as xs:int?}, ${6:\\$forest-ids as xs:unsignedLong*})","trigger":"sem:graph-insert","description":"($graphname,$triples,$permissions,$collections,$quality,$forest-ids)"},{"content":"sem:graph-remove-permissions(${1:\\$graph as sem:iri}, ${2:\\$permissions as element(sec:permission)*})","trigger":"sem:graph-remove-permissions","description":"($graph,$permissions)"},{"content":"sem:graph-set-permissions(${1:\\$graph as sem:iri}, ${2:\\$permissions as element(sec:permission)*})","trigger":"sem:graph-set-permissions","description":"($graph,$permissions)"},{"content":"sem:if(${1:\\$condition as xs:boolean}, ${2:\\$then as item()*}, ${3:\\$else as item()*})","trigger":"sem:if","description":"($condition,$then,$else)"},{"content":"sem:in-memory-store(${1:\\$dataset as sem:triple*})","trigger":"sem:in-memory-store","description":"($dataset)"},{"content":"sem:invalid(${1:\\$string as xs:string}, ${2:\\$datatype as sem:iri})","trigger":"sem:invalid","description":"($string,$datatype)"},{"content":"sem:invalid-datatype(${1:\\$val as sem:invalid})","trigger":"sem:invalid-datatype","description":"($val)"},{"content":"sem:iri(${1:\\$string-iri as xs:string})","trigger":"sem:iri","description":"($string-iri)"},{"content":"sem:isBlank(${1:\\$value as xs:anyAtomicType})","trigger":"sem:isBlank","description":"($value)"},{"content":"sem:isIRI(${1:\\$value as xs:anyAtomicType})","trigger":"sem:isIRI","description":"($value)"},{"content":"sem:isLiteral(${1:\\$value as xs:anyAtomicType})","trigger":"sem:isLiteral","description":"($value)"},{"content":"sem:isNumeric(${1:\\$value as xs:anyAtomicType})","trigger":"sem:isNumeric","description":"($value)"},{"content":"sem:lang(${1:\\$value as xs:anyAtomicType})","trigger":"sem:lang","description":"($value)"},{"content":"sem:langMatches(${1:\\$lang-tag as xs:string}, ${2:\\$lang-range as xs:string})","trigger":"sem:langMatches","description":"($lang-tag,$lang-range)"},{"content":"sem:prefixes(${1:\\$prefixdef as xs:string?})","trigger":"sem:prefixes","description":"($prefixdef)"},{"content":"sem:prefixes(${1:\\$prefixdef as xs:string?}, ${2:\\$include-common as xs:boolean?})","trigger":"sem:prefixes","description":"($prefixdef,$include-common)"},{"content":"sem:query-results-serialize(${1:\\$results as item()*})","trigger":"sem:query-results-serialize","description":"($results)"},{"content":"sem:query-results-serialize(${1:\\$results as item()*}, ${2:\\$options as xs:string*})","trigger":"sem:query-results-serialize","description":"($results,$options)"},{"content":"sem:random()","trigger":"sem:random"},{"content":"sem:rdf-builder(item(), item())","trigger":"sem:rdf-builder","description":"(item(),item())"},{"content":"sem:rdf-builder(item()}, item()}, ${1:\\$prefixes as map:map?})","trigger":"sem:rdf-builder","description":"(item(),item(),$prefixes)"},{"content":"sem:rdf-builder(item()}, item()}, ${1:\\$prefixes as map:map?}, ${2:\\$graph as sem:iri?) as function(item()})","trigger":"sem:rdf-builder","description":"(item(),item(),$prefixes,$graph)"},{"content":"sem:rdf-get(${1:\\$location as xs:string})","trigger":"sem:rdf-get","description":"($location)"},{"content":"sem:rdf-get(${1:\\$location as xs:string}, ${2:\\$options as xs:string*})","trigger":"sem:rdf-get","description":"($location,$options)"},{"content":"sem:rdf-get(${1:\\$location as xs:string}, ${2:\\$options as xs:string*}, ${3:\\$http-opts as element()?})","trigger":"sem:rdf-get","description":"($location,$options,$http-opts)"},{"content":"sem:rdf-insert(${1:\\$triples as sem:triple*})","trigger":"sem:rdf-insert","description":"($triples)"},{"content":"sem:rdf-insert(${1:\\$triples as sem:triple*}, ${2:\\$options as xs:string*})","trigger":"sem:rdf-insert","description":"($triples,$options)"},{"content":"sem:rdf-insert(${1:\\$triples as sem:triple*}, ${2:\\$options as xs:string*}, ${3:\\$permissions as item()*})","trigger":"sem:rdf-insert","description":"($triples,$options,$permissions)"},{"content":"sem:rdf-insert(${1:\\$triples as sem:triple*}, ${2:\\$options as xs:string*}, ${3:\\$permissions as item()*}, ${4:\\$collections as xs:string*})","trigger":"sem:rdf-insert","description":"($triples,$options,$permissions,$collections)"},{"content":"sem:rdf-insert(${1:\\$triples as sem:triple*}, ${2:\\$options as xs:string*}, ${3:\\$permissions as item()*}, ${4:\\$collections as xs:string*}, ${5:\\$quality as xs:int?})","trigger":"sem:rdf-insert","description":"($triples,$options,$permissions,$collections,$quality)"},{"content":"sem:rdf-insert(${1:\\$triples as sem:triple*}, ${2:\\$options as xs:string*}, ${3:\\$permissions as item()*}, ${4:\\$collections as xs:string*}, ${5:\\$quality as xs:int?}, ${6:\\$forest-ids as xs:unsignedLong*})","trigger":"sem:rdf-insert","description":"($triples,$options,$permissions,$collections,$quality,$forest-ids)"},{"content":"sem:rdf-load(${1:\\$location as xs:string})","trigger":"sem:rdf-load","description":"($location)"},{"content":"sem:rdf-load(${1:\\$location as xs:string}, ${2:\\$options as xs:string*})","trigger":"sem:rdf-load","description":"($location,$options)"},{"content":"sem:rdf-load(${1:\\$location as xs:string}, ${2:\\$options as xs:string*}, ${3:\\$http-opts as element()?})","trigger":"sem:rdf-load","description":"($location,$options,$http-opts)"},{"content":"sem:rdf-load(${1:\\$location as xs:string}, ${2:\\$options as xs:string*}, ${3:\\$http-opts as element()?}, ${4:\\$permissions as item()*})","trigger":"sem:rdf-load","description":"($location,$options,$http-opts,$permissions)"},{"content":"sem:rdf-load(${1:\\$location as xs:string}, ${2:\\$options as xs:string*}, ${3:\\$http-opts as element()?}, ${4:\\$permissions as item()*}, ${5:\\$collections as xs:string*})","trigger":"sem:rdf-load","description":"($location,$options,$http-opts,$permissions,$collections)"},{"content":"sem:rdf-load(${1:\\$location as xs:string}, ${2:\\$options as xs:string*}, ${3:\\$http-opts as element()?}, ${4:\\$permissions as item()*}, ${5:\\$collections as xs:string*}, ${6:\\$quality as xs:int?})","trigger":"sem:rdf-load","description":"($location,$options,$http-opts,$permissions,$collections,$quality)"},{"content":"sem:rdf-load(${1:\\$location as xs:string}, ${2:\\$options as xs:string*}, ${3:\\$http-opts as element()?}, ${4:\\$permissions as item()*}, ${5:\\$collections as xs:string*}, ${6:\\$quality as xs:int?}, ${7:\\$forest-ids as xs:unsignedLong*})","trigger":"sem:rdf-load","description":"($location,$options,$http-opts,$permissions,$collections,$quality,$forest-ids)"},{"content":"sem:rdf-parse(${1:\\$in as item()})","trigger":"sem:rdf-parse","description":"($in)"},{"content":"sem:rdf-parse(${1:\\$in as item()}, ${2:\\$options as xs:string*})","trigger":"sem:rdf-parse","description":"($in,$options)"},{"content":"sem:rdf-serialize(${1:\\$triples as sem:triple*})","trigger":"sem:rdf-serialize","description":"($triples)"},{"content":"sem:rdf-serialize(${1:\\$triples as sem:triple*}, ${2:\\$options as xs:string*})","trigger":"sem:rdf-serialize","description":"($triples,$options)"},{"content":"sem:resolve-iri(${1:\\$relative as xs:string})","trigger":"sem:resolve-iri","description":"($relative)"},{"content":"sem:resolve-iri(${1:\\$relative as xs:string}, ${2:\\$base as xs:string})","trigger":"sem:resolve-iri","description":"($relative,$base)"},{"content":"sem:ruleset-store(${1:\\$locations as xs:string*})","trigger":"sem:ruleset-store","description":"($locations)"},{"content":"sem:ruleset-store(${1:\\$locations as xs:string*}, ${2:\\$store as sem:store*})","trigger":"sem:ruleset-store","description":"($locations,$store)"},{"content":"sem:ruleset-store(${1:\\$locations as xs:string*}, ${2:\\$store as sem:store*}, ${3:\\$options as xs:string*})","trigger":"sem:ruleset-store","description":"($locations,$store,$options)"},{"content":"sem:sameTerm(${1:\\$a as xs:anyAtomicType}, ${2:\\$b as xs:anyAtomicType})","trigger":"sem:sameTerm","description":"($a,$b)"},{"content":"sem:sparql(${1:\\$sparql as xs:string})","trigger":"sem:sparql","description":"($sparql)"},{"content":"sem:sparql(${1:\\$sparql as xs:string}, ${2:\\$bindings as map:map?})","trigger":"sem:sparql","description":"($sparql,$bindings)"},{"content":"sem:sparql(${1:\\$sparql as xs:string}, ${2:\\$bindings as map:map?}, ${3:\\$options as xs:string*})","trigger":"sem:sparql","description":"($sparql,$bindings,$options)"},{"content":"sem:sparql(${1:\\$sparql as xs:string}, ${2:\\$bindings as map:map?}, ${3:\\$options as xs:string*}, ${4:\\$store as sem:store*})","trigger":"sem:sparql","description":"($sparql,$bindings,$options,$store)"},{"content":"sem:sparql-update(${1:\\$sparql as xs:string})","trigger":"sem:sparql-update","description":"($sparql)"},{"content":"sem:sparql-update(${1:\\$sparql as xs:string}, ${2:\\$bindings as map:map?})","trigger":"sem:sparql-update","description":"($sparql,$bindings)"},{"content":"sem:sparql-update(${1:\\$sparql as xs:string}, ${2:\\$bindings as map:map?}, ${3:\\$options as xs:string*})","trigger":"sem:sparql-update","description":"($sparql,$bindings,$options)"},{"content":"sem:sparql-update(${1:\\$sparql as xs:string}, ${2:\\$bindings as map:map?}, ${3:\\$options as xs:string*}, ${4:\\$store as sem:store*})","trigger":"sem:sparql-update","description":"($sparql,$bindings,$options,$store)"},{"content":"sem:sparql-update(${1:\\$sparql as xs:string}, ${2:\\$bindings as map:map?}, ${3:\\$options as xs:string*}, ${4:\\$store as sem:store*}, ${5:\\$default-permissions as element(sec:permission)*})","trigger":"sem:sparql-update","description":"($sparql,$bindings,$options,$store,$default-permissions)"},{"content":"sem:sparql-values(${1:\\$sparql as xs:string}, ${2:\\$values as map:map*})","trigger":"sem:sparql-values","description":"($sparql,$values)"},{"content":"sem:sparql-values(${1:\\$sparql as xs:string}, ${2:\\$values as map:map*}, ${3:\\$options as xs:string*})","trigger":"sem:sparql-values","description":"($sparql,$values,$options)"},{"content":"sem:sparql-values(${1:\\$sparql as xs:string}, ${2:\\$values as map:map*}, ${3:\\$options as xs:string*}, ${4:\\$store as item()*})","trigger":"sem:sparql-values","description":"($sparql,$values,$options,$store)"},{"content":"sem:store(${1:\\$options as xs:string*})","trigger":"sem:store","description":"($options)"},{"content":"sem:store(${1:\\$options as xs:string*}, ${2:\\$query as cts:query?})","trigger":"sem:store","description":"($options,$query)"},{"content":"sem:store()","trigger":"sem:store"},{"content":"sem:timezone-string(${1:\\$value as xs:dateTime})","trigger":"sem:timezone-string","description":"($value)"},{"content":"sem:transitive-closure(${1:\\$seeds as sem:iri*}, ${2:\\$predicates as sem:iri*}, ${3:\\$limit as xs:integer})","trigger":"sem:transitive-closure","description":"($seeds,$predicates,$limit)"},{"content":"sem:triple(${1:\\$subject_or_node as item()})","trigger":"sem:triple","description":"($subject_or_node)"},{"content":"sem:triple(${1:\\$subject_or_node as item()}, ${2:\\$predicate as xs:anyAtomicType})","trigger":"sem:triple","description":"($subject_or_node,$predicate)"},{"content":"sem:triple(${1:\\$subject_or_node as item()}, ${2:\\$predicate as xs:anyAtomicType}, ${3:\\$object as xs:anyAtomicType})","trigger":"sem:triple","description":"($subject_or_node,$predicate,$object)"},{"content":"sem:triple(${1:\\$subject_or_node as item()}, ${2:\\$predicate as xs:anyAtomicType}, ${3:\\$object as xs:anyAtomicType}, ${4:\\$graph as sem:iri?})","trigger":"sem:triple","description":"($subject_or_node,$predicate,$object,$graph)"},{"content":"sem:triple-graph(${1:\\$triple as sem:triple})","trigger":"sem:triple-graph","description":"($triple)"},{"content":"sem:triple-object(${1:\\$triple as sem:triple})","trigger":"sem:triple-object","description":"($triple)"},{"content":"sem:triple-predicate(${1:\\$triple as sem:triple})","trigger":"sem:triple-predicate","description":"($triple)"},{"content":"sem:triple-subject(${1:\\$triple as sem:triple})","trigger":"sem:triple-subject","description":"($triple)"},{"content":"sem:typed-literal(${1:\\$value as xs:string}, ${2:\\$datatype as sem:iri})","trigger":"sem:typed-literal","description":"($value,$datatype)"},{"content":"sem:unknown(${1:\\$string as xs:string}, ${2:\\$datatype as sem:iri})","trigger":"sem:unknown","description":"($string,$datatype)"},{"content":"sem:unknown-datatype(${1:\\$val as sem:unknown})","trigger":"sem:unknown-datatype","description":"($val)"},{"content":"sem:uuid()","trigger":"sem:uuid"},{"content":"sem:uuid-string()","trigger":"sem:uuid-string"},{"content":"spell:add-word(${1:\\$uri as xs:string}, ${2:\\$word as xs:string})","trigger":"spell:add-word","description":"($uri,$word)"},{"content":"spell:double-metaphone(${1:\\$word as xs:string})","trigger":"spell:double-metaphone","description":"($word)"},{"content":"spell:insert(${1:\\$uri as xs:string}, ${2:\\$dict as element(spell:dictionary)})","trigger":"spell:insert","description":"($uri,$dict)"},{"content":"spell:is-correct(${1:\\$uri as xs:string*}, ${2:\\$word as xs:string})","trigger":"spell:is-correct","description":"($uri,$word)"},{"content":"spell:levenshtein-distance(${1:\\$str1 as xs:string}, ${2:\\$str2 as xs:string})","trigger":"spell:levenshtein-distance","description":"($str1,$str2)"},{"content":"spell:load(${1:\\$path as xs:string}, ${2:\\$uri as xs:string})","trigger":"spell:load","description":"($path,$uri)"},{"content":"spell:make-dictionary(${1:\\$words as xs:string*})","trigger":"spell:make-dictionary","description":"($words)"},{"content":"spell:remove-word(${1:\\$uri as xs:string}, ${2:\\$word as xs:string})","trigger":"spell:remove-word","description":"($uri,$word)"},{"content":"spell:romanize(${1:\\$string as xs:string})","trigger":"spell:romanize","description":"($string)"},{"content":"spell:suggest(${1:\\$uri as xs:string*}, ${2:\\$word as xs:string})","trigger":"spell:suggest","description":"($uri,$word)"},{"content":"spell:suggest(${1:\\$uri as xs:string*}, ${2:\\$word as xs:string}, ${3:\\$options as (element()|map:map)?})","trigger":"spell:suggest","description":"($uri,$word,$options)"},{"content":"spell:suggest-detailed(${1:\\$dictionary_uris as xs:string*}, ${2:\\$word as xs:string})","trigger":"spell:suggest-detailed","description":"($dictionary_uris,$word)"},{"content":"spell:suggest-detailed(${1:\\$dictionary_uris as xs:string*}, ${2:\\$word as xs:string}, ${3:\\$options as (element()|map:map)?})","trigger":"spell:suggest-detailed","description":"($dictionary_uris,$word,$options)"},{"content":"sql:dateadd(${1:\\$datepart as xs:string}, ${2:\\$number as xs:integer}, ${3:\\$date as item()})","trigger":"sql:dateadd","description":"($datepart,$number,$date)"},{"content":"sql:datediff(${1:\\$datepart as xs:string}, ${2:\\$startdate as item()}, ${3:\\$enddate as item()})","trigger":"sql:datediff","description":"($datepart,$startdate,$enddate)"},{"content":"sql:datepart(${1:\\$datepart as xs:string?}, ${2:\\$date as xs:genericDateTimeArg})","trigger":"sql:datepart","description":"($datepart,$date)"},{"content":"temporal:advance-lsqt(${1:\\$temporal-collection as xs:string})","trigger":"temporal:advance-lsqt","description":"($temporal-collection)"},{"content":"temporal:axes()","trigger":"temporal:axes"},{"content":"temporal:axis-create(${1:\\$axis-name as xs:string}, ${2:\\$start-range-index as cts:reference}, ${3:\\$end-range-index as cts:reference})","trigger":"temporal:axis-create","description":"($axis-name,$start-range-index,$end-range-index)"},{"content":"temporal:axis-get-end(${1:\\$axis-name as xs:string})","trigger":"temporal:axis-get-end","description":"($axis-name)"},{"content":"temporal:axis-get-start(${1:\\$axis-name as xs:string})","trigger":"temporal:axis-get-start","description":"($axis-name)"},{"content":"temporal:axis-remove(${1:\\$axis-name as xs:string})","trigger":"temporal:axis-remove","description":"($axis-name)"},{"content":"temporal:collection-create(${1:\\$collection-name as xs:string}, ${2:\\$system-axis as xs:string}, ${3:\\$valid-axis as xs:string})","trigger":"temporal:collection-create","description":"($collection-name,$system-axis,$valid-axis)"},{"content":"temporal:collection-create(${1:\\$collection-name as xs:string}, ${2:\\$system-axis as xs:string}, ${3:\\$valid-axis as xs:string}, ${4:\\$options as xs:string*})","trigger":"temporal:collection-create","description":"($collection-name,$system-axis,$valid-axis,$options)"},{"content":"temporal:collection-get-axis(${1:\\$temporal-collection as xs:string}, ${2:\\$axis as xs:string})","trigger":"temporal:collection-get-axis","description":"($temporal-collection,$axis)"},{"content":"temporal:collection-get-options(${1:\\$temporal-collection as xs:string})","trigger":"temporal:collection-get-options","description":"($temporal-collection)"},{"content":"temporal:collection-remove(${1:\\$collection-name as xs:string})","trigger":"temporal:collection-remove","description":"($collection-name)"},{"content":"temporal:collection-set-options(${1:\\$temporal-collection as xs:string}, ${2:\\$options as xs:string*})","trigger":"temporal:collection-set-options","description":"($temporal-collection,$options)"},{"content":"temporal:collections()","trigger":"temporal:collections"},{"content":"temporal:document-delete(${1:\\$temporal-collection as xs:string}, ${2:\\$uri as xs:string})","trigger":"temporal:document-delete","description":"($temporal-collection,$uri)"},{"content":"temporal:document-insert(${1:\\$temporal-collection as xs:string}, ${2:\\$uri as xs:string}, ${3:\\$root as node()})","trigger":"temporal:document-insert","description":"($temporal-collection,$uri,$root)"},{"content":"temporal:document-insert(${1:\\$temporal-collection as xs:string}, ${2:\\$uri as xs:string}, ${3:\\$root as node()}, ${4:\\$permissions as element(sec:permission)*})","trigger":"temporal:document-insert","description":"($temporal-collection,$uri,$root,$permissions)"},{"content":"temporal:document-insert(${1:\\$temporal-collection as xs:string}, ${2:\\$uri as xs:string}, ${3:\\$root as node()}, ${4:\\$permissions as element(sec:permission)*}, ${5:\\$collections as xs:string*})","trigger":"temporal:document-insert","description":"($temporal-collection,$uri,$root,$permissions,$collections)"},{"content":"temporal:document-insert(${1:\\$temporal-collection as xs:string}, ${2:\\$uri as xs:string}, ${3:\\$root as node()}, ${4:\\$permissions as element(sec:permission)*}, ${5:\\$collections as xs:string*}, ${6:\\$quality as xs:int?})","trigger":"temporal:document-insert","description":"($temporal-collection,$uri,$root,$permissions,$collections,$quality)"},{"content":"temporal:document-insert(${1:\\$temporal-collection as xs:string}, ${2:\\$uri as xs:string}, ${3:\\$root as node()}, ${4:\\$permissions as element(sec:permission)*}, ${5:\\$collections as xs:string*}, ${6:\\$quality as xs:int?}, ${7:\\$forest-ids as xs:unsignedLong*})","trigger":"temporal:document-insert","description":"($temporal-collection,$uri,$root,$permissions,$collections,$quality,$forest-ids)"},{"content":"temporal:document-load(${1:\\$temporal-collection as xs:string}, ${2:\\$location as xs:string})","trigger":"temporal:document-load","description":"($temporal-collection,$location)"},{"content":"temporal:document-load(${1:\\$temporal-collection as xs:string}, ${2:\\$location as xs:string}, ${3:\\$options as (element()|map:map)?})","trigger":"temporal:document-load","description":"($temporal-collection,$location,$options)"},{"content":"temporal:document-period(${1:\\$temporal-collection as xs:string}, ${2:\\$axis as xs:string}, ${3:\\$root as node()})","trigger":"temporal:document-period","description":"($temporal-collection,$axis,$root)"},{"content":"temporal:get-lsqt(${1:\\$temporal-collection as xs:string})","trigger":"temporal:get-lsqt","description":"($temporal-collection)"},{"content":"temporal:get-lsqt-automation(${1:\\$temporal-collection as xs:string})","trigger":"temporal:get-lsqt-automation","description":"($temporal-collection)"},{"content":"temporal:get-lsqt-automation-lag(${1:\\$temporal-collection as xs:string})","trigger":"temporal:get-lsqt-automation-lag","description":"($temporal-collection)"},{"content":"temporal:get-lsqt-automation-period(${1:\\$temporal-collection as xs:string})","trigger":"temporal:get-lsqt-automation-period","description":"($temporal-collection)"},{"content":"temporal:get-use-lsqt(${1:\\$temporal-collection as xs:string})","trigger":"temporal:get-use-lsqt","description":"($temporal-collection)"},{"content":"temporal:set-lsqt-automation(${1:\\$temporal-collection as xs:string}, ${2:\\$on as xs:boolean})","trigger":"temporal:set-lsqt-automation","description":"($temporal-collection,$on)"},{"content":"temporal:set-lsqt-automation(${1:\\$temporal-collection as xs:string}, ${2:\\$on as xs:boolean}, ${3:\\$period as xs:unsignedInt})","trigger":"temporal:set-lsqt-automation","description":"($temporal-collection,$on,$period)"},{"content":"temporal:set-lsqt-automation(${1:\\$temporal-collection as xs:string}, ${2:\\$on as xs:boolean}, ${3:\\$period as xs:unsignedInt}, ${4:\\$lag as xs:unsignedInt})","trigger":"temporal:set-lsqt-automation","description":"($temporal-collection,$on,$period,$lag)"},{"content":"temporal:set-use-lsqt(${1:\\$temporal-collection as xs:string}, ${2:\\$on as xs:boolean})","trigger":"temporal:set-use-lsqt","description":"($temporal-collection,$on)"},{"content":"temporal:statement-get-system-time(${1:\\$system-time as xs:dateTime})","trigger":"temporal:statement-get-system-time","description":"($system-time)"},{"content":"temporal:statement-set-system-time(${1:\\$system-time as xs:dateTime})","trigger":"temporal:statement-set-system-time","description":"($system-time)"},{"content":"thsr:add-synonym(${1:\\$entry as element(thsr:entry)}, ${2:\\$synonym as element(thsr:synonym)})","trigger":"thsr:add-synonym","description":"($entry,$synonym)"},{"content":"thsr:expand(${1:\\$query as cts:query}, ${2:\\$entries as element(thsr:entry)*}, ${3:\\$new-weight as xs:double?}, ${4:\\$min-weight as xs:double?}, ${5:\\$filter as node()*})","trigger":"thsr:expand","description":"($query,$entries,$new-weight,$min-weight,$filter)"},{"content":"thsr:insert(${1:\\$uri as xs:string}, ${2:\\$thsr as element(thsr:thesaurus)})","trigger":"thsr:insert","description":"($uri,$thsr)"},{"content":"thsr:load(${1:\\$path as xs:string}, ${2:\\$uri as xs:string})","trigger":"thsr:load","description":"($path,$uri)"},{"content":"thsr:lookup(${1:\\$uri as xs:string*}, ${2:\\$term as xs:string})","trigger":"thsr:lookup","description":"($uri,$term)"},{"content":"thsr:query-lookup(${1:\\$uri as xs:string*}, ${2:\\$query as cts:query})","trigger":"thsr:query-lookup","description":"($uri,$query)"},{"content":"thsr:remove-entry(${1:\\$uri as xs:string*}, ${2:\\$entry as element(thsr:entry)})","trigger":"thsr:remove-entry","description":"($uri,$entry)"},{"content":"thsr:remove-synonym(${1:\\$entry as element(thsr:entry)}, ${2:\\$synonym as element(thsr:synonym)})","trigger":"thsr:remove-synonym","description":"($entry,$synonym)"},{"content":"thsr:remove-term(${1:\\$uri as xs:string*}, ${2:\\$term as xs:string})","trigger":"thsr:remove-term","description":"($uri,$term)"},{"content":"thsr:set-entry(${1:\\$uri as xs:string}, ${2:\\$entry as element(thsr:entry)})","trigger":"thsr:set-entry","description":"($uri,$entry)"},{"content":"tieredstorage:database-create-sub-database(${1:\\$database-id as xs:unsignedLong*}, ${2:\\$database-name as xs:string})","trigger":"tieredstorage:database-create-sub-database","description":"($database-id,$database-name)"},{"content":"tieredstorage:database-create-sub-database(${1:\\$database-id as xs:unsignedLong*}, ${2:\\$database-name as xs:string}, ${3:\\$kind as xs:string})","trigger":"tieredstorage:database-create-sub-database","description":"($database-id,$database-name,$kind)"},{"content":"tieredstorage:database-create-super-database(${1:\\$database-id as xs:unsignedLong}, ${2:\\$database-name as xs:string})","trigger":"tieredstorage:database-create-super-database","description":"($database-id,$database-name)"},{"content":"tieredstorage:database-delete-sub-database(${1:\\$database-id as xs:unsignedLong}, ${2:\\$delete-dbid as xs:unsignedLong})","trigger":"tieredstorage:database-delete-sub-database","description":"($database-id,$delete-dbid)"},{"content":"tieredstorage:database-delete-super-database(${1:\\$database-id as xs:unsignedLong}, ${2:\\$delete-dbid as xs:unsignedLong})","trigger":"tieredstorage:database-delete-super-database","description":"($database-id,$delete-dbid)"},{"content":"tieredstorage:database-partitions(${1:\\$database-id as xs:unsignedLong})","trigger":"tieredstorage:database-partitions","description":"($database-id)"},{"content":"tieredstorage:forest-combine(${1:\\$forest-ids as xs:unsignedLong*}, ${2:\\$forest-name as xs:string}, ${3:\\$host-id as xs:unsignedLong})","trigger":"tieredstorage:forest-combine","description":"($forest-ids,$forest-name,$host-id)"},{"content":"tieredstorage:forest-combine(${1:\\$forest-ids as xs:unsignedLong*}, ${2:\\$forest-name as xs:string}, ${3:\\$host-id as xs:unsignedLong}, ${4:\\$data-directory as xs:string?})","trigger":"tieredstorage:forest-combine","description":"($forest-ids,$forest-name,$host-id,$data-directory)"},{"content":"tieredstorage:forest-combine(${1:\\$forest-ids as xs:unsignedLong*}, ${2:\\$forest-name as xs:string}, ${3:\\$host-id as xs:unsignedLong}, ${4:\\$data-directory as xs:string?}, ${5:\\$large-data-directory as xs:string?})","trigger":"tieredstorage:forest-combine","description":"($forest-ids,$forest-name,$host-id,$data-directory,$large-data-directory)"},{"content":"tieredstorage:forest-combine(${1:\\$forest-ids as xs:unsignedLong*}, ${2:\\$forest-name as xs:string}, ${3:\\$host-id as xs:unsignedLong}, ${4:\\$data-directory as xs:string?}, ${5:\\$large-data-directory as xs:string?}, ${6:\\$fast-data-directory as xs:string?})","trigger":"tieredstorage:forest-combine","description":"($forest-ids,$forest-name,$host-id,$data-directory,$large-data-directory,$fast-data-directory)"},{"content":"tieredstorage:forest-combine(${1:\\$forest-ids as xs:unsignedLong*}, ${2:\\$forest-name as xs:string}, ${3:\\$host-id as xs:unsignedLong}, ${4:\\$data-directory as xs:string?}, ${5:\\$large-data-directory as xs:string?}, ${6:\\$fast-data-directory as xs:string?}, ${7:\\$options as xs:string*})","trigger":"tieredstorage:forest-combine","description":"($forest-ids,$forest-name,$host-id,$data-directory,$large-data-directory,$fast-data-directory,$options)"},{"content":"tieredstorage:forest-migrate(${1:\\$forest-ids as xs:unsignedLong*})","trigger":"tieredstorage:forest-migrate","description":"($forest-ids)"},{"content":"tieredstorage:forest-migrate(${1:\\$forest-ids as xs:unsignedLong*}, ${2:\\$new-host-id as xs:unsignedLong?})","trigger":"tieredstorage:forest-migrate","description":"($forest-ids,$new-host-id)"},{"content":"tieredstorage:forest-migrate(${1:\\$forest-ids as xs:unsignedLong*}, ${2:\\$new-host-id as xs:unsignedLong?}, ${3:\\$new-data-directory as xs:string?})","trigger":"tieredstorage:forest-migrate","description":"($forest-ids,$new-host-id,$new-data-directory)"},{"content":"tieredstorage:forest-migrate(${1:\\$forest-ids as xs:unsignedLong*}, ${2:\\$new-host-id as xs:unsignedLong?}, ${3:\\$new-data-directory as xs:string?}, ${4:\\$new-large-data-directory as xs:string?})","trigger":"tieredstorage:forest-migrate","description":"($forest-ids,$new-host-id,$new-data-directory,$new-large-data-directory)"},{"content":"tieredstorage:forest-migrate(${1:\\$forest-ids as xs:unsignedLong*}, ${2:\\$new-host-id as xs:unsignedLong?}, ${3:\\$new-data-directory as xs:string?}, ${4:\\$new-large-data-directory as xs:string?}, ${5:\\$new-fast-data-directory as xs:string?})","trigger":"tieredstorage:forest-migrate","description":"($forest-ids,$new-host-id,$new-data-directory,$new-large-data-directory,$new-fast-data-directory)"},{"content":"tieredstorage:forest-migrate(${1:\\$forest-ids as xs:unsignedLong*}, ${2:\\$new-host-id as xs:unsignedLong?}, ${3:\\$new-data-directory as xs:string?}, ${4:\\$new-large-data-directory as xs:string?}, ${5:\\$new-fast-data-directory as xs:string?}, ${6:\\$options as xs:string*})","trigger":"tieredstorage:forest-migrate","description":"($forest-ids,$new-host-id,$new-data-directory,$new-large-data-directory,$new-fast-data-directory,$options)"},{"content":"tieredstorage:partition-create(${1:\\$database-id as xs:unsignedLong}, ${2:\\$partition-name as xs:string}, ${3:\\$lower as xs:anyAtomicType?}, ${4:\\$upper as xs:anyAtomicType?}, ${5:\\$forests-per-host as xs:unsignedInt}, ${6:\\$host-ids as xs:unsignedLong*})","trigger":"tieredstorage:partition-create","description":"($database-id,$partition-name,$lower,$upper,$forests-per-host,$host-ids)"},{"content":"tieredstorage:partition-create(${1:\\$database-id as xs:unsignedLong}, ${2:\\$partition-name as xs:string}, ${3:\\$lower as xs:anyAtomicType?}, ${4:\\$upper as xs:anyAtomicType?}, ${5:\\$forests-per-host as xs:unsignedInt}, ${6:\\$host-ids as xs:unsignedLong*}, ${7:\\$data-directory as xs:string?})","trigger":"tieredstorage:partition-create","description":"($database-id,$partition-name,$lower,$upper,$forests-per-host,$host-ids,$data-directory)"},{"content":"tieredstorage:partition-create(${1:\\$database-id as xs:unsignedLong}, ${2:\\$partition-name as xs:string}, ${3:\\$lower as xs:anyAtomicType?}, ${4:\\$upper as xs:anyAtomicType?}, ${5:\\$forests-per-host as xs:unsignedInt}, ${6:\\$host-ids as xs:unsignedLong*}, ${7:\\$data-directory as xs:string?}, ${8:\\$large-data-directory as xs:string?})","trigger":"tieredstorage:partition-create","description":"($database-id,$partition-name,$lower,$upper,$forests-per-host,$host-ids,$data-directory,$large-data-directory)"},{"content":"tieredstorage:partition-create(${1:\\$database-id as xs:unsignedLong}, ${2:\\$partition-name as xs:string}, ${3:\\$lower as xs:anyAtomicType?}, ${4:\\$upper as xs:anyAtomicType?}, ${5:\\$forests-per-host as xs:unsignedInt}, ${6:\\$host-ids as xs:unsignedLong*}, ${7:\\$data-directory as xs:string?}, ${8:\\$large-data-directory as xs:string?}, ${9:\\$fast-data-directory as xs:string?})","trigger":"tieredstorage:partition-create","description":"($database-id,$partition-name,$lower,$upper,$forests-per-host,$host-ids,$data-directory,$large-data-directory,$fast-data-directory)"},{"content":"tieredstorage:partition-create(${1:\\$database-id as xs:unsignedLong}, ${2:\\$partition-name as xs:string}, ${3:\\$lower as xs:anyAtomicType?}, ${4:\\$upper as xs:anyAtomicType?}, ${5:\\$forests-per-host as xs:unsignedInt}, ${6:\\$host-ids as xs:unsignedLong*}, ${7:\\$data-directory as xs:string?}, ${8:\\$large-data-directory as xs:string?}, ${9:\\$fast-data-directory as xs:string?}, ${10:\\$options as xs:string*})","trigger":"tieredstorage:partition-create","description":"($database-id,$partition-name,$lower,$upper,$forests-per-host,$host-ids,$data-directory,$large-data-directory,$fast-data-directory,$options)"},{"content":"tieredstorage:partition-delete(${1:\\$database-id as xs:unsignedLong}, ${2:\\$partition-name as xs:string})","trigger":"tieredstorage:partition-delete","description":"($database-id,$partition-name)"},{"content":"tieredstorage:partition-delete(${1:\\$database-id as xs:unsignedLong}, ${2:\\$partition-name as xs:string}, ${3:\\$delete-data as xs:boolean})","trigger":"tieredstorage:partition-delete","description":"($database-id,$partition-name,$delete-data)"},{"content":"tieredstorage:partition-forests(${1:\\$database-id as xs:unsignedLong}, ${2:\\$partition-name as xs:string})","trigger":"tieredstorage:partition-forests","description":"($database-id,$partition-name)"},{"content":"tieredstorage:partition-forests(${1:\\$database-id as xs:unsignedLong}, ${2:\\$partition-name as xs:string}, ${3:\\$include-replicas as xs:boolean})","trigger":"tieredstorage:partition-forests","description":"($database-id,$partition-name,$include-replicas)"},{"content":"tieredstorage:partition-migrate(${1:\\$database-id as xs:unsignedLong}, ${2:\\$partition-name as xs:string}, ${3:\\$host-ids as xs:unsignedLong*})","trigger":"tieredstorage:partition-migrate","description":"($database-id,$partition-name,$host-ids)"},{"content":"tieredstorage:partition-migrate(${1:\\$database-id as xs:unsignedLong}, ${2:\\$partition-name as xs:string}, ${3:\\$host-ids as xs:unsignedLong*}, ${4:\\$data-directory as xs:string?})","trigger":"tieredstorage:partition-migrate","description":"($database-id,$partition-name,$host-ids,$data-directory)"},{"content":"tieredstorage:partition-migrate(${1:\\$database-id as xs:unsignedLong}, ${2:\\$partition-name as xs:string}, ${3:\\$host-ids as xs:unsignedLong*}, ${4:\\$data-directory as xs:string?}, ${5:\\$large-data-directory as xs:string?})","trigger":"tieredstorage:partition-migrate","description":"($database-id,$partition-name,$host-ids,$data-directory,$large-data-directory)"},{"content":"tieredstorage:partition-migrate(${1:\\$database-id as xs:unsignedLong}, ${2:\\$partition-name as xs:string}, ${3:\\$host-ids as xs:unsignedLong*}, ${4:\\$data-directory as xs:string?}, ${5:\\$large-data-directory as xs:string?}, ${6:\\$fast-data-directory as xs:string?})","trigger":"tieredstorage:partition-migrate","description":"($database-id,$partition-name,$host-ids,$data-directory,$large-data-directory,$fast-data-directory)"},{"content":"tieredstorage:partition-migrate(${1:\\$database-id as xs:unsignedLong}, ${2:\\$partition-name as xs:string}, ${3:\\$host-ids as xs:unsignedLong*}, ${4:\\$data-directory as xs:string?}, ${5:\\$large-data-directory as xs:string?}, ${6:\\$fast-data-directory as xs:string?}, ${7:\\$options as xs:string*})","trigger":"tieredstorage:partition-migrate","description":"($database-id,$partition-name,$host-ids,$data-directory,$large-data-directory,$fast-data-directory,$options)"},{"content":"tieredstorage:partition-resize(${1:\\$database-id as xs:unsignedLong}, ${2:\\$partition-name as xs:string}, ${3:\\$forests-per-host as xs:unsignedInt}, ${4:\\$host-ids as xs:unsignedLong*})","trigger":"tieredstorage:partition-resize","description":"($database-id,$partition-name,$forests-per-host,$host-ids)"},{"content":"tieredstorage:partition-resize(${1:\\$database-id as xs:unsignedLong}, ${2:\\$partition-name as xs:string}, ${3:\\$forests-per-host as xs:unsignedInt}, ${4:\\$host-ids as xs:unsignedLong*}, ${5:\\$data-directory as xs:string?})","trigger":"tieredstorage:partition-resize","description":"($database-id,$partition-name,$forests-per-host,$host-ids,$data-directory)"},{"content":"tieredstorage:partition-resize(${1:\\$database-id as xs:unsignedLong}, ${2:\\$partition-name as xs:string}, ${3:\\$forests-per-host as xs:unsignedInt}, ${4:\\$host-ids as xs:unsignedLong*}, ${5:\\$data-directory as xs:string?}, ${6:\\$large-data-directory as xs:string?})","trigger":"tieredstorage:partition-resize","description":"($database-id,$partition-name,$forests-per-host,$host-ids,$data-directory,$large-data-directory)"},{"content":"tieredstorage:partition-resize(${1:\\$database-id as xs:unsignedLong}, ${2:\\$partition-name as xs:string}, ${3:\\$forests-per-host as xs:unsignedInt}, ${4:\\$host-ids as xs:unsignedLong*}, ${5:\\$data-directory as xs:string?}, ${6:\\$large-data-directory as xs:string?}, ${7:\\$fast-data-directory as xs:string?})","trigger":"tieredstorage:partition-resize","description":"($database-id,$partition-name,$forests-per-host,$host-ids,$data-directory,$large-data-directory,$fast-data-directory)"},{"content":"tieredstorage:partition-resize(${1:\\$database-id as xs:unsignedLong}, ${2:\\$partition-name as xs:string}, ${3:\\$forests-per-host as xs:unsignedInt}, ${4:\\$host-ids as xs:unsignedLong*}, ${5:\\$data-directory as xs:string?}, ${6:\\$large-data-directory as xs:string?}, ${7:\\$fast-data-directory as xs:string?}, ${8:\\$options as xs:string*})","trigger":"tieredstorage:partition-resize","description":"($database-id,$partition-name,$forests-per-host,$host-ids,$data-directory,$large-data-directory,$fast-data-directory,$options)"},{"content":"tieredstorage:partition-set-availability(${1:\\$database-id as xs:unsignedLong}, ${2:\\$partition-name as xs:string}, ${3:\\$value as xs:string})","trigger":"tieredstorage:partition-set-availability","description":"($database-id,$partition-name,$value)"},{"content":"tieredstorage:partition-set-updates-allowed(${1:\\$database-id as xs:unsignedLong}, ${2:\\$partition-name as xs:string}, ${3:\\$value as xs:string})","trigger":"tieredstorage:partition-set-updates-allowed","description":"($database-id,$partition-name,$value)"},{"content":"tieredstorage:partition-transfer(${1:\\$partition-db-id as xs:unsignedLong}, ${2:\\$partition-name as xs:string}, ${3:\\$dst-db-id as xs:unsignedLong})","trigger":"tieredstorage:partition-transfer","description":"($partition-db-id,$partition-name,$dst-db-id)"},{"content":"trgr:any-property-content()","trigger":"trgr:any-property-content"},{"content":"trgr:collection-scope(${1:\\$uri as xs:string})","trigger":"trgr:collection-scope","description":"($uri)"},{"content":"trgr:create-trigger(${1:\\$trigger-name as xs:string}, ${2:\\$description as xs:string?}, ${3:\\$event as element()}, ${4:\\$module as element(trgr:module)}, ${5:\\$enabled as xs:boolean}, ${6:\\$permissions as item()*})","trigger":"trgr:create-trigger","description":"($trigger-name,$description,$event,$module,$enabled,$permissions)"},{"content":"trgr:create-trigger(${1:\\$trigger-name as xs:string}, ${2:\\$description as xs:string?}, ${3:\\$event as element()}, ${4:\\$module as element(trgr:module)}, ${5:\\$enabled as xs:boolean}, ${6:\\$permissions as item()*}, ${7:\\$recursive as xs:boolean?})","trigger":"trgr:create-trigger","description":"($trigger-name,$description,$event,$module,$enabled,$permissions,$recursive)"},{"content":"trgr:create-trigger(${1:\\$trigger-name as xs:string}, ${2:\\$description as xs:string?}, ${3:\\$event as element()}, ${4:\\$module as element(trgr:module)}, ${5:\\$enabled as xs:boolean}, ${6:\\$permissions as item()*}, ${7:\\$recursive as xs:boolean?}, ${8:\\$task-priority as xs:string})","trigger":"trgr:create-trigger","description":"($trigger-name,$description,$event,$module,$enabled,$permissions,$recursive,$task-priority)"},{"content":"trgr:directory-scope(${1:\\$uri as xs:string}, ${2:\\$depth as xs:string})","trigger":"trgr:directory-scope","description":"($uri,$depth)"},{"content":"trgr:document-content(${1:\\$update-kind as xs:string})","trigger":"trgr:document-content","description":"($update-kind)"},{"content":"trgr:document-scope(${1:\\$uri as xs:string})","trigger":"trgr:document-scope","description":"($uri)"},{"content":"trgr:get-trigger(${1:\\$trigger-name as xs:string})","trigger":"trgr:get-trigger","description":"($trigger-name)"},{"content":"trgr:get-trigger-by-id(${1:\\$trigger-id as xs:unsignedLong})","trigger":"trgr:get-trigger-by-id","description":"($trigger-id)"},{"content":"trgr:post-commit()","trigger":"trgr:post-commit"},{"content":"trgr:pre-commit()","trigger":"trgr:pre-commit"},{"content":"trgr:property-content(${1:\\$property-name as xs:QName})","trigger":"trgr:property-content","description":"($property-name)"},{"content":"trgr:remove-trigger(${1:\\$trigger-name as xs:string})","trigger":"trgr:remove-trigger","description":"($trigger-name)"},{"content":"trgr:trigger-add-permissions(${1:\\$trigger-name as xs:string}, ${2:\\$permissions as item()*})","trigger":"trgr:trigger-add-permissions","description":"($trigger-name,$permissions)"},{"content":"trgr:trigger-data-event(${1:\\$scope as element()}, ${2:\\$content as element()}, ${3:\\$when as element(trgr:when)})","trigger":"trgr:trigger-data-event","description":"($scope,$content,$when)"},{"content":"trgr:trigger-database-online-event(${1:\\$user-name as xs:string})","trigger":"trgr:trigger-database-online-event","description":"($user-name)"},{"content":"trgr:trigger-disable(${1:\\$trigger-name as xs:string})","trigger":"trgr:trigger-disable","description":"($trigger-name)"},{"content":"trgr:trigger-enable(${1:\\$trigger-name as xs:string})","trigger":"trgr:trigger-enable","description":"($trigger-name)"},{"content":"trgr:trigger-get-permissions(${1:\\$trigger-name as xs:string})","trigger":"trgr:trigger-get-permissions","description":"($trigger-name)"},{"content":"trgr:trigger-module(${1:\\$database-id as xs:unsignedLong}, ${2:\\$root as xs:string}, ${3:\\$path as xs:string})","trigger":"trgr:trigger-module","description":"($database-id,$root,$path)"},{"content":"trgr:trigger-remove-permissions(${1:\\$trigger-name as xs:string}, ${2:\\$permissions as item()*})","trigger":"trgr:trigger-remove-permissions","description":"($trigger-name,$permissions)"},{"content":"trgr:trigger-set-description(${1:\\$trigger-name as xs:string}, ${2:\\$description as xs:string})","trigger":"trgr:trigger-set-description","description":"($trigger-name,$description)"},{"content":"trgr:trigger-set-event(${1:\\$trigger-name as xs:string}, ${2:\\$event as element()})","trigger":"trgr:trigger-set-event","description":"($trigger-name,$event)"},{"content":"trgr:trigger-set-module(${1:\\$trigger-name as xs:string}, ${2:\\$module as element(trgr:module)})","trigger":"trgr:trigger-set-module","description":"($trigger-name,$module)"},{"content":"trgr:trigger-set-name(${1:\\$trigger-name as xs:string}, ${2:\\$new-trigger-name as xs:string})","trigger":"trgr:trigger-set-name","description":"($trigger-name,$new-trigger-name)"},{"content":"trgr:trigger-set-permissions(${1:\\$trigger-name as xs:string}, ${2:\\$permissions as item()*})","trigger":"trgr:trigger-set-permissions","description":"($trigger-name,$permissions)"},{"content":"trgr:trigger-set-recursive(${1:\\$trigger-name as xs:string}, ${2:\\$recursive as xs:boolean})","trigger":"trgr:trigger-set-recursive","description":"($trigger-name,$recursive)"},{"content":"trgr:trigger-set-task-priority(${1:\\$trigger-name as xs:string}, ${2:\\$task-priority as xs:string})","trigger":"trgr:trigger-set-task-priority","description":"($trigger-name,$task-priority)"},{"content":"trgr:triggers-change-modules-database(${1:\\$old-db as xs:unsignedLong}, ${2:\\$new-db as xs:unsignedLong})","trigger":"trgr:triggers-change-modules-database","description":"($old-db,$new-db)"},{"content":"view:add-column(${1:\\$schema-name as xs:string}, ${2:\\$view-name as xs:string}, ${3:\\$column as element(view:column)})","trigger":"view:add-column","description":"($schema-name,$view-name,$column)"},{"content":"view:add-field(${1:\\$schema-name as xs:string}, ${2:\\$view-name as xs:string}, ${3:\\$field as element(view:field)})","trigger":"view:add-field","description":"($schema-name,$view-name,$field)"},{"content":"view:add-permissions(${1:\\$schema-name as xs:string}, ${2:\\$view-name as xs:string}, ${3:\\$permissions as item()*})","trigger":"view:add-permissions","description":"($schema-name,$view-name,$permissions)"},{"content":"view:collection()","trigger":"view:collection"},{"content":"view:collection-view-scope(${1:\\$collection as xs:string) as element(*}, view:view-scope})","trigger":"view:collection-view-scope","description":"($collection,view:view-scope)"},{"content":"view:column(${1:\\$name as xs:string}, ${2:\\$range-index as cts:reference})","trigger":"view:column","description":"($name,$range-index)"},{"content":"view:columns(${1:\\$schema-name as xs:string}, ${2:\\$view-name as xs:string})","trigger":"view:columns","description":"($schema-name,$view-name)"},{"content":"view:create(${1:\\$schema-name as xs:string}, ${2:\\$name as xs:string}, ${3:\\$scope as element(*}, view:view-scope)}, ${4:\\$columns as element(view:column)*}, ${5:\\$fields as element(view:field)*}, ${6:\\$permissions as item()*})","trigger":"view:create","description":"($schema-name,$name,$scope,view:view-scope),$columns,$fields,$permissions)"},{"content":"view:element-view-scope(${1:\\$localname as xs:QName) as element(*}, view:view-scope})","trigger":"view:element-view-scope","description":"($localname,view:view-scope)"},{"content":"view:field(${1:\\$name as xs:string})","trigger":"view:field","description":"($name)"},{"content":"view:fields(${1:\\$schema-name as xs:string}, ${2:\\$view-name as xs:string})","trigger":"view:fields","description":"($schema-name,$view-name)"},{"content":"view:get(${1:\\$schema-name as xs:string}, ${2:\\$view-name as xs:string})","trigger":"view:get","description":"($schema-name,$view-name)"},{"content":"view:get-bindings(${1:\\$schema-name as xs:string}, ${2:\\$view-name as xs:string})","trigger":"view:get-bindings","description":"($schema-name,$view-name)"},{"content":"view:get-by-id(${1:\\$view-id as xs:unsignedLong})","trigger":"view:get-by-id","description":"($view-id)"},{"content":"view:get-column(${1:\\$schema-name as xs:string}, ${2:\\$view-name as xs:string}, ${3:\\$column-name as xs:string})","trigger":"view:get-column","description":"($schema-name,$view-name,$column-name)"},{"content":"view:get-field(${1:\\$schema-name as xs:string}, ${2:\\$view-name as xs:string}, ${3:\\$field-name as xs:string})","trigger":"view:get-field","description":"($schema-name,$view-name,$field-name)"},{"content":"view:get-permissions(${1:\\$schema-name as xs:string}, ${2:\\$view-name as xs:string})","trigger":"view:get-permissions","description":"($schema-name,$view-name)"},{"content":"view:get-view-scope(${1:\\$schema-name as xs:string}, ${2:\\$view-name as xs:string) as element(*}, view:view-scope})","trigger":"view:get-view-scope","description":"($schema-name,$view-name,view:view-scope)"},{"content":"view:remove(${1:\\$schema-name as xs:string}, ${2:\\$view-name as xs:string})","trigger":"view:remove","description":"($schema-name,$view-name)"},{"content":"view:remove-by-id(${1:\\$view-id as xs:unsignedLong})","trigger":"view:remove-by-id","description":"($view-id)"},{"content":"view:remove-column(${1:\\$schema-name as xs:string}, ${2:\\$view-name as xs:string}, ${3:\\$column-name as xs:string})","trigger":"view:remove-column","description":"($schema-name,$view-name,$column-name)"},{"content":"view:remove-field(${1:\\$schema-name as xs:string}, ${2:\\$view-name as xs:string}, ${3:\\$field-name as xs:string})","trigger":"view:remove-field","description":"($schema-name,$view-name,$field-name)"},{"content":"view:remove-permissions(${1:\\$schema-name as xs:string}, ${2:\\$view-name as xs:string}, ${3:\\$permissions as item()*})","trigger":"view:remove-permissions","description":"($schema-name,$view-name,$permissions)"},{"content":"view:schema-add-permissions(${1:\\$schema-name as xs:string}, ${2:\\$permissions as item()*})","trigger":"view:schema-add-permissions","description":"($schema-name,$permissions)"},{"content":"view:schema-create(${1:\\$schema-name as xs:string}, ${2:\\$permissions as item()*})","trigger":"view:schema-create","description":"($schema-name,$permissions)"},{"content":"view:schema-get(${1:\\$schema-name as xs:string})","trigger":"view:schema-get","description":"($schema-name)"},{"content":"view:schema-get-permissions(${1:\\$schema-name as xs:string})","trigger":"view:schema-get-permissions","description":"($schema-name)"},{"content":"view:schema-remove(${1:\\$schema-name as xs:string})","trigger":"view:schema-remove","description":"($schema-name)"},{"content":"view:schema-remove-permissions(${1:\\$schema-name as xs:string}, ${2:\\$permissions as item()*})","trigger":"view:schema-remove-permissions","description":"($schema-name,$permissions)"},{"content":"view:schema-set-permissions(${1:\\$schema-name as xs:string}, ${2:\\$permissions as item()*})","trigger":"view:schema-set-permissions","description":"($schema-name,$permissions)"},{"content":"view:schemas()","trigger":"view:schemas"},{"content":"view:set-columns(${1:\\$schema-name as xs:string}, ${2:\\$view-name as xs:string}, ${3:\\$columns as element(view:column)*})","trigger":"view:set-columns","description":"($schema-name,$view-name,$columns)"},{"content":"view:set-fields(${1:\\$schema-name as xs:string}, ${2:\\$view-name as xs:string}, ${3:\\$fields as element(view:field)*})","trigger":"view:set-fields","description":"($schema-name,$view-name,$fields)"},{"content":"view:set-name(${1:\\$schema-name as xs:string}, ${2:\\$view-name as xs:string}, ${3:\\$new-name as xs:string})","trigger":"view:set-name","description":"($schema-name,$view-name,$new-name)"},{"content":"view:set-permissions(${1:\\$schema-name as xs:string}, ${2:\\$view-name as xs:string}, ${3:\\$permissions as item()*})","trigger":"view:set-permissions","description":"($schema-name,$view-name,$permissions)"},{"content":"view:set-view-scope(${1:\\$schema-name as xs:string}, ${2:\\$view-name as xs:string}, ${3:\\$scope as element(*}, view:view-scope)})","trigger":"view:set-view-scope","description":"($schema-name,$view-name,$scope,view:view-scope))"},{"content":"view:views(${1:\\$schema-name as xs:string})","trigger":"view:views","description":"($schema-name)"},{"content":"xdmp:QName-from-key(${1:\\$key as xs:string})","trigger":"xdmp:QName-from-key","description":"($key)"},{"content":"xdmp:access(${1:\\$uri as xs:string}, ${2:\\$action as xs:string})","trigger":"xdmp:access","description":"($uri,$action)"},{"content":"xdmp:add-response-header(${1:\\$name as xs:string}, ${2:\\$value as xs:string})","trigger":"xdmp:add-response-header","description":"($name,$value)"},{"content":"xdmp:add64(${1:\\$x as xs:unsignedLong}, ${2:\\$y as xs:unsignedLong})","trigger":"xdmp:add64","description":"($x,$y)"},{"content":"xdmp:amp(${1:\\$namespace as xs:string}, ${2:\\$localname as xs:string}, ${3:\\$module-uri as xs:string}, ${4:\\$database as xs:unsignedLong})","trigger":"xdmp:amp","description":"($namespace,$localname,$module-uri,$database)"},{"content":"xdmp:amp-roles(${1:\\$namespace-uri as xs:string}, ${2:\\$localname as xs:string}, ${3:\\$document-uri as xs:string}, ${4:\\$database-id as xs:unsignedLong})","trigger":"xdmp:amp-roles","description":"($namespace-uri,$localname,$document-uri,$database-id)"},{"content":"xdmp:and64(${1:\\$x as xs:unsignedLong}, ${2:\\$y as xs:unsignedLong})","trigger":"xdmp:and64","description":"($x,$y)"},{"content":"xdmp:annotation(${1:\\$function as function(*)}, ${2:\\$name as xs:QName})","trigger":"xdmp:annotation","description":"($function,$name)"},{"content":"xdmp:apply(${1:\\$function as xdmp:function})","trigger":"xdmp:apply","description":"($function)"},{"content":"xdmp:apply(${1:\\$function as xdmp:function}, ${2:\\$params-1-to-N as item()*})","trigger":"xdmp:apply","description":"($function,$params-1-to-N)"},{"content":"xdmp:architecture()","trigger":"xdmp:architecture"},{"content":"xdmp:atomizable(${1:\\$item as item()})","trigger":"xdmp:atomizable","description":"($item)"},{"content":"xdmp:atomizable()","trigger":"xdmp:atomizable"},{"content":"xdmp:base64-decode(${1:\\$encoded as xs:string})","trigger":"xdmp:base64-decode","description":"($encoded)"},{"content":"xdmp:base64-encode(${1:\\$plaintext as xs:string})","trigger":"xdmp:base64-encode","description":"($plaintext)"},{"content":"xdmp:binary-decode(${1:\\$encoded as node()}, ${2:\\$encoding-name as xs:string})","trigger":"xdmp:binary-decode","description":"($encoded,$encoding-name)"},{"content":"xdmp:binary-is-external(${1:\\$source as binary()})","trigger":"xdmp:binary-is-external","description":"($source)"},{"content":"xdmp:binary-is-large(${1:\\$source as binary()})","trigger":"xdmp:binary-is-large","description":"($source)"},{"content":"xdmp:binary-is-small(${1:\\$source as binary()})","trigger":"xdmp:binary-is-small","description":"($source)"},{"content":"xdmp:binary-size(${1:\\$source as binary()?})","trigger":"xdmp:binary-size","description":"($source)"},{"content":"xdmp:binary-size()","trigger":"xdmp:binary-size"},{"content":"xdmp:cache-status(${1:\\$host-id as xs:unsignedLong*})","trigger":"xdmp:cache-status","description":"($host-id)"},{"content":"xdmp:cache-status()","trigger":"xdmp:cache-status"},{"content":"xdmp:can-grant-roles(${1:\\$roles as xs:string*})","trigger":"xdmp:can-grant-roles","description":"($roles)"},{"content":"xdmp:castable-as(${1:\\$namespace-uri as xs:string}, ${2:\\$local-name as xs:string}, ${3:\\$item as item()?})","trigger":"xdmp:castable-as","description":"($namespace-uri,$local-name,$item)"},{"content":"xdmp:cluster(${1:\\$name as xs:string})","trigger":"xdmp:cluster","description":"($name)"},{"content":"xdmp:cluster()","trigger":"xdmp:cluster"},{"content":"xdmp:cluster-name(${1:\\$id as xs:unsignedLong})","trigger":"xdmp:cluster-name","description":"($id)"},{"content":"xdmp:cluster-name()","trigger":"xdmp:cluster-name"},{"content":"xdmp:collation-canonical-uri(${1:\\$collation-uri as xs:string})","trigger":"xdmp:collation-canonical-uri","description":"($collation-uri)"},{"content":"xdmp:collection-delete(${1:\\$uri as xs:string})","trigger":"xdmp:collection-delete","description":"($uri)"},{"content":"xdmp:collection-locks(${1:\\$uri as xs:string*})","trigger":"xdmp:collection-locks","description":"($uri)"},{"content":"xdmp:collection-locks()","trigger":"xdmp:collection-locks"},{"content":"xdmp:collection-properties(${1:\\$uri as xs:string*})","trigger":"xdmp:collection-properties","description":"($uri)"},{"content":"xdmp:collection-properties()","trigger":"xdmp:collection-properties"},{"content":"xdmp:commit()","trigger":"xdmp:commit"},{"content":"xdmp:configuration-timestamp(${1:\\$name as xs:string})","trigger":"xdmp:configuration-timestamp","description":"($name)"},{"content":"xdmp:configuration-timestamp()","trigger":"xdmp:configuration-timestamp"},{"content":"xdmp:crypt(${1:\\$password as xs:string}, ${2:\\$salt as xs:string})","trigger":"xdmp:crypt","description":"($password,$salt)"},{"content":"xdmp:crypt2(${1:\\$password as xs:string})","trigger":"xdmp:crypt2","description":"($password)"},{"content":"xdmp:current-last()","trigger":"xdmp:current-last"},{"content":"xdmp:current-position()","trigger":"xdmp:current-position"},{"content":"xdmp:database(${1:\\$name as xs:string})","trigger":"xdmp:database","description":"($name)"},{"content":"xdmp:database()","trigger":"xdmp:database"},{"content":"xdmp:database-backup(${1:\\$forestIDs as xs:unsignedLong*}, ${2:\\$pathname as xs:string})","trigger":"xdmp:database-backup","description":"($forestIDs,$pathname)"},{"content":"xdmp:database-backup(${1:\\$forestIDs as xs:unsignedLong*}, ${2:\\$pathname as xs:string}, ${3:\\$journal-archiving as xs:boolean?})","trigger":"xdmp:database-backup","description":"($forestIDs,$pathname,$journal-archiving)"},{"content":"xdmp:database-backup(${1:\\$forestIDs as xs:unsignedLong*}, ${2:\\$pathname as xs:string}, ${3:\\$journal-archiving as xs:boolean?}, ${4:\\$journal-archive-path as xs:string?})","trigger":"xdmp:database-backup","description":"($forestIDs,$pathname,$journal-archiving,$journal-archive-path)"},{"content":"xdmp:database-backup(${1:\\$forestIDs as xs:unsignedLong*}, ${2:\\$pathname as xs:string}, ${3:\\$journal-archiving as xs:boolean?}, ${4:\\$journal-archive-path as xs:string?}, ${5:\\$lag-limit as xs:unsignedLong?})","trigger":"xdmp:database-backup","description":"($forestIDs,$pathname,$journal-archiving,$journal-archive-path,$lag-limit)"},{"content":"xdmp:database-backup-cancel(${1:\\$jobid as xs:unsignedLong})","trigger":"xdmp:database-backup-cancel","description":"($jobid)"},{"content":"xdmp:database-backup-purge(${1:\\$dir as xs:string}, ${2:\\$keep-num-backups as xs:unsignedInt})","trigger":"xdmp:database-backup-purge","description":"($dir,$keep-num-backups)"},{"content":"xdmp:database-backup-purge(${1:\\$dir as xs:string}, ${2:\\$keep-num-backups as xs:unsignedInt}, ${3:\\$incremental-dir as xs:string})","trigger":"xdmp:database-backup-purge","description":"($dir,$keep-num-backups,$incremental-dir)"},{"content":"xdmp:database-backup-status(${1:\\$jobid as xs:unsignedLong*})","trigger":"xdmp:database-backup-status","description":"($jobid)"},{"content":"xdmp:database-backup-status(${1:\\$jobid as xs:unsignedLong*}, ${2:\\$hostid as xs:unsignedLong*})","trigger":"xdmp:database-backup-status","description":"($jobid,$hostid)"},{"content":"xdmp:database-backup-validate(${1:\\$forestIDs as xs:unsignedLong*}, ${2:\\$pathname as xs:string})","trigger":"xdmp:database-backup-validate","description":"($forestIDs,$pathname)"},{"content":"xdmp:database-backup-validate(${1:\\$forestIDs as xs:unsignedLong*}, ${2:\\$pathname as xs:string}, ${3:\\$include-replicas as xs:boolean?})","trigger":"xdmp:database-backup-validate","description":"($forestIDs,$pathname,$include-replicas)"},{"content":"xdmp:database-backup-validate(${1:\\$forestIDs as xs:unsignedLong*}, ${2:\\$pathname as xs:string}, ${3:\\$include-replicas as xs:boolean?}, ${4:\\$journal-archiving as xs:boolean?})","trigger":"xdmp:database-backup-validate","description":"($forestIDs,$pathname,$include-replicas,$journal-archiving)"},{"content":"xdmp:database-backup-validate(${1:\\$forestIDs as xs:unsignedLong*}, ${2:\\$pathname as xs:string}, ${3:\\$include-replicas as xs:boolean?}, ${4:\\$journal-archiving as xs:boolean?}, ${5:\\$journal-archive-path as xs:string?})","trigger":"xdmp:database-backup-validate","description":"($forestIDs,$pathname,$include-replicas,$journal-archiving,$journal-archive-path)"},{"content":"xdmp:database-backup-validate(${1:\\$forestIDs as xs:unsignedLong*}, ${2:\\$pathname as xs:string}, ${3:\\$include-replicas as xs:boolean?}, ${4:\\$journal-archiving as xs:boolean?}, ${5:\\$journal-archive-path as xs:string?}, ${6:\\$lag-limit as xs:unsignedLong?})","trigger":"xdmp:database-backup-validate","description":"($forestIDs,$pathname,$include-replicas,$journal-archiving,$journal-archive-path,$lag-limit)"},{"content":"xdmp:database-forests(${1:\\$database-id as xs:unsignedLong})","trigger":"xdmp:database-forests","description":"($database-id)"},{"content":"xdmp:database-forests(${1:\\$database-id as xs:unsignedLong}, ${2:\\$include-replicas as xs:boolean})","trigger":"xdmp:database-forests","description":"($database-id,$include-replicas)"},{"content":"xdmp:database-global-nonblocking-timestamp(${1:\\$database-id as xs:unsignedLong})","trigger":"xdmp:database-global-nonblocking-timestamp","description":"($database-id)"},{"content":"xdmp:database-incremental-backup(${1:\\$forestIDs as xs:unsignedLong*}, ${2:\\$pathname as xs:string})","trigger":"xdmp:database-incremental-backup","description":"($forestIDs,$pathname)"},{"content":"xdmp:database-incremental-backup(${1:\\$forestIDs as xs:unsignedLong*}, ${2:\\$pathname as xs:string}, ${3:\\$incremental-dir as xs:string?})","trigger":"xdmp:database-incremental-backup","description":"($forestIDs,$pathname,$incremental-dir)"},{"content":"xdmp:database-incremental-backup(${1:\\$forestIDs as xs:unsignedLong*}, ${2:\\$pathname as xs:string}, ${3:\\$incremental-dir as xs:string?}, ${4:\\$journal-archiving as xs:boolean?})","trigger":"xdmp:database-incremental-backup","description":"($forestIDs,$pathname,$incremental-dir,$journal-archiving)"},{"content":"xdmp:database-incremental-backup(${1:\\$forestIDs as xs:unsignedLong*}, ${2:\\$pathname as xs:string}, ${3:\\$incremental-dir as xs:string?}, ${4:\\$journal-archiving as xs:boolean?}, ${5:\\$journal-archive-path as xs:string?})","trigger":"xdmp:database-incremental-backup","description":"($forestIDs,$pathname,$incremental-dir,$journal-archiving,$journal-archive-path)"},{"content":"xdmp:database-incremental-backup(${1:\\$forestIDs as xs:unsignedLong*}, ${2:\\$pathname as xs:string}, ${3:\\$incremental-dir as xs:string?}, ${4:\\$journal-archiving as xs:boolean?}, ${5:\\$journal-archive-path as xs:string?}, ${6:\\$lag-limit as xs:unsignedLong?})","trigger":"xdmp:database-incremental-backup","description":"($forestIDs,$pathname,$incremental-dir,$journal-archiving,$journal-archive-path,$lag-limit)"},{"content":"xdmp:database-incremental-backup-validate(${1:\\$forestIDs as xs:unsignedLong*}, ${2:\\$pathname as xs:string})","trigger":"xdmp:database-incremental-backup-validate","description":"($forestIDs,$pathname)"},{"content":"xdmp:database-incremental-backup-validate(${1:\\$forestIDs as xs:unsignedLong*}, ${2:\\$pathname as xs:string}, ${3:\\$include-replicas as xs:boolean?})","trigger":"xdmp:database-incremental-backup-validate","description":"($forestIDs,$pathname,$include-replicas)"},{"content":"xdmp:database-incremental-backup-validate(${1:\\$forestIDs as xs:unsignedLong*}, ${2:\\$pathname as xs:string}, ${3:\\$include-replicas as xs:boolean?}, ${4:\\$incremental-dir as xs:string?})","trigger":"xdmp:database-incremental-backup-validate","description":"($forestIDs,$pathname,$include-replicas,$incremental-dir)"},{"content":"xdmp:database-incremental-backup-validate(${1:\\$forestIDs as xs:unsignedLong*}, ${2:\\$pathname as xs:string}, ${3:\\$include-replicas as xs:boolean?}, ${4:\\$incremental-dir as xs:string?}, ${5:\\$journal-archiving as xs:boolean?})","trigger":"xdmp:database-incremental-backup-validate","description":"($forestIDs,$pathname,$include-replicas,$incremental-dir,$journal-archiving)"},{"content":"xdmp:database-incremental-backup-validate(${1:\\$forestIDs as xs:unsignedLong*}, ${2:\\$pathname as xs:string}, ${3:\\$include-replicas as xs:boolean?}, ${4:\\$incremental-dir as xs:string?}, ${5:\\$journal-archiving as xs:boolean?}, ${6:\\$journal-archive-path as xs:string?})","trigger":"xdmp:database-incremental-backup-validate","description":"($forestIDs,$pathname,$include-replicas,$incremental-dir,$journal-archiving,$journal-archive-path)"},{"content":"xdmp:database-incremental-backup-validate(${1:\\$forestIDs as xs:unsignedLong*}, ${2:\\$pathname as xs:string}, ${3:\\$include-replicas as xs:boolean?}, ${4:\\$incremental-dir as xs:string?}, ${5:\\$journal-archiving as xs:boolean?}, ${6:\\$journal-archive-path as xs:string?}, ${7:\\$lag-limit as xs:unsignedLong?})","trigger":"xdmp:database-incremental-backup-validate","description":"($forestIDs,$pathname,$include-replicas,$incremental-dir,$journal-archiving,$journal-archive-path,$lag-limit)"},{"content":"xdmp:database-is-replica(${1:\\$database-id as xs:unsignedLong})","trigger":"xdmp:database-is-replica","description":"($database-id)"},{"content":"xdmp:database-journal-archive-purge(${1:\\$dir as xs:string})","trigger":"xdmp:database-journal-archive-purge","description":"($dir)"},{"content":"xdmp:database-journal-archive-purge(${1:\\$dir as xs:string}, ${2:\\$incremental-dir as xs:string})","trigger":"xdmp:database-journal-archive-purge","description":"($dir,$incremental-dir)"},{"content":"xdmp:database-journal-archive-purge(${1:\\$dir as xs:string}, ${2:\\$incremental-dir as xs:string}, ${3:\\$journal-archive-path as xs:string})","trigger":"xdmp:database-journal-archive-purge","description":"($dir,$incremental-dir,$journal-archive-path)"},{"content":"xdmp:database-name(${1:\\$database-id as xs:unsignedLong})","trigger":"xdmp:database-name","description":"($database-id)"},{"content":"xdmp:database-nonblocking-timestamp(${1:\\$database-id as xs:unsignedLong})","trigger":"xdmp:database-nonblocking-timestamp","description":"($database-id)"},{"content":"xdmp:database-partition-forests(${1:\\$value as xs:anyAtomicType})","trigger":"xdmp:database-partition-forests","description":"($value)"},{"content":"xdmp:database-path-namespaces(${1:\\$dbid as xs:unsignedLong})","trigger":"xdmp:database-path-namespaces","description":"($dbid)"},{"content":"xdmp:database-path-namespaces()","trigger":"xdmp:database-path-namespaces"},{"content":"xdmp:database-restore(${1:\\$forestIDs as xs:unsignedLong*}, ${2:\\$pathname as xs:string})","trigger":"xdmp:database-restore","description":"($forestIDs,$pathname)"},{"content":"xdmp:database-restore(${1:\\$forestIDs as xs:unsignedLong*}, ${2:\\$pathname as xs:string}, ${3:\\$restoreToTime as xs:dateTime?})","trigger":"xdmp:database-restore","description":"($forestIDs,$pathname,$restoreToTime)"},{"content":"xdmp:database-restore(${1:\\$forestIDs as xs:unsignedLong*}, ${2:\\$pathname as xs:string}, ${3:\\$restoreToTime as xs:dateTime?}, ${4:\\$journal-archiving as xs:boolean?})","trigger":"xdmp:database-restore","description":"($forestIDs,$pathname,$restoreToTime,$journal-archiving)"},{"content":"xdmp:database-restore(${1:\\$forestIDs as xs:unsignedLong*}, ${2:\\$pathname as xs:string}, ${3:\\$restoreToTime as xs:dateTime?}, ${4:\\$journal-archiving as xs:boolean?}, ${5:\\$journal-archive-path as xs:string?})","trigger":"xdmp:database-restore","description":"($forestIDs,$pathname,$restoreToTime,$journal-archiving,$journal-archive-path)"},{"content":"xdmp:database-restore(${1:\\$forestIDs as xs:unsignedLong*}, ${2:\\$pathname as xs:string}, ${3:\\$restoreToTime as xs:dateTime?}, ${4:\\$journal-archiving as xs:boolean?}, ${5:\\$journal-archive-path as xs:string?}, ${6:\\$incremental-backup as xs:boolean?})","trigger":"xdmp:database-restore","description":"($forestIDs,$pathname,$restoreToTime,$journal-archiving,$journal-archive-path,$incremental-backup)"},{"content":"xdmp:database-restore(${1:\\$forestIDs as xs:unsignedLong*}, ${2:\\$pathname as xs:string}, ${3:\\$restoreToTime as xs:dateTime?}, ${4:\\$journal-archiving as xs:boolean?}, ${5:\\$journal-archive-path as xs:string?}, ${6:\\$incremental-backup as xs:boolean?}, ${7:\\$incremental-backup-path as xs:string?})","trigger":"xdmp:database-restore","description":"($forestIDs,$pathname,$restoreToTime,$journal-archiving,$journal-archive-path,$incremental-backup,$incremental-backup-path)"},{"content":"xdmp:database-restore-cancel(${1:\\$jobid as xs:unsignedLong})","trigger":"xdmp:database-restore-cancel","description":"($jobid)"},{"content":"xdmp:database-restore-status(${1:\\$jobid as xs:unsignedLong})","trigger":"xdmp:database-restore-status","description":"($jobid)"},{"content":"xdmp:database-restore-validate(${1:\\$forestIDs as xs:unsignedLong*}, ${2:\\$pathname as xs:string})","trigger":"xdmp:database-restore-validate","description":"($forestIDs,$pathname)"},{"content":"xdmp:database-restore-validate(${1:\\$forestIDs as xs:unsignedLong*}, ${2:\\$pathname as xs:string}, ${3:\\$restoreToTime as xs:dateTime?})","trigger":"xdmp:database-restore-validate","description":"($forestIDs,$pathname,$restoreToTime)"},{"content":"xdmp:database-restore-validate(${1:\\$forestIDs as xs:unsignedLong*}, ${2:\\$pathname as xs:string}, ${3:\\$restoreToTime as xs:dateTime?}, ${4:\\$include-replicas as xs:boolean?})","trigger":"xdmp:database-restore-validate","description":"($forestIDs,$pathname,$restoreToTime,$include-replicas)"},{"content":"xdmp:database-restore-validate(${1:\\$forestIDs as xs:unsignedLong*}, ${2:\\$pathname as xs:string}, ${3:\\$restoreToTime as xs:dateTime?}, ${4:\\$include-replicas as xs:boolean?}, ${5:\\$journal-archiving as xs:boolean?})","trigger":"xdmp:database-restore-validate","description":"($forestIDs,$pathname,$restoreToTime,$include-replicas,$journal-archiving)"},{"content":"xdmp:database-restore-validate(${1:\\$forestIDs as xs:unsignedLong*}, ${2:\\$pathname as xs:string}, ${3:\\$restoreToTime as xs:dateTime?}, ${4:\\$include-replicas as xs:boolean?}, ${5:\\$journal-archiving as xs:boolean?}, ${6:\\$journal-archive-path as xs:string?})","trigger":"xdmp:database-restore-validate","description":"($forestIDs,$pathname,$restoreToTime,$include-replicas,$journal-archiving,$journal-archive-path)"},{"content":"xdmp:database-restore-validate(${1:\\$forestIDs as xs:unsignedLong*}, ${2:\\$pathname as xs:string}, ${3:\\$restoreToTime as xs:dateTime?}, ${4:\\$include-replicas as xs:boolean?}, ${5:\\$journal-archiving as xs:boolean?}, ${6:\\$journal-archive-path as xs:string?}, ${7:\\$incremental-backup as xs:boolean?})","trigger":"xdmp:database-restore-validate","description":"($forestIDs,$pathname,$restoreToTime,$include-replicas,$journal-archiving,$journal-archive-path,$incremental-backup)"},{"content":"xdmp:database-restore-validate(${1:\\$forestIDs as xs:unsignedLong*}, ${2:\\$pathname as xs:string}, ${3:\\$restoreToTime as xs:dateTime?}, ${4:\\$include-replicas as xs:boolean?}, ${5:\\$journal-archiving as xs:boolean?}, ${6:\\$journal-archive-path as xs:string?}, ${7:\\$incremental-backup as xs:boolean?}, ${8:\\$incremental-backup-path as xs:string?})","trigger":"xdmp:database-restore-validate","description":"($forestIDs,$pathname,$restoreToTime,$include-replicas,$journal-archiving,$journal-archive-path,$incremental-backup,$incremental-backup-path)"},{"content":"xdmp:databases()","trigger":"xdmp:databases"},{"content":"xdmp:dayname-from-date(${1:\\$arg as xs:date?})","trigger":"xdmp:dayname-from-date","description":"($arg)"},{"content":"xdmp:decode-from-NCName(${1:\\$name as xs:string})","trigger":"xdmp:decode-from-NCName","description":"($name)"},{"content":"xdmp:default-collections(${1:\\$uri as xs:string})","trigger":"xdmp:default-collections","description":"($uri)"},{"content":"xdmp:default-collections()","trigger":"xdmp:default-collections"},{"content":"xdmp:default-permissions(${1:\\$format as xs:string})","trigger":"xdmp:default-permissions","description":"($format)"},{"content":"xdmp:default-permissions(${1:\\$format as xs:string}, ${2:\\$uri as xs:string})","trigger":"xdmp:default-permissions","description":"($format,$uri)"},{"content":"xdmp:describe(${1:\\$item as item()*})","trigger":"xdmp:describe","description":"($item)"},{"content":"xdmp:describe(${1:\\$item as item()*}, ${2:\\$max-sequence-length as xs:unsignedInt?})","trigger":"xdmp:describe","description":"($item,$max-sequence-length)"},{"content":"xdmp:describe(${1:\\$item as item()*}, ${2:\\$max-sequence-length as xs:unsignedInt?}, ${3:\\$max-item-length as xs:unsignedInt?})","trigger":"xdmp:describe","description":"($item,$max-sequence-length,$max-item-length)"},{"content":"xdmp:diacritic-less(${1:\\$string as xs:string})","trigger":"xdmp:diacritic-less","description":"($string)"},{"content":"xdmp:directory(${1:\\$uri as xs:string*})","trigger":"xdmp:directory","description":"($uri)"},{"content":"xdmp:directory(${1:\\$uri as xs:string*}, ${2:\\$depth as xs:string?})","trigger":"xdmp:directory","description":"($uri,$depth)"},{"content":"xdmp:directory-create(${1:\\$uri as xs:string})","trigger":"xdmp:directory-create","description":"($uri)"},{"content":"xdmp:directory-create(${1:\\$uri as xs:string}, ${2:\\$permissions as element(sec:permission)*})","trigger":"xdmp:directory-create","description":"($uri,$permissions)"},{"content":"xdmp:directory-create(${1:\\$uri as xs:string}, ${2:\\$permissions as element(sec:permission)*}, ${3:\\$collections as xs:string*})","trigger":"xdmp:directory-create","description":"($uri,$permissions,$collections)"},{"content":"xdmp:directory-create(${1:\\$uri as xs:string}, ${2:\\$permissions as element(sec:permission)*}, ${3:\\$collections as xs:string*}, ${4:\\$quality as xs:int?})","trigger":"xdmp:directory-create","description":"($uri,$permissions,$collections,$quality)"},{"content":"xdmp:directory-create(${1:\\$uri as xs:string}, ${2:\\$permissions as element(sec:permission)*}, ${3:\\$collections as xs:string*}, ${4:\\$quality as xs:int?}, ${5:\\$forest-ids as xs:unsignedLong*})","trigger":"xdmp:directory-create","description":"($uri,$permissions,$collections,$quality,$forest-ids)"},{"content":"xdmp:directory-delete(${1:\\$uri as xs:string})","trigger":"xdmp:directory-delete","description":"($uri)"},{"content":"xdmp:directory-locks(${1:\\$uri as xs:string*})","trigger":"xdmp:directory-locks","description":"($uri)"},{"content":"xdmp:directory-locks(${1:\\$uri as xs:string*}, ${2:\\$depth as xs:string?})","trigger":"xdmp:directory-locks","description":"($uri,$depth)"},{"content":"xdmp:directory-properties(${1:\\$uri as xs:string*})","trigger":"xdmp:directory-properties","description":"($uri)"},{"content":"xdmp:directory-properties(${1:\\$uri as xs:string*}, ${2:\\$depth as xs:string?})","trigger":"xdmp:directory-properties","description":"($uri,$depth)"},{"content":"xdmp:document-add-collections(${1:\\$uri as xs:string}, ${2:\\$collections as xs:string*})","trigger":"xdmp:document-add-collections","description":"($uri,$collections)"},{"content":"xdmp:document-add-permissions(${1:\\$uri as xs:string}, ${2:\\$permissions as element(sec:permission)*})","trigger":"xdmp:document-add-permissions","description":"($uri,$permissions)"},{"content":"xdmp:document-add-properties(${1:\\$uri as xs:string}, ${2:\\$props as element()*})","trigger":"xdmp:document-add-properties","description":"($uri,$props)"},{"content":"xdmp:document-assign(${1:\\$uri as xs:string}, ${2:\\$forest-count as xs:positiveInteger})","trigger":"xdmp:document-assign","description":"($uri,$forest-count)"},{"content":"xdmp:document-assign(${1:\\$uri as xs:string}, ${2:\\$forest-count as xs:positiveInteger}, ${3:\\$assignment-policy as xs:string})","trigger":"xdmp:document-assign","description":"($uri,$forest-count,$assignment-policy)"},{"content":"xdmp:document-delete(${1:\\$uri as xs:string})","trigger":"xdmp:document-delete","description":"($uri)"},{"content":"xdmp:document-filter(${1:\\$doc as node()})","trigger":"xdmp:document-filter","description":"($doc)"},{"content":"xdmp:document-filter(${1:\\$doc as node()}, ${2:\\$options as (element()|map:map)?})","trigger":"xdmp:document-filter","description":"($doc,$options)"},{"content":"xdmp:document-forest(${1:\\$uri as xs:string})","trigger":"xdmp:document-forest","description":"($uri)"},{"content":"xdmp:document-forest(${1:\\$uri as xs:string}, ${2:\\$forest-ids as xs:unsignedLong*})","trigger":"xdmp:document-forest","description":"($uri,$forest-ids)"},{"content":"xdmp:document-get(${1:\\$location as xs:string})","trigger":"xdmp:document-get","description":"($location)"},{"content":"xdmp:document-get(${1:\\$location as xs:string}, ${2:\\$options as (element()|map:map)?})","trigger":"xdmp:document-get","description":"($location,$options)"},{"content":"xdmp:document-get-collections(${1:\\$uri as xs:string})","trigger":"xdmp:document-get-collections","description":"($uri)"},{"content":"xdmp:document-get-permissions(${1:\\$uri as xs:string}, ${2:\\$format as xs:string})","trigger":"xdmp:document-get-permissions","description":"($uri,$format)"},{"content":"xdmp:document-get-properties(${1:\\$uri as xs:string}, ${2:\\$property as xs:QName})","trigger":"xdmp:document-get-properties","description":"($uri,$property)"},{"content":"xdmp:document-get-quality(${1:\\$uri as xs:string})","trigger":"xdmp:document-get-quality","description":"($uri)"},{"content":"xdmp:document-insert(${1:\\$uri as xs:string}, ${2:\\$root as node()})","trigger":"xdmp:document-insert","description":"($uri,$root)"},{"content":"xdmp:document-insert(${1:\\$uri as xs:string}, ${2:\\$root as node()}, ${3:\\$permissions as element(sec:permission)*})","trigger":"xdmp:document-insert","description":"($uri,$root,$permissions)"},{"content":"xdmp:document-insert(${1:\\$uri as xs:string}, ${2:\\$root as node()}, ${3:\\$permissions as element(sec:permission)*}, ${4:\\$collections as xs:string*})","trigger":"xdmp:document-insert","description":"($uri,$root,$permissions,$collections)"},{"content":"xdmp:document-insert(${1:\\$uri as xs:string}, ${2:\\$root as node()}, ${3:\\$permissions as element(sec:permission)*}, ${4:\\$collections as xs:string*}, ${5:\\$quality as xs:int?})","trigger":"xdmp:document-insert","description":"($uri,$root,$permissions,$collections,$quality)"},{"content":"xdmp:document-insert(${1:\\$uri as xs:string}, ${2:\\$root as node()}, ${3:\\$permissions as element(sec:permission)*}, ${4:\\$collections as xs:string*}, ${5:\\$quality as xs:int?}, ${6:\\$forest-ids as xs:unsignedLong*})","trigger":"xdmp:document-insert","description":"($uri,$root,$permissions,$collections,$quality,$forest-ids)"},{"content":"xdmp:document-load(${1:\\$location as xs:string})","trigger":"xdmp:document-load","description":"($location)"},{"content":"xdmp:document-load(${1:\\$location as xs:string}, ${2:\\$options as (element()|map:map)?})","trigger":"xdmp:document-load","description":"($location,$options)"},{"content":"xdmp:document-locks(${1:\\$uri as xs:string*})","trigger":"xdmp:document-locks","description":"($uri)"},{"content":"xdmp:document-locks()","trigger":"xdmp:document-locks"},{"content":"xdmp:document-properties(${1:\\$uri as xs:string*})","trigger":"xdmp:document-properties","description":"($uri)"},{"content":"xdmp:document-properties()","trigger":"xdmp:document-properties"},{"content":"xdmp:document-remove-collections(${1:\\$uri as xs:string}, ${2:\\$collections as xs:string*})","trigger":"xdmp:document-remove-collections","description":"($uri,$collections)"},{"content":"xdmp:document-remove-permissions(${1:\\$uri as xs:string}, ${2:\\$permissions as element(sec:permission)*})","trigger":"xdmp:document-remove-permissions","description":"($uri,$permissions)"},{"content":"xdmp:document-remove-properties(${1:\\$uri as xs:string}, ${2:\\$property-names as xs:QName*})","trigger":"xdmp:document-remove-properties","description":"($uri,$property-names)"},{"content":"xdmp:document-set-collections(${1:\\$uri as xs:string}, ${2:\\$collections as xs:string*})","trigger":"xdmp:document-set-collections","description":"($uri,$collections)"},{"content":"xdmp:document-set-permissions(${1:\\$uri as xs:string}, ${2:\\$permissions as element(sec:permission)*})","trigger":"xdmp:document-set-permissions","description":"($uri,$permissions)"},{"content":"xdmp:document-set-properties(${1:\\$uri as xs:string}, ${2:\\$props as element()*})","trigger":"xdmp:document-set-properties","description":"($uri,$props)"},{"content":"xdmp:document-set-property(${1:\\$uri as xs:string}, ${2:\\$prop as element()})","trigger":"xdmp:document-set-property","description":"($uri,$prop)"},{"content":"xdmp:document-set-quality(${1:\\$uri as xs:string}, ${2:\\$quality as xs:integer})","trigger":"xdmp:document-set-quality","description":"($uri,$quality)"},{"content":"xdmp:document-timestamp(${1:\\$uri as xs:string})","trigger":"xdmp:document-timestamp","description":"($uri)"},{"content":"xdmp:eager(${1:\\$arg as item()*})","trigger":"xdmp:eager","description":"($arg)"},{"content":"xdmp:elapsed-time()","trigger":"xdmp:elapsed-time"},{"content":"xdmp:element-content-type(${1:\\$element as element()})","trigger":"xdmp:element-content-type","description":"($element)"},{"content":"xdmp:email(${1:\\$message as element()})","trigger":"xdmp:email","description":"($message)"},{"content":"xdmp:encode-for-NCName(${1:\\$name as xs:string})","trigger":"xdmp:encode-for-NCName","description":"($name)"},{"content":"xdmp:encoding-language-detect(${1:\\$document as node()})","trigger":"xdmp:encoding-language-detect","description":"($document)"},{"content":"xdmp:estimate(${1:\\$expression as item()*})","trigger":"xdmp:estimate","description":"($expression)"},{"content":"xdmp:estimate(${1:\\$expression as item()*}, ${2:\\$maximum as xs:double?})","trigger":"xdmp:estimate","description":"($expression,$maximum)"},{"content":"xdmp:eval(${1:\\$xquery as xs:string})","trigger":"xdmp:eval","description":"($xquery)"},{"content":"xdmp:eval(${1:\\$xquery as xs:string}, ${2:\\$vars as item()*})","trigger":"xdmp:eval","description":"($xquery,$vars)"},{"content":"xdmp:eval(${1:\\$xquery as xs:string}, ${2:\\$vars as item()*}, ${3:\\$options as (element()|map:map)?})","trigger":"xdmp:eval","description":"($xquery,$vars,$options)"},{"content":"xdmp:eval-in(${1:\\$xquery as xs:string}, ${2:\\$ID as xs:unsignedLong*})","trigger":"xdmp:eval-in","description":"($xquery,$ID)"},{"content":"xdmp:eval-in(${1:\\$xquery as xs:string}, ${2:\\$ID as xs:unsignedLong*}, ${3:\\$vars as item()*})","trigger":"xdmp:eval-in","description":"($xquery,$ID,$vars)"},{"content":"xdmp:eval-in(${1:\\$xquery as xs:string}, ${2:\\$ID as xs:unsignedLong*}, ${3:\\$vars as item()*}, ${4:\\$modules as xs:unsignedLong?})","trigger":"xdmp:eval-in","description":"($xquery,$ID,$vars,$modules)"},{"content":"xdmp:eval-in(${1:\\$xquery as xs:string}, ${2:\\$ID as xs:unsignedLong*}, ${3:\\$vars as item()*}, ${4:\\$modules as xs:unsignedLong?}, ${5:\\$root as xs:string?})","trigger":"xdmp:eval-in","description":"($xquery,$ID,$vars,$modules,$root)"},{"content":"xdmp:excel-convert(${1:\\$doc as node()}, ${2:\\$filename as xs:string})","trigger":"xdmp:excel-convert","description":"($doc,$filename)"},{"content":"xdmp:excel-convert(${1:\\$doc as node()}, ${2:\\$filename as xs:string}, ${3:\\$options as (element()|map:map)?})","trigger":"xdmp:excel-convert","description":"($doc,$filename,$options)"},{"content":"xdmp:exists(${1:\\$expression as item()*})","trigger":"xdmp:exists","description":"($expression)"},{"content":"xdmp:external-binary(${1:\\$path as xs:string})","trigger":"xdmp:external-binary","description":"($path)"},{"content":"xdmp:external-binary(${1:\\$path as xs:string}, ${2:\\$starting-location as xs:double})","trigger":"xdmp:external-binary","description":"($path,$starting-location)"},{"content":"xdmp:external-binary(${1:\\$path as xs:string}, ${2:\\$starting-location as xs:double}, ${3:\\$length as xs:double})","trigger":"xdmp:external-binary","description":"($path,$starting-location,$length)"},{"content":"xdmp:external-binary-path(${1:\\$source as binary()})","trigger":"xdmp:external-binary-path","description":"($source)"},{"content":"xdmp:external-security(${1:\\$external-security as xs:string})","trigger":"xdmp:external-security","description":"($external-security)"},{"content":"xdmp:filesystem-directory(${1:\\$pathname as xs:string})","trigger":"xdmp:filesystem-directory","description":"($pathname)"},{"content":"xdmp:filesystem-directory-create(${1:\\$pathname as xs:string})","trigger":"xdmp:filesystem-directory-create","description":"($pathname)"},{"content":"xdmp:filesystem-directory-create(${1:\\$pathname as xs:string}, ${2:\\$options as xs:string*})","trigger":"xdmp:filesystem-directory-create","description":"($pathname,$options)"},{"content":"xdmp:filesystem-file(${1:\\$pathname as xs:string})","trigger":"xdmp:filesystem-file","description":"($pathname)"},{"content":"xdmp:filesystem-file-exists(${1:\\$pathname as xs:string})","trigger":"xdmp:filesystem-file-exists","description":"($pathname)"},{"content":"xdmp:filesystem-file-exists(${1:\\$pathname as xs:string}, ${2:\\$host as xs:unsignedLong?})","trigger":"xdmp:filesystem-file-exists","description":"($pathname,$host)"},{"content":"xdmp:filesystem-file-length(${1:\\$pathname as xs:string})","trigger":"xdmp:filesystem-file-length","description":"($pathname)"},{"content":"xdmp:filesystem-filepath(${1:\\$pathname as xs:string})","trigger":"xdmp:filesystem-filepath","description":"($pathname)"},{"content":"xdmp:foreign-cluster-status(${1:\\$host-id as xs:unsignedLong}, ${2:\\$foreign-cluster-id as xs:unsignedLong})","trigger":"xdmp:foreign-cluster-status","description":"($host-id,$foreign-cluster-id)"},{"content":"xdmp:foreign-clusters()","trigger":"xdmp:foreign-clusters"},{"content":"xdmp:forest(${1:\\$name as xs:string})","trigger":"xdmp:forest","description":"($name)"},{"content":"xdmp:forest-backup(${1:\\$forestID as xs:unsignedLong}, ${2:\\$pathname as xs:string})","trigger":"xdmp:forest-backup","description":"($forestID,$pathname)"},{"content":"xdmp:forest-backup-status(${1:\\$forestid as xs:unsignedLong*})","trigger":"xdmp:forest-backup-status","description":"($forestid)"},{"content":"xdmp:forest-clear(${1:\\$forestIDs as xs:unsignedLong*})","trigger":"xdmp:forest-clear","description":"($forestIDs)"},{"content":"xdmp:forest-counts(${1:\\$forest-id as xs:unsignedLong*})","trigger":"xdmp:forest-counts","description":"($forest-id)"},{"content":"xdmp:forest-counts(${1:\\$forest-id as xs:unsignedLong*}, ${2:\\$show-elements as xs:string*})","trigger":"xdmp:forest-counts","description":"($forest-id,$show-elements)"},{"content":"xdmp:forest-counts(${1:\\$forest-id as xs:unsignedLong*}, ${2:\\$show-elements as xs:string*}, ${3:\\$options as xs:string*})","trigger":"xdmp:forest-counts","description":"($forest-id,$show-elements,$options)"},{"content":"xdmp:forest-databases(${1:\\$forest as xs:unsignedLong})","trigger":"xdmp:forest-databases","description":"($forest)"},{"content":"xdmp:forest-host(${1:\\$id as xs:unsignedLong})","trigger":"xdmp:forest-host","description":"($id)"},{"content":"xdmp:forest-name(${1:\\$forest-id as xs:unsignedLong})","trigger":"xdmp:forest-name","description":"($forest-id)"},{"content":"xdmp:forest-online(${1:\\$forestID as xs:unsignedLong})","trigger":"xdmp:forest-online","description":"($forestID)"},{"content":"xdmp:forest-online(${1:\\$forestID as xs:unsignedLong}, ${2:\\$timestamp as xs:unsignedLong})","trigger":"xdmp:forest-online","description":"($forestID,$timestamp)"},{"content":"xdmp:forest-online(${1:\\$forestID as xs:unsignedLong}, ${2:\\$timestamp as xs:unsignedLong}, ${3:\\$isReplica as xs:boolean})","trigger":"xdmp:forest-online","description":"($forestID,$timestamp,$isReplica)"},{"content":"xdmp:forest-online(${1:\\$forestID as xs:unsignedLong}, ${2:\\$timestamp as xs:unsignedLong}, ${3:\\$isReplica as xs:boolean}, ${4:\\$syncingOk as xs:boolean})","trigger":"xdmp:forest-online","description":"($forestID,$timestamp,$isReplica,$syncingOk)"},{"content":"xdmp:forest-open-replica(${1:\\$forestIDs as xs:unsignedLong*})","trigger":"xdmp:forest-open-replica","description":"($forestIDs)"},{"content":"xdmp:forest-restart(${1:\\$forestIDs as xs:unsignedLong*})","trigger":"xdmp:forest-restart","description":"($forestIDs)"},{"content":"xdmp:forest-restore(${1:\\$forestID as xs:unsignedLong}, ${2:\\$pathname as xs:string})","trigger":"xdmp:forest-restore","description":"($forestID,$pathname)"},{"content":"xdmp:forest-rollback(${1:\\$forestIDs as xs:unsignedLong*}, ${2:\\$timestamp as xs:unsignedLong})","trigger":"xdmp:forest-rollback","description":"($forestIDs,$timestamp)"},{"content":"xdmp:forest-status(${1:\\$forest-id as xs:unsignedLong*})","trigger":"xdmp:forest-status","description":"($forest-id)"},{"content":"xdmp:forest-updates-allowed(${1:\\$forest-id as xs:unsignedLong})","trigger":"xdmp:forest-updates-allowed","description":"($forest-id)"},{"content":"xdmp:forests()","trigger":"xdmp:forests"},{"content":"xdmp:format-number(${1:\\$value as xs:numeric*})","trigger":"xdmp:format-number","description":"($value)"},{"content":"xdmp:format-number(${1:\\$value as xs:numeric*}, ${2:\\$picture as xs:string?})","trigger":"xdmp:format-number","description":"($value,$picture)"},{"content":"xdmp:format-number(${1:\\$value as xs:numeric*}, ${2:\\$picture as xs:string?}, ${3:\\$language as xs:string?})","trigger":"xdmp:format-number","description":"($value,$picture,$language)"},{"content":"xdmp:format-number(${1:\\$value as xs:numeric*}, ${2:\\$picture as xs:string?}, ${3:\\$language as xs:string?}, ${4:\\$letter-value as xs:string?})","trigger":"xdmp:format-number","description":"($value,$picture,$language,$letter-value)"},{"content":"xdmp:format-number(${1:\\$value as xs:numeric*}, ${2:\\$picture as xs:string?}, ${3:\\$language as xs:string?}, ${4:\\$letter-value as xs:string?}, ${5:\\$ordchar as xs:string?})","trigger":"xdmp:format-number","description":"($value,$picture,$language,$letter-value,$ordchar)"},{"content":"xdmp:format-number(${1:\\$value as xs:numeric*}, ${2:\\$picture as xs:string?}, ${3:\\$language as xs:string?}, ${4:\\$letter-value as xs:string?}, ${5:\\$ordchar as xs:string?}, ${6:\\$zero-padding as xs:string?})","trigger":"xdmp:format-number","description":"($value,$picture,$language,$letter-value,$ordchar,$zero-padding)"},{"content":"xdmp:format-number(${1:\\$value as xs:numeric*}, ${2:\\$picture as xs:string?}, ${3:\\$language as xs:string?}, ${4:\\$letter-value as xs:string?}, ${5:\\$ordchar as xs:string?}, ${6:\\$zero-padding as xs:string?}, ${7:\\$grouping-separator as xs:string?})","trigger":"xdmp:format-number","description":"($value,$picture,$language,$letter-value,$ordchar,$zero-padding,$grouping-separator)"},{"content":"xdmp:format-number(${1:\\$value as xs:numeric*}, ${2:\\$picture as xs:string?}, ${3:\\$language as xs:string?}, ${4:\\$letter-value as xs:string?}, ${5:\\$ordchar as xs:string?}, ${6:\\$zero-padding as xs:string?}, ${7:\\$grouping-separator as xs:string?}, ${8:\\$grouping-size as xs:integer?})","trigger":"xdmp:format-number","description":"($value,$picture,$language,$letter-value,$ordchar,$zero-padding,$grouping-separator,$grouping-size)"},{"content":"xdmp:from-json(${1:\\$arg as node()})","trigger":"xdmp:from-json","description":"($arg)"},{"content":"xdmp:from-json-string(${1:\\$arg as xs:string})","trigger":"xdmp:from-json-string","description":"($arg)"},{"content":"xdmp:function(${1:\\$function as xs:QName})","trigger":"xdmp:function","description":"($function)"},{"content":"xdmp:function(${1:\\$function as xs:QName}, ${2:\\$module-path as xs:string?})","trigger":"xdmp:function","description":"($function,$module-path)"},{"content":"xdmp:function-module(${1:\\$function as xdmp:function})","trigger":"xdmp:function-module","description":"($function)"},{"content":"xdmp:function-name(${1:\\$function as xdmp:function})","trigger":"xdmp:function-name","description":"($function)"},{"content":"xdmp:function-parameter-name(${1:\\$function as function(*)}, ${2:\\$position as xs:integer})","trigger":"xdmp:function-parameter-name","description":"($function,$position)"},{"content":"xdmp:function-parameter-type(${1:\\$function as function(*)}, ${2:\\$position as xs:integer})","trigger":"xdmp:function-parameter-type","description":"($function,$position)"},{"content":"xdmp:function-return-type(${1:\\$function as function(*)})","trigger":"xdmp:function-return-type","description":"($function)"},{"content":"xdmp:function-signature(${1:\\$function as function(*)})","trigger":"xdmp:function-signature","description":"($function)"},{"content":"xdmp:functions()","trigger":"xdmp:functions"},{"content":"xdmp:get(${1:\\$path as xs:string})","trigger":"xdmp:get","description":"($path)"},{"content":"xdmp:get(${1:\\$path as xs:string}, ${2:\\$default-namespace as xs:string?})","trigger":"xdmp:get","description":"($path,$default-namespace)"},{"content":"xdmp:get(${1:\\$path as xs:string}, ${2:\\$default-namespace as xs:string?}, ${3:\\$options as xs:string*})","trigger":"xdmp:get","description":"($path,$default-namespace,$options)"},{"content":"xdmp:get-current-roles()","trigger":"xdmp:get-current-roles"},{"content":"xdmp:get-current-user()","trigger":"xdmp:get-current-user"},{"content":"xdmp:get-current-userid()","trigger":"xdmp:get-current-userid"},{"content":"xdmp:get-invoked-path()","trigger":"xdmp:get-invoked-path"},{"content":"xdmp:get-original-url()","trigger":"xdmp:get-original-url"},{"content":"xdmp:get-orphaned-binaries(${1:\\$id as xs:unsignedLong})","trigger":"xdmp:get-orphaned-binaries","description":"($id)"},{"content":"xdmp:get-request-body(${1:\\$format as xs:string?})","trigger":"xdmp:get-request-body","description":"($format)"},{"content":"xdmp:get-request-body()","trigger":"xdmp:get-request-body"},{"content":"xdmp:get-request-client-address()","trigger":"xdmp:get-request-client-address"},{"content":"xdmp:get-request-client-certificate()","trigger":"xdmp:get-request-client-certificate"},{"content":"xdmp:get-request-error-format()","trigger":"xdmp:get-request-error-format"},{"content":"xdmp:get-request-field(${1:\\$name as xs:string})","trigger":"xdmp:get-request-field","description":"($name)"},{"content":"xdmp:get-request-field(${1:\\$name as xs:string}, ${2:\\$default as xs:string?})","trigger":"xdmp:get-request-field","description":"($name,$default)"},{"content":"xdmp:get-request-field-content-type(${1:\\$field-name as xs:string})","trigger":"xdmp:get-request-field-content-type","description":"($field-name)"},{"content":"xdmp:get-request-field-filename(${1:\\$field-name as xs:string})","trigger":"xdmp:get-request-field-filename","description":"($field-name)"},{"content":"xdmp:get-request-field-names()","trigger":"xdmp:get-request-field-names"},{"content":"xdmp:get-request-header(${1:\\$name as xs:string})","trigger":"xdmp:get-request-header","description":"($name)"},{"content":"xdmp:get-request-header(${1:\\$name as xs:string}, ${2:\\$default as xs:string?})","trigger":"xdmp:get-request-header","description":"($name,$default)"},{"content":"xdmp:get-request-header-names()","trigger":"xdmp:get-request-header-names"},{"content":"xdmp:get-request-method()","trigger":"xdmp:get-request-method"},{"content":"xdmp:get-request-path()","trigger":"xdmp:get-request-path"},{"content":"xdmp:get-request-port()","trigger":"xdmp:get-request-port"},{"content":"xdmp:get-request-protocol()","trigger":"xdmp:get-request-protocol"},{"content":"xdmp:get-request-url()","trigger":"xdmp:get-request-url"},{"content":"xdmp:get-request-user()","trigger":"xdmp:get-request-user"},{"content":"xdmp:get-request-username()","trigger":"xdmp:get-request-username"},{"content":"xdmp:get-response-code()","trigger":"xdmp:get-response-code"},{"content":"xdmp:get-response-encoding()","trigger":"xdmp:get-response-encoding"},{"content":"xdmp:get-server-field(${1:\\$name as xs:string})","trigger":"xdmp:get-server-field","description":"($name)"},{"content":"xdmp:get-server-field(${1:\\$name as xs:string}, ${2:\\$default as item()*})","trigger":"xdmp:get-server-field","description":"($name,$default)"},{"content":"xdmp:get-server-field-names()","trigger":"xdmp:get-server-field-names"},{"content":"xdmp:get-session-field(${1:\\$name as xs:string})","trigger":"xdmp:get-session-field","description":"($name)"},{"content":"xdmp:get-session-field(${1:\\$name as xs:string}, ${2:\\$default as item()*})","trigger":"xdmp:get-session-field","description":"($name,$default)"},{"content":"xdmp:get-session-field-names()","trigger":"xdmp:get-session-field-names"},{"content":"xdmp:get-transaction-mode()","trigger":"xdmp:get-transaction-mode"},{"content":"xdmp:get-url-rewriter-path()","trigger":"xdmp:get-url-rewriter-path"},{"content":"xdmp:group(${1:\\$name as xs:string})","trigger":"xdmp:group","description":"($name)"},{"content":"xdmp:group()","trigger":"xdmp:group"},{"content":"xdmp:group-hosts(${1:\\$name as xs:unsignedLong})","trigger":"xdmp:group-hosts","description":"($name)"},{"content":"xdmp:group-hosts()","trigger":"xdmp:group-hosts"},{"content":"xdmp:group-name(${1:\\$name as xs:unsignedLong})","trigger":"xdmp:group-name","description":"($name)"},{"content":"xdmp:group-name()","trigger":"xdmp:group-name"},{"content":"xdmp:group-servers(${1:\\$name as xs:unsignedLong})","trigger":"xdmp:group-servers","description":"($name)"},{"content":"xdmp:group-servers()","trigger":"xdmp:group-servers"},{"content":"xdmp:groups()","trigger":"xdmp:groups"},{"content":"xdmp:gss-server-negotiate(${1:\\$inputToken as xs:string})","trigger":"xdmp:gss-server-negotiate","description":"($inputToken)"},{"content":"xdmp:gunzip(${1:\\$gzipnode as binary()}, ${2:\\$options as (element()|map:map)?})","trigger":"xdmp:gunzip","description":"($gzipnode,$options)"},{"content":"xdmp:gzip(${1:\\$node as node()})","trigger":"xdmp:gzip","description":"($node)"},{"content":"xdmp:has-privilege(${1:\\$privileges as xs:string*}, ${2:\\$kind as xs:string})","trigger":"xdmp:has-privilege","description":"($privileges,$kind)"},{"content":"xdmp:hash32(${1:\\$string as xs:string})","trigger":"xdmp:hash32","description":"($string)"},{"content":"xdmp:hash64(${1:\\$string as xs:string})","trigger":"xdmp:hash64","description":"($string)"},{"content":"xdmp:hex-to-integer(${1:\\$hex as xs:string})","trigger":"xdmp:hex-to-integer","description":"($hex)"},{"content":"xdmp:hmac-md5(${1:\\$secretkey as item()}, ${2:\\$message as item()})","trigger":"xdmp:hmac-md5","description":"($secretkey,$message)"},{"content":"xdmp:hmac-md5(${1:\\$secretkey as item()}, ${2:\\$message as item()}, ${3:\\$encoding as xs:string})","trigger":"xdmp:hmac-md5","description":"($secretkey,$message,$encoding)"},{"content":"xdmp:hmac-sha1(${1:\\$secretkey as item()}, ${2:\\$message as item()})","trigger":"xdmp:hmac-sha1","description":"($secretkey,$message)"},{"content":"xdmp:hmac-sha1(${1:\\$secretkey as item()}, ${2:\\$message as item()}, ${3:\\$encoding as xs:string})","trigger":"xdmp:hmac-sha1","description":"($secretkey,$message,$encoding)"},{"content":"xdmp:hmac-sha256(${1:\\$secretkey as item()}, ${2:\\$message as item()})","trigger":"xdmp:hmac-sha256","description":"($secretkey,$message)"},{"content":"xdmp:hmac-sha256(${1:\\$secretkey as item()}, ${2:\\$message as item()}, ${3:\\$encoding as xs:string})","trigger":"xdmp:hmac-sha256","description":"($secretkey,$message,$encoding)"},{"content":"xdmp:hmac-sha512(${1:\\$secretkey as item()}, ${2:\\$message as item()})","trigger":"xdmp:hmac-sha512","description":"($secretkey,$message)"},{"content":"xdmp:hmac-sha512(${1:\\$secretkey as item()}, ${2:\\$message as item()}, ${3:\\$encoding as xs:string})","trigger":"xdmp:hmac-sha512","description":"($secretkey,$message,$encoding)"},{"content":"xdmp:host(${1:\\$name as xs:string})","trigger":"xdmp:host","description":"($name)"},{"content":"xdmp:host()","trigger":"xdmp:host"},{"content":"xdmp:host-forests(${1:\\$ID as xs:unsignedLong})","trigger":"xdmp:host-forests","description":"($ID)"},{"content":"xdmp:host-get-ssl-fips-enabled(${1:\\$host-id as xs:unsignedLong*})","trigger":"xdmp:host-get-ssl-fips-enabled","description":"($host-id)"},{"content":"xdmp:host-name(${1:\\$ID as xs:unsignedLong})","trigger":"xdmp:host-name","description":"($ID)"},{"content":"xdmp:host-name()","trigger":"xdmp:host-name"},{"content":"xdmp:host-status(${1:\\$host-id as xs:unsignedLong*})","trigger":"xdmp:host-status","description":"($host-id)"},{"content":"xdmp:hosts()","trigger":"xdmp:hosts"},{"content":"xdmp:http-delete(${1:\\$uri as xs:string})","trigger":"xdmp:http-delete","description":"($uri)"},{"content":"xdmp:http-delete(${1:\\$uri as xs:string}, ${2:\\$options as (element()|map:map)?})","trigger":"xdmp:http-delete","description":"($uri,$options)"},{"content":"xdmp:http-get(${1:\\$uri as xs:string})","trigger":"xdmp:http-get","description":"($uri)"},{"content":"xdmp:http-get(${1:\\$uri as xs:string}, ${2:\\$options as (element()|map:map)?})","trigger":"xdmp:http-get","description":"($uri,$options)"},{"content":"xdmp:http-head(${1:\\$uri as xs:string})","trigger":"xdmp:http-head","description":"($uri)"},{"content":"xdmp:http-head(${1:\\$uri as xs:string}, ${2:\\$options as (element()|map:map)?})","trigger":"xdmp:http-head","description":"($uri,$options)"},{"content":"xdmp:http-options(${1:\\$uri as xs:string})","trigger":"xdmp:http-options","description":"($uri)"},{"content":"xdmp:http-options(${1:\\$uri as xs:string}, ${2:\\$options as (element()|map:map)?})","trigger":"xdmp:http-options","description":"($uri,$options)"},{"content":"xdmp:http-post(${1:\\$uri as xs:string})","trigger":"xdmp:http-post","description":"($uri)"},{"content":"xdmp:http-post(${1:\\$uri as xs:string}, ${2:\\$options as (element()|map:map)?})","trigger":"xdmp:http-post","description":"($uri,$options)"},{"content":"xdmp:http-post(${1:\\$uri as xs:string}, ${2:\\$options as (element()|map:map)?}, ${3:\\$data as node()?})","trigger":"xdmp:http-post","description":"($uri,$options,$data)"},{"content":"xdmp:http-put(${1:\\$uri as xs:string})","trigger":"xdmp:http-put","description":"($uri)"},{"content":"xdmp:http-put(${1:\\$uri as xs:string}, ${2:\\$options as (element()|map:map)?})","trigger":"xdmp:http-put","description":"($uri,$options)"},{"content":"xdmp:http-put(${1:\\$uri as xs:string}, ${2:\\$options as (element()|map:map)?}, ${3:\\$data as node()?})","trigger":"xdmp:http-put","description":"($uri,$options,$data)"},{"content":"xdmp:initcap(${1:\\$string as xs:string?})","trigger":"xdmp:initcap","description":"($string)"},{"content":"xdmp:integer-to-hex(${1:\\$val as xs:integer})","trigger":"xdmp:integer-to-hex","description":"($val)"},{"content":"xdmp:integer-to-octal(${1:\\$val as xs:integer})","trigger":"xdmp:integer-to-octal","description":"($val)"},{"content":"xdmp:invoke(${1:\\$path as xs:string})","trigger":"xdmp:invoke","description":"($path)"},{"content":"xdmp:invoke(${1:\\$path as xs:string}, ${2:\\$vars as item()*})","trigger":"xdmp:invoke","description":"($path,$vars)"},{"content":"xdmp:invoke(${1:\\$path as xs:string}, ${2:\\$vars as item()*}, ${3:\\$options as (element()|map:map)?})","trigger":"xdmp:invoke","description":"($path,$vars,$options)"},{"content":"xdmp:invoke-function(${1:\\$path as function() as item()*})","trigger":"xdmp:invoke-function","description":"($path)"},{"content":"xdmp:invoke-function(${1:\\$path as function() as item()*}, ${2:\\$options as (element()|map:map)?})","trigger":"xdmp:invoke-function","description":"($path,$options)"},{"content":"xdmp:invoke-in(${1:\\$uri as xs:string}, ${2:\\$ID as xs:unsignedLong*})","trigger":"xdmp:invoke-in","description":"($uri,$ID)"},{"content":"xdmp:invoke-in(${1:\\$uri as xs:string}, ${2:\\$ID as xs:unsignedLong*}, ${3:\\$vars as item()*})","trigger":"xdmp:invoke-in","description":"($uri,$ID,$vars)"},{"content":"xdmp:invoke-in(${1:\\$uri as xs:string}, ${2:\\$ID as xs:unsignedLong*}, ${3:\\$vars as item()*}, ${4:\\$modules as xs:unsignedLong?})","trigger":"xdmp:invoke-in","description":"($uri,$ID,$vars,$modules)"},{"content":"xdmp:invoke-in(${1:\\$uri as xs:string}, ${2:\\$ID as xs:unsignedLong*}, ${3:\\$vars as item()*}, ${4:\\$modules as xs:unsignedLong?}, ${5:\\$root as xs:string?})","trigger":"xdmp:invoke-in","description":"($uri,$ID,$vars,$modules,$root)"},{"content":"xdmp:javascript-eval(${1:\\$javascript as xs:string})","trigger":"xdmp:javascript-eval","description":"($javascript)"},{"content":"xdmp:javascript-eval(${1:\\$javascript as xs:string}, ${2:\\$vars as item()*})","trigger":"xdmp:javascript-eval","description":"($javascript,$vars)"},{"content":"xdmp:javascript-eval(${1:\\$javascript as xs:string}, ${2:\\$vars as item()*}, ${3:\\$options as node()?})","trigger":"xdmp:javascript-eval","description":"($javascript,$vars,$options)"},{"content":"xdmp:key-from-QName(${1:\\$name as xs:QName})","trigger":"xdmp:key-from-QName","description":"($name)"},{"content":"xdmp:lazy(${1:\\$arg as item()*})","trigger":"xdmp:lazy","description":"($arg)"},{"content":"xdmp:ldap-lookup(${1:\\$DN as xs:string})","trigger":"xdmp:ldap-lookup","description":"($DN)"},{"content":"xdmp:ldap-lookup(${1:\\$DN as xs:string}, ${2:\\$options as (element()|map:map)?})","trigger":"xdmp:ldap-lookup","description":"($DN,$options)"},{"content":"xdmp:ldap-search(${1:\\$query as xs:string})","trigger":"xdmp:ldap-search","description":"($query)"},{"content":"xdmp:ldap-search(${1:\\$query as xs:string}, ${2:\\$options as (element()|map:map)?})","trigger":"xdmp:ldap-search","description":"($query,$options)"},{"content":"xdmp:load(${1:\\$path as xs:string})","trigger":"xdmp:load","description":"($path)"},{"content":"xdmp:load(${1:\\$path as xs:string}, ${2:\\$uri as xs:string?})","trigger":"xdmp:load","description":"($path,$uri)"},{"content":"xdmp:load(${1:\\$path as xs:string}, ${2:\\$uri as xs:string?}, ${3:\\$permissions as element(sec:permission)*})","trigger":"xdmp:load","description":"($path,$uri,$permissions)"},{"content":"xdmp:load(${1:\\$path as xs:string}, ${2:\\$uri as xs:string?}, ${3:\\$permissions as element(sec:permission)*}, ${4:\\$collections as xs:string*})","trigger":"xdmp:load","description":"($path,$uri,$permissions,$collections)"},{"content":"xdmp:load(${1:\\$path as xs:string}, ${2:\\$uri as xs:string?}, ${3:\\$permissions as element(sec:permission)*}, ${4:\\$collections as xs:string*}, ${5:\\$quality as xs:int?})","trigger":"xdmp:load","description":"($path,$uri,$permissions,$collections,$quality)"},{"content":"xdmp:load(${1:\\$path as xs:string}, ${2:\\$uri as xs:string?}, ${3:\\$permissions as element(sec:permission)*}, ${4:\\$collections as xs:string*}, ${5:\\$quality as xs:int?}, ${6:\\$default-namespace as xs:string?})","trigger":"xdmp:load","description":"($path,$uri,$permissions,$collections,$quality,$default-namespace)"},{"content":"xdmp:load(${1:\\$path as xs:string}, ${2:\\$uri as xs:string?}, ${3:\\$permissions as element(sec:permission)*}, ${4:\\$collections as xs:string*}, ${5:\\$quality as xs:int?}, ${6:\\$default-namespace as xs:string?}, ${7:\\$options as xs:string*})","trigger":"xdmp:load","description":"($path,$uri,$permissions,$collections,$quality,$default-namespace,$options)"},{"content":"xdmp:load(${1:\\$path as xs:string}, ${2:\\$uri as xs:string?}, ${3:\\$permissions as element(sec:permission)*}, ${4:\\$collections as xs:string*}, ${5:\\$quality as xs:int?}, ${6:\\$default-namespace as xs:string?}, ${7:\\$options as xs:string*}, ${8:\\$forest-ids as xs:unsignedLong*})","trigger":"xdmp:load","description":"($path,$uri,$permissions,$collections,$quality,$default-namespace,$options,$forest-ids)"},{"content":"xdmp:lock-acquire(${1:\\$uri as xs:string})","trigger":"xdmp:lock-acquire","description":"($uri)"},{"content":"xdmp:lock-acquire(${1:\\$uri as xs:string}, ${2:\\$scope as xs:string?})","trigger":"xdmp:lock-acquire","description":"($uri,$scope)"},{"content":"xdmp:lock-acquire(${1:\\$uri as xs:string}, ${2:\\$scope as xs:string?}, ${3:\\$depth as xs:string?})","trigger":"xdmp:lock-acquire","description":"($uri,$scope,$depth)"},{"content":"xdmp:lock-acquire(${1:\\$uri as xs:string}, ${2:\\$scope as xs:string?}, ${3:\\$depth as xs:string?}, ${4:\\$owner as item()*})","trigger":"xdmp:lock-acquire","description":"($uri,$scope,$depth,$owner)"},{"content":"xdmp:lock-acquire(${1:\\$uri as xs:string}, ${2:\\$scope as xs:string?}, ${3:\\$depth as xs:string?}, ${4:\\$owner as item()*}, ${5:\\$timeout as xs:unsignedLong?})","trigger":"xdmp:lock-acquire","description":"($uri,$scope,$depth,$owner,$timeout)"},{"content":"xdmp:lock-for-update(${1:\\$uri as xs:string})","trigger":"xdmp:lock-for-update","description":"($uri)"},{"content":"xdmp:lock-release(${1:\\$uri as xs:string})","trigger":"xdmp:lock-release","description":"($uri)"},{"content":"xdmp:log(${1:\\$msg as item()*})","trigger":"xdmp:log","description":"($msg)"},{"content":"xdmp:log(${1:\\$msg as item()*}, ${2:\\$level as xs:string?})","trigger":"xdmp:log","description":"($msg,$level)"},{"content":"xdmp:log-level()","trigger":"xdmp:log-level"},{"content":"xdmp:login(${1:\\$name as xs:string})","trigger":"xdmp:login","description":"($name)"},{"content":"xdmp:login(${1:\\$name as xs:string}, ${2:\\$password as xs:string?})","trigger":"xdmp:login","description":"($name,$password)"},{"content":"xdmp:login(${1:\\$name as xs:string}, ${2:\\$password as xs:string?}, ${3:\\$set-session as xs:boolean?})","trigger":"xdmp:login","description":"($name,$password,$set-session)"},{"content":"xdmp:login(${1:\\$name as xs:string}, ${2:\\$password as xs:string?}, ${3:\\$set-session as xs:boolean?}, ${4:\\$role-names as xs:string*})","trigger":"xdmp:login","description":"($name,$password,$set-session,$role-names)"},{"content":"xdmp:logout()","trigger":"xdmp:logout"},{"content":"xdmp:lshift64(${1:\\$x as xs:unsignedLong}, ${2:\\$y as xs:integer})","trigger":"xdmp:lshift64","description":"($x,$y)"},{"content":"xdmp:md5(${1:\\$data as item()})","trigger":"xdmp:md5","description":"($data)"},{"content":"xdmp:md5(${1:\\$data as item()}, ${2:\\$encoding as xs:string})","trigger":"xdmp:md5","description":"($data,$encoding)"},{"content":"xdmp:merge(${1:\\$options as (element()|map:map)?})","trigger":"xdmp:merge","description":"($options)"},{"content":"xdmp:merge()","trigger":"xdmp:merge"},{"content":"xdmp:merge-cancel(${1:\\$forest-ID as xs:unsignedLong}, ${2:\\$merge-ID as xs:unsignedLong})","trigger":"xdmp:merge-cancel","description":"($forest-ID,$merge-ID)"},{"content":"xdmp:merging()","trigger":"xdmp:merging"},{"content":"xdmp:modules-database()","trigger":"xdmp:modules-database"},{"content":"xdmp:modules-root()","trigger":"xdmp:modules-root"},{"content":"xdmp:month-name-from-date(${1:\\$arg as xs:date?})","trigger":"xdmp:month-name-from-date","description":"($arg)"},{"content":"xdmp:mul64(${1:\\$x as xs:unsignedLong}, ${2:\\$y as xs:unsignedLong})","trigger":"xdmp:mul64","description":"($x,$y)"},{"content":"xdmp:multipart-decode(${1:\\$separator as xs:string}, ${2:\\$data as binary()})","trigger":"xdmp:multipart-decode","description":"($separator,$data)"},{"content":"xdmp:multipart-decode(${1:\\$separator as xs:string}, ${2:\\$data as binary()}, ${3:\\$options as element()})","trigger":"xdmp:multipart-decode","description":"($separator,$data,$options)"},{"content":"xdmp:multipart-encode(${1:\\$separator as xs:string}, ${2:\\$manifest as element()}, ${3:\\$content as node()*})","trigger":"xdmp:multipart-encode","description":"($separator,$manifest,$content)"},{"content":"xdmp:node-database(${1:\\$node as node()})","trigger":"xdmp:node-database","description":"($node)"},{"content":"xdmp:node-delete(${1:\\$old as node()})","trigger":"xdmp:node-delete","description":"($old)"},{"content":"xdmp:node-insert-after(${1:\\$sibling as node()}, ${2:\\$new as node()})","trigger":"xdmp:node-insert-after","description":"($sibling,$new)"},{"content":"xdmp:node-insert-before(${1:\\$sibling as node()}, ${2:\\$new as node()})","trigger":"xdmp:node-insert-before","description":"($sibling,$new)"},{"content":"xdmp:node-insert-child(${1:\\$parent as node()}, ${2:\\$new as node()})","trigger":"xdmp:node-insert-child","description":"($parent,$new)"},{"content":"xdmp:node-kind(${1:\\$node as node()})","trigger":"xdmp:node-kind","description":"($node)"},{"content":"xdmp:node-replace(${1:\\$old as node()}, ${2:\\$new as node()})","trigger":"xdmp:node-replace","description":"($old,$new)"},{"content":"xdmp:node-uri(${1:\\$node as node()})","trigger":"xdmp:node-uri","description":"($node)"},{"content":"xdmp:not64(${1:\\$x as xs:unsignedLong})","trigger":"xdmp:not64","description":"($x)"},{"content":"xdmp:octal-to-integer(${1:\\$octal as xs:string})","trigger":"xdmp:octal-to-integer","description":"($octal)"},{"content":"xdmp:or64(${1:\\$x as xs:unsignedLong}, ${2:\\$y as xs:unsignedLong})","trigger":"xdmp:or64","description":"($x,$y)"},{"content":"xdmp:parse-dateTime(${1:\\$picture as xs:string}, ${2:\\$value as xs:string})","trigger":"xdmp:parse-dateTime","description":"($picture,$value)"},{"content":"xdmp:parse-dateTime(${1:\\$picture as xs:string}, ${2:\\$value as xs:string}, ${3:\\$language as xs:string?})","trigger":"xdmp:parse-dateTime","description":"($picture,$value,$language)"},{"content":"xdmp:parse-dateTime(${1:\\$picture as xs:string}, ${2:\\$value as xs:string}, ${3:\\$language as xs:string?}, ${4:\\$calendar as xs:string?})","trigger":"xdmp:parse-dateTime","description":"($picture,$value,$language,$calendar)"},{"content":"xdmp:parse-dateTime(${1:\\$picture as xs:string}, ${2:\\$value as xs:string}, ${3:\\$language as xs:string?}, ${4:\\$calendar as xs:string?}, ${5:\\$country as xs:string?})","trigger":"xdmp:parse-dateTime","description":"($picture,$value,$language,$calendar,$country)"},{"content":"xdmp:parse-yymmdd(${1:\\$picture as xs:string}, ${2:\\$value as xs:string})","trigger":"xdmp:parse-yymmdd","description":"($picture,$value)"},{"content":"xdmp:parse-yymmdd(${1:\\$picture as xs:string}, ${2:\\$value as xs:string}, ${3:\\$language as xs:string?})","trigger":"xdmp:parse-yymmdd","description":"($picture,$value,$language)"},{"content":"xdmp:parse-yymmdd(${1:\\$picture as xs:string}, ${2:\\$value as xs:string}, ${3:\\$language as xs:string?}, ${4:\\$calendar as xs:string?})","trigger":"xdmp:parse-yymmdd","description":"($picture,$value,$language,$calendar)"},{"content":"xdmp:parse-yymmdd(${1:\\$picture as xs:string}, ${2:\\$value as xs:string}, ${3:\\$language as xs:string?}, ${4:\\$calendar as xs:string?}, ${5:\\$country as xs:string?})","trigger":"xdmp:parse-yymmdd","description":"($picture,$value,$language,$calendar,$country)"},{"content":"xdmp:path(${1:\\$node as node()})","trigger":"xdmp:path","description":"($node)"},{"content":"xdmp:path(${1:\\$node as node()}, ${2:\\$include-document as xs:boolean?})","trigger":"xdmp:path","description":"($node,$include-document)"},{"content":"xdmp:pdf-convert(${1:\\$doc as node()}, ${2:\\$filename as xs:string})","trigger":"xdmp:pdf-convert","description":"($doc,$filename)"},{"content":"xdmp:pdf-convert(${1:\\$doc as node()}, ${2:\\$filename as xs:string}, ${3:\\$options as (element()|map:map)?})","trigger":"xdmp:pdf-convert","description":"($doc,$filename,$options)"},{"content":"xdmp:permission(${1:\\$role as xs:string}, ${2:\\$capability as xs:string}, ${3:\\$format as xs:string})","trigger":"xdmp:permission","description":"($role,$capability,$format)"},{"content":"xdmp:plan(${1:\\$expression as item()*})","trigger":"xdmp:plan","description":"($expression)"},{"content":"xdmp:plan(${1:\\$expression as item()*}, ${2:\\$maximum as xs:double?})","trigger":"xdmp:plan","description":"($expression,$maximum)"},{"content":"xdmp:plannable(${1:\\$expression as item()*})","trigger":"xdmp:plannable","description":"($expression)"},{"content":"xdmp:platform()","trigger":"xdmp:platform"},{"content":"xdmp:position(${1:\\$test as xs:string?}, ${2:\\$target as xs:string?})","trigger":"xdmp:position","description":"($test,$target)"},{"content":"xdmp:position(${1:\\$test as xs:string?}, ${2:\\$target as xs:string?}, ${3:\\$collation as xs:string?})","trigger":"xdmp:position","description":"($test,$target,$collation)"},{"content":"xdmp:powerpoint-convert(${1:\\$doc as node()}, ${2:\\$filename as xs:string})","trigger":"xdmp:powerpoint-convert","description":"($doc,$filename)"},{"content":"xdmp:powerpoint-convert(${1:\\$doc as node()}, ${2:\\$filename as xs:string}, ${3:\\$options as (element()|map:map)?})","trigger":"xdmp:powerpoint-convert","description":"($doc,$filename,$options)"},{"content":"xdmp:pretty-print(${1:\\$xquery as xs:string})","trigger":"xdmp:pretty-print","description":"($xquery)"},{"content":"xdmp:privilege(${1:\\$action as xs:string}, ${2:\\$kind as xs:string})","trigger":"xdmp:privilege","description":"($action,$kind)"},{"content":"xdmp:privilege-roles(${1:\\$action as xs:string}, ${2:\\$kind as xs:string})","trigger":"xdmp:privilege-roles","description":"($action,$kind)"},{"content":"xdmp:product-edition()","trigger":"xdmp:product-edition"},{"content":"xdmp:product-environment()","trigger":"xdmp:product-environment"},{"content":"xdmp:quarter-from-date(${1:\\$arg as xs:date?})","trigger":"xdmp:quarter-from-date","description":"($arg)"},{"content":"xdmp:query-meters()","trigger":"xdmp:query-meters"},{"content":"xdmp:query-trace(${1:\\$enabled as xs:boolean})","trigger":"xdmp:query-trace","description":"($enabled)"},{"content":"xdmp:quote(${1:\\$arg as item()*})","trigger":"xdmp:quote","description":"($arg)"},{"content":"xdmp:quote(${1:\\$arg as item()*}, ${2:\\$options as (element()|map:map)?})","trigger":"xdmp:quote","description":"($arg,$options)"},{"content":"xdmp:random(${1:\\$max as xs:unsignedLong})","trigger":"xdmp:random","description":"($max)"},{"content":"xdmp:random()","trigger":"xdmp:random"},{"content":"xdmp:redirect-response(${1:\\$name as xs:string})","trigger":"xdmp:redirect-response","description":"($name)"},{"content":"xdmp:remove-orphaned-binary(${1:\\$forestID as xs:unsignedLong}, ${2:\\$binaryID as xs:unsignedLong})","trigger":"xdmp:remove-orphaned-binary","description":"($forestID,$binaryID)"},{"content":"xdmp:request()","trigger":"xdmp:request"},{"content":"xdmp:request-cancel(${1:\\$hostID as xs:unsignedLong}, ${2:\\$serverID as xs:unsignedLong}, ${3:\\$requestID as xs:unsignedLong})","trigger":"xdmp:request-cancel","description":"($hostID,$serverID,$requestID)"},{"content":"xdmp:request-status(${1:\\$host-id as xs:unsignedLong}, ${2:\\$server-id as xs:unsignedLong}, ${3:\\$request-id as xs:unsignedLong*})","trigger":"xdmp:request-status","description":"($host-id,$server-id,$request-id)"},{"content":"xdmp:request-timestamp()","trigger":"xdmp:request-timestamp"},{"content":"xdmp:resolve-uri(${1:\\$relative as xs:string?})","trigger":"xdmp:resolve-uri","description":"($relative)"},{"content":"xdmp:resolve-uri(${1:\\$relative as xs:string?}, ${2:\\$base as xs:string})","trigger":"xdmp:resolve-uri","description":"($relative,$base)"},{"content":"xdmp:restart(${1:\\$hostIDs as xs:unsignedLong*}, ${2:\\$reason as xs:string})","trigger":"xdmp:restart","description":"($hostIDs,$reason)"},{"content":"xdmp:rethrow()","trigger":"xdmp:rethrow"},{"content":"xdmp:role(${1:\\$role as xs:string})","trigger":"xdmp:role","description":"($role)"},{"content":"xdmp:role-roles(${1:\\$name as xs:string})","trigger":"xdmp:role-roles","description":"($name)"},{"content":"xdmp:rollback()","trigger":"xdmp:rollback"},{"content":"xdmp:rshift64(${1:\\$x as xs:unsignedLong}, ${2:\\$y as xs:integer})","trigger":"xdmp:rshift64","description":"($x,$y)"},{"content":"xdmp:save(${1:\\$path as xs:string}, ${2:\\$node as node()})","trigger":"xdmp:save","description":"($path,$node)"},{"content":"xdmp:save(${1:\\$path as xs:string}, ${2:\\$node as node()}, ${3:\\$options as (element()|map:map)?})","trigger":"xdmp:save","description":"($path,$node,$options)"},{"content":"xdmp:schema-database(${1:\\$database-id as xs:unsignedLong})","trigger":"xdmp:schema-database","description":"($database-id)"},{"content":"xdmp:schema-database()","trigger":"xdmp:schema-database"},{"content":"xdmp:security-assert(${1:\\$privileges as xs:string*}, ${2:\\$kind as xs:string})","trigger":"xdmp:security-assert","description":"($privileges,$kind)"},{"content":"xdmp:security-database(${1:\\$database-id as xs:unsignedLong})","trigger":"xdmp:security-database","description":"($database-id)"},{"content":"xdmp:security-database()","trigger":"xdmp:security-database"},{"content":"xdmp:server(${1:\\$name as xs:string})","trigger":"xdmp:server","description":"($name)"},{"content":"xdmp:server(${1:\\$name as xs:string}, ${2:\\$group as xs:unsignedLong})","trigger":"xdmp:server","description":"($name,$group)"},{"content":"xdmp:server()","trigger":"xdmp:server"},{"content":"xdmp:server-name(${1:\\$id as xs:unsignedLong})","trigger":"xdmp:server-name","description":"($id)"},{"content":"xdmp:server-status(${1:\\$host-id as xs:unsignedLong}, ${2:\\$server-id as xs:unsignedLong*})","trigger":"xdmp:server-status","description":"($host-id,$server-id)"},{"content":"xdmp:servers()","trigger":"xdmp:servers"},{"content":"xdmp:set(${1:\\$variable as item()*}, ${2:\\$expr as item()*})","trigger":"xdmp:set","description":"($variable,$expr)"},{"content":"xdmp:set-request-time-limit(${1:\\$time-limit as xs:unsignedInt})","trigger":"xdmp:set-request-time-limit","description":"($time-limit)"},{"content":"xdmp:set-request-time-limit(${1:\\$time-limit as xs:unsignedInt}, ${2:\\$hostID as xs:unsignedLong?})","trigger":"xdmp:set-request-time-limit","description":"($time-limit,$hostID)"},{"content":"xdmp:set-request-time-limit(${1:\\$time-limit as xs:unsignedInt}, ${2:\\$hostID as xs:unsignedLong?}, ${3:\\$serverID as xs:unsignedLong?})","trigger":"xdmp:set-request-time-limit","description":"($time-limit,$hostID,$serverID)"},{"content":"xdmp:set-request-time-limit(${1:\\$time-limit as xs:unsignedInt}, ${2:\\$hostID as xs:unsignedLong?}, ${3:\\$serverID as xs:unsignedLong?}, ${4:\\$requestID as xs:unsignedLong?})","trigger":"xdmp:set-request-time-limit","description":"($time-limit,$hostID,$serverID,$requestID)"},{"content":"xdmp:set-response-code(${1:\\$code as xs:integer}, ${2:\\$message as xs:string})","trigger":"xdmp:set-response-code","description":"($code,$message)"},{"content":"xdmp:set-response-content-type(${1:\\$name as xs:string})","trigger":"xdmp:set-response-content-type","description":"($name)"},{"content":"xdmp:set-response-encoding(${1:\\$encoding as xs:string})","trigger":"xdmp:set-response-encoding","description":"($encoding)"},{"content":"xdmp:set-server-field(${1:\\$name as xs:string}, ${2:\\$value as item()*})","trigger":"xdmp:set-server-field","description":"($name,$value)"},{"content":"xdmp:set-server-field-privilege(${1:\\$name as xs:string}, ${2:\\$privilege as xs:string?})","trigger":"xdmp:set-server-field-privilege","description":"($name,$privilege)"},{"content":"xdmp:set-session-field(${1:\\$name as xs:string}, ${2:\\$value as item()*})","trigger":"xdmp:set-session-field","description":"($name,$value)"},{"content":"xdmp:set-transaction-mode(${1:\\$value as xs:string})","trigger":"xdmp:set-transaction-mode","description":"($value)"},{"content":"xdmp:set-transaction-name(${1:\\$name as xs:string})","trigger":"xdmp:set-transaction-name","description":"($name)"},{"content":"xdmp:set-transaction-name(${1:\\$name as xs:string}, ${2:\\$host-id as xs:unsignedLong})","trigger":"xdmp:set-transaction-name","description":"($name,$host-id)"},{"content":"xdmp:set-transaction-name(${1:\\$name as xs:string}, ${2:\\$host-id as xs:unsignedLong}, ${3:\\$txn-id as xs:unsignedLong})","trigger":"xdmp:set-transaction-name","description":"($name,$host-id,$txn-id)"},{"content":"xdmp:set-transaction-time-limit(${1:\\$time-limit as xs:unsignedInt})","trigger":"xdmp:set-transaction-time-limit","description":"($time-limit)"},{"content":"xdmp:set-transaction-time-limit(${1:\\$time-limit as xs:unsignedInt}, ${2:\\$host-id as xs:unsignedLong})","trigger":"xdmp:set-transaction-time-limit","description":"($time-limit,$host-id)"},{"content":"xdmp:set-transaction-time-limit(${1:\\$time-limit as xs:unsignedInt}, ${2:\\$host-id as xs:unsignedLong}, ${3:\\$txn-id as xs:unsignedLong})","trigger":"xdmp:set-transaction-time-limit","description":"($time-limit,$host-id,$txn-id)"},{"content":"xdmp:sha1(${1:\\$data as item()})","trigger":"xdmp:sha1","description":"($data)"},{"content":"xdmp:sha1(${1:\\$data as item()}, ${2:\\$encoding as xs:string})","trigger":"xdmp:sha1","description":"($data,$encoding)"},{"content":"xdmp:sha256(${1:\\$data as item()})","trigger":"xdmp:sha256","description":"($data)"},{"content":"xdmp:sha256(${1:\\$data as item()}, ${2:\\$encoding as xs:string})","trigger":"xdmp:sha256","description":"($data,$encoding)"},{"content":"xdmp:sha384(${1:\\$data as item()})","trigger":"xdmp:sha384","description":"($data)"},{"content":"xdmp:sha384(${1:\\$data as item()}, ${2:\\$encoding as xs:string})","trigger":"xdmp:sha384","description":"($data,$encoding)"},{"content":"xdmp:sha512(${1:\\$data as item()})","trigger":"xdmp:sha512","description":"($data)"},{"content":"xdmp:sha512(${1:\\$data as item()}, ${2:\\$encoding as xs:string})","trigger":"xdmp:sha512","description":"($data,$encoding)"},{"content":"xdmp:shutdown(${1:\\$hostIDs as xs:unsignedLong*}, ${2:\\$reason as xs:string})","trigger":"xdmp:shutdown","description":"($hostIDs,$reason)"},{"content":"xdmp:sleep(${1:\\$msec as xs:unsignedInt})","trigger":"xdmp:sleep","description":"($msec)"},{"content":"xdmp:spawn(${1:\\$path as xs:string})","trigger":"xdmp:spawn","description":"($path)"},{"content":"xdmp:spawn(${1:\\$path as xs:string}, ${2:\\$vars as item()*})","trigger":"xdmp:spawn","description":"($path,$vars)"},{"content":"xdmp:spawn(${1:\\$path as xs:string}, ${2:\\$vars as item()*}, ${3:\\$options as (element()|map:map)?})","trigger":"xdmp:spawn","description":"($path,$vars,$options)"},{"content":"xdmp:spawn-function(${1:\\$function as function() as item()*})","trigger":"xdmp:spawn-function","description":"($function)"},{"content":"xdmp:spawn-function(${1:\\$function as function() as item()*}, ${2:\\$options as (element()|map:map)?})","trigger":"xdmp:spawn-function","description":"($function,$options)"},{"content":"xdmp:spawn-in(${1:\\$path as xs:string}, ${2:\\$ID as xs:unsignedLong})","trigger":"xdmp:spawn-in","description":"($path,$ID)"},{"content":"xdmp:spawn-in(${1:\\$path as xs:string}, ${2:\\$ID as xs:unsignedLong}, ${3:\\$vars as item()*})","trigger":"xdmp:spawn-in","description":"($path,$ID,$vars)"},{"content":"xdmp:spawn-in(${1:\\$path as xs:string}, ${2:\\$ID as xs:unsignedLong}, ${3:\\$vars as item()*}, ${4:\\$modules as xs:unsignedLong?})","trigger":"xdmp:spawn-in","description":"($path,$ID,$vars,$modules)"},{"content":"xdmp:spawn-in(${1:\\$path as xs:string}, ${2:\\$ID as xs:unsignedLong}, ${3:\\$vars as item()*}, ${4:\\$modules as xs:unsignedLong?}, ${5:\\$root as xs:string?})","trigger":"xdmp:spawn-in","description":"($path,$ID,$vars,$modules,$root)"},{"content":"xdmp:sql(${1:\\$sql as xs:string})","trigger":"xdmp:sql","description":"($sql)"},{"content":"xdmp:sql(${1:\\$sql as xs:string}, ${2:\\$options as xs:string*})","trigger":"xdmp:sql","description":"($sql,$options)"},{"content":"xdmp:start-journal-archiving(${1:\\$forestIDs as xs:unsignedLong*}, ${2:\\$journal-archive-path as xs:string})","trigger":"xdmp:start-journal-archiving","description":"($forestIDs,$journal-archive-path)"},{"content":"xdmp:start-journal-archiving(${1:\\$forestIDs as xs:unsignedLong*}, ${2:\\$journal-archive-path as xs:string}, ${3:\\$lag-limit as xs:unsignedLong?})","trigger":"xdmp:start-journal-archiving","description":"($forestIDs,$journal-archive-path,$lag-limit)"},{"content":"xdmp:step64(${1:\\$initial as xs:unsignedLong}, ${2:\\$step as xs:unsignedLong})","trigger":"xdmp:step64","description":"($initial,$step)"},{"content":"xdmp:stop-journal-archiving(${1:\\$forestIDs as xs:unsignedLong*})","trigger":"xdmp:stop-journal-archiving","description":"($forestIDs)"},{"content":"xdmp:strftime(${1:\\$format as xs:string}, ${2:\\$value as xs:dateTime})","trigger":"xdmp:strftime","description":"($format,$value)"},{"content":"xdmp:subbinary(${1:\\$source as binary()}, ${2:\\$starting-location as xs:double})","trigger":"xdmp:subbinary","description":"($source,$starting-location)"},{"content":"xdmp:subbinary(${1:\\$source as binary()}, ${2:\\$starting-location as xs:double}, ${3:\\$length as xs:double})","trigger":"xdmp:subbinary","description":"($source,$starting-location,$length)"},{"content":"xdmp:tidy(${1:\\$doc as xs:string})","trigger":"xdmp:tidy","description":"($doc)"},{"content":"xdmp:tidy(${1:\\$doc as xs:string}, ${2:\\$options as (element()|map:map)?})","trigger":"xdmp:tidy","description":"($doc,$options)"},{"content":"xdmp:timestamp-to-wallclock(${1:\\$timestamp as xs:unsignedLong})","trigger":"xdmp:timestamp-to-wallclock","description":"($timestamp)"},{"content":"xdmp:to-json(${1:\\$item as item()*})","trigger":"xdmp:to-json","description":"($item)"},{"content":"xdmp:to-json-string(${1:\\$item as item()*})","trigger":"xdmp:to-json-string","description":"($item)"},{"content":"xdmp:trace(${1:\\$name as xs:string}, ${2:\\$value as item()*})","trigger":"xdmp:trace","description":"($name,$value)"},{"content":"xdmp:transaction(${1:\\$txn-name as xs:string})","trigger":"xdmp:transaction","description":"($txn-name)"},{"content":"xdmp:transaction(${1:\\$txn-name as xs:string}, ${2:\\$host-id as xs:unsignedLong})","trigger":"xdmp:transaction","description":"($txn-name,$host-id)"},{"content":"xdmp:transaction()","trigger":"xdmp:transaction"},{"content":"xdmp:transaction-commit(${1:\\$host-id as xs:unsignedLong}, ${2:\\$txn-id as xs:unsignedLong})","trigger":"xdmp:transaction-commit","description":"($host-id,$txn-id)"},{"content":"xdmp:transaction-rollback(${1:\\$host-id as xs:unsignedLong}, ${2:\\$txn-id as xs:unsignedLong})","trigger":"xdmp:transaction-rollback","description":"($host-id,$txn-id)"},{"content":"xdmp:triggers-database(${1:\\$database-id as xs:unsignedLong})","trigger":"xdmp:triggers-database","description":"($database-id)"},{"content":"xdmp:triggers-database()","trigger":"xdmp:triggers-database"},{"content":"xdmp:type(${1:\\$value as xs:anyAtomicType})","trigger":"xdmp:type","description":"($value)"},{"content":"xdmp:unpath(${1:\\$expr as xs:string})","trigger":"xdmp:unpath","description":"($expr)"},{"content":"xdmp:unpath(${1:\\$expr as xs:string}, ${2:\\$map as map:map})","trigger":"xdmp:unpath","description":"($expr,$map)"},{"content":"xdmp:unquote(${1:\\$arg as xs:string})","trigger":"xdmp:unquote","description":"($arg)"},{"content":"xdmp:unquote(${1:\\$arg as xs:string}, ${2:\\$default-namespace as xs:string?})","trigger":"xdmp:unquote","description":"($arg,$default-namespace)"},{"content":"xdmp:unquote(${1:\\$arg as xs:string}, ${2:\\$default-namespace as xs:string?}, ${3:\\$options as xs:string*})","trigger":"xdmp:unquote","description":"($arg,$default-namespace,$options)"},{"content":"xdmp:uri-content-type(${1:\\$uri as xs:string})","trigger":"xdmp:uri-content-type","description":"($uri)"},{"content":"xdmp:uri-format(${1:\\$uri as xs:string})","trigger":"xdmp:uri-format","description":"($uri)"},{"content":"xdmp:uri-is-file(${1:\\$uri as xs:string?})","trigger":"xdmp:uri-is-file","description":"($uri)"},{"content":"xdmp:url-decode(${1:\\$encoded as xs:string})","trigger":"xdmp:url-decode","description":"($encoded)"},{"content":"xdmp:url-encode(${1:\\$plaintext as xs:string})","trigger":"xdmp:url-encode","description":"($plaintext)"},{"content":"xdmp:url-encode(${1:\\$plaintext as xs:string}, ${2:\\$noSpacePlus as xs:boolean?})","trigger":"xdmp:url-encode","description":"($plaintext,$noSpacePlus)"},{"content":"xdmp:user(${1:\\$user as xs:string})","trigger":"xdmp:user","description":"($user)"},{"content":"xdmp:user(${1:\\$user as xs:string}, ${2:\\$extSecId as xs:unsignedLong})","trigger":"xdmp:user","description":"($user,$extSecId)"},{"content":"xdmp:user(${1:\\$user as xs:string}, ${2:\\$extSecId as xs:unsignedLong}, ${3:\\$secDbFirst as xs:boolean})","trigger":"xdmp:user","description":"($user,$extSecId,$secDbFirst)"},{"content":"xdmp:user-external-security(${1:\\$user-id as xs:unsignedLong})","trigger":"xdmp:user-external-security","description":"($user-id)"},{"content":"xdmp:user-last-login(${1:\\$user as xs:unsignedLong})","trigger":"xdmp:user-last-login","description":"($user)"},{"content":"xdmp:user-last-login()","trigger":"xdmp:user-last-login"},{"content":"xdmp:user-roles(${1:\\$name as xs:string})","trigger":"xdmp:user-roles","description":"($name)"},{"content":"xdmp:user-roles(${1:\\$name as xs:string}, ${2:\\$extSecId as xs:unsignedLong})","trigger":"xdmp:user-roles","description":"($name,$extSecId)"},{"content":"xdmp:user-roles(${1:\\$name as xs:string}, ${2:\\$extSecId as xs:unsignedLong}, ${3:\\$secDbFirst as xs:boolean})","trigger":"xdmp:user-roles","description":"($name,$extSecId,$secDbFirst)"},{"content":"xdmp:userid-roles(${1:\\$userId as xs:unsignedLong})","trigger":"xdmp:userid-roles","description":"($userId)"},{"content":"xdmp:userid-roles(${1:\\$userId as xs:unsignedLong}, ${2:\\$extSecId as xs:unsignedLong})","trigger":"xdmp:userid-roles","description":"($userId,$extSecId)"},{"content":"xdmp:userid-roles(${1:\\$userId as xs:unsignedLong}, ${2:\\$extSecId as xs:unsignedLong}, ${3:\\$secDbFirst as xs:boolean})","trigger":"xdmp:userid-roles","description":"($userId,$extSecId,$secDbFirst)"},{"content":"xdmp:validate(${1:\\$node as node()})","trigger":"xdmp:validate","description":"($node)"},{"content":"xdmp:validate(${1:\\$node as node()}, ${2:\\$mode as xs:string})","trigger":"xdmp:validate","description":"($node,$mode)"},{"content":"xdmp:validate(${1:\\$node as node()}, ${2:\\$mode as xs:string}, ${3:\\$typeName as xs:QName})","trigger":"xdmp:validate","description":"($node,$mode,$typeName)"},{"content":"xdmp:value(${1:\\$expr as xs:string})","trigger":"xdmp:value","description":"($expr)"},{"content":"xdmp:value(${1:\\$expr as xs:string}, ${2:\\$map as map:map})","trigger":"xdmp:value","description":"($expr,$map)"},{"content":"xdmp:version()","trigger":"xdmp:version"},{"content":"xdmp:wallclock-to-timestamp(${1:\\$timestamp as xs:dateTime})","trigger":"xdmp:wallclock-to-timestamp","description":"($timestamp)"},{"content":"xdmp:week-from-date(${1:\\$arg as xs:date?})","trigger":"xdmp:week-from-date","description":"($arg)"},{"content":"xdmp:weekday-from-date(${1:\\$arg as xs:date?})","trigger":"xdmp:weekday-from-date","description":"($arg)"},{"content":"xdmp:with-namespaces(${1:\\$nsbindings as (xs:string*|map:map)}, ${2:\\$expr as item()*})","trigger":"xdmp:with-namespaces","description":"($nsbindings,$expr)"},{"content":"xdmp:word-convert(${1:\\$doc as node()}, ${2:\\$filename as xs:string})","trigger":"xdmp:word-convert","description":"($doc,$filename)"},{"content":"xdmp:word-convert(${1:\\$doc as node()}, ${2:\\$filename as xs:string}, ${3:\\$options as (element()|map:map)?})","trigger":"xdmp:word-convert","description":"($doc,$filename,$options)"},{"content":"xdmp:x509-certificate-extract(${1:\\$cert as xs:string})","trigger":"xdmp:x509-certificate-extract","description":"($cert)"},{"content":"xdmp:xa-complete(${1:\\$forestID as xs:unsignedLong}, ${2:\\$txn-id as xs:unsignedLong}, ${3:\\$commit as xs:boolean}, ${4:\\$remember as xs:boolean})","trigger":"xdmp:xa-complete","description":"($forestID,$txn-id,$commit,$remember)"},{"content":"xdmp:xa-forget(${1:\\$forestID as xs:unsignedLong}, ${2:\\$txn-id as xs:unsignedLong})","trigger":"xdmp:xa-forget","description":"($forestID,$txn-id)"},{"content":"xdmp:xor64(${1:\\$x as xs:unsignedLong}, ${2:\\$y as xs:unsignedLong})","trigger":"xdmp:xor64","description":"($x,$y)"},{"content":"xdmp:xquery-version()","trigger":"xdmp:xquery-version"},{"content":"xdmp:xslt-eval(${1:\\$stylesheet as node()})","trigger":"xdmp:xslt-eval","description":"($stylesheet)"},{"content":"xdmp:xslt-eval(${1:\\$stylesheet as node()}, ${2:\\$input as node()?})","trigger":"xdmp:xslt-eval","description":"($stylesheet,$input)"},{"content":"xdmp:xslt-eval(${1:\\$stylesheet as node()}, ${2:\\$input as node()?}, ${3:\\$params as map:map?})","trigger":"xdmp:xslt-eval","description":"($stylesheet,$input,$params)"},{"content":"xdmp:xslt-eval(${1:\\$stylesheet as node()}, ${2:\\$input as node()?}, ${3:\\$params as map:map?}, ${4:\\$options as (element()|map:map)?})","trigger":"xdmp:xslt-eval","description":"($stylesheet,$input,$params,$options)"},{"content":"xdmp:xslt-invoke(${1:\\$path as xs:string})","trigger":"xdmp:xslt-invoke","description":"($path)"},{"content":"xdmp:xslt-invoke(${1:\\$path as xs:string}, ${2:\\$input as node()?})","trigger":"xdmp:xslt-invoke","description":"($path,$input)"},{"content":"xdmp:xslt-invoke(${1:\\$path as xs:string}, ${2:\\$input as node()?}, ${3:\\$params as map:map?})","trigger":"xdmp:xslt-invoke","description":"($path,$input,$params)"},{"content":"xdmp:xslt-invoke(${1:\\$path as xs:string}, ${2:\\$input as node()?}, ${3:\\$params as map:map?}, ${4:\\$options as (element()|map:map)?})","trigger":"xdmp:xslt-invoke","description":"($path,$input,$params,$options)"},{"content":"xdmp:yearday-from-date(${1:\\$arg as xs:date?})","trigger":"xdmp:yearday-from-date","description":"($arg)"},{"content":"xdmp:zip-create(${1:\\$manifest as node()}, ${2:\\$nodes as node()+})","trigger":"xdmp:zip-create","description":"($manifest,$nodes)"},{"content":"xdmp:zip-get(${1:\\$zipfile as binary()}, ${2:\\$name as xs:string})","trigger":"xdmp:zip-get","description":"($zipfile,$name)"},{"content":"xdmp:zip-get(${1:\\$zipfile as binary()}, ${2:\\$name as xs:string}, ${3:\\$options as (element()|map:map)?})","trigger":"xdmp:zip-get","description":"($zipfile,$name,$options)"},{"content":"xdmp:zip-manifest(${1:\\$zipfile as binary()})","trigger":"xdmp:zip-manifest","description":"($zipfile)"},{"content":"xhtml:add-lists(${1:\\$doc as node()?})","trigger":"xhtml:add-lists","description":"($doc)"},{"content":"xhtml:clean(${1:\\$doc as node()?})","trigger":"xhtml:clean","description":"($doc)"},{"content":"xhtml:restructure(${1:\\$doc as node()?})","trigger":"xhtml:restructure","description":"($doc)"},{"content":"xinc:link-expand(${1:\\$context as node()}, ${2:\\$ref as element(xi:include)})","trigger":"xinc:link-expand","description":"($context,$ref)"},{"content":"xinc:link-references(${1:\\$node as node()})","trigger":"xinc:link-references","description":"($node)"},{"content":"xinc:node-expand(${1:\\$node as node()})","trigger":"xinc:node-expand","description":"($node)"},{"content":"xp:dereference(${1:\\$context as node()}, ${2:\\$xpointer as xs:string})","trigger":"xp:dereference","description":"($context,$xpointer)"}]